{
  "transpiled": true,
  "noir_version": "0.34.0+e0185e75e65df08b5334856f8bf63fa3aed7049a",
  "name": "Token",
  "functions": [
    {
      "name": "_reduce_total_supply",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)",
        "aztec(internal)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": null
      },
      "bytecode": "H4sIAAAAAAAC/41TPW8UMRB93vHH7NiXlhQHggYJ6SB3AvYAiQJxJAVVegok+AOUiJIeiQIh0SP+S/4UvPFeTiFVVvJ4PZ55b/w8XkPCsIHoKbCGSKZBeQB+hSMD+vo2su50d8617uaBgSNsuQnZuifSvkF6RHc79UA3mDqKMHoapFxdxSurNQLidVeeXXd6Jd3Ky8uqxAmYFcQQVMpD4B7KWQDu9sAeroYs6nv35z2i656eE885dLKCdZBASKFjQhlJyyHqSsgEySs8Nk5SWFWMdIeRqF9QVng2BaVGkgejNalTqLqkXvmpa/f/9/faBztCzlYJ9grVS1wial66cyCG5ScHkHBAUeW+VkalG5E0J2kLkrzFYk+SOkkjSWq54yV0wsHdxgibI6ihtUNFNfUASw7BqGyZATkZwd/BHDxegrWk1I4Svad2RTJDPoJSfjhhXmHZOebEi/CG6+LB+kXs1ZxgdRq0utq1EaE2InxCO+tKMKTRtuKC2wt3EQMkljKmI9pe1Oe5qAnJC+FdlX4UJ7f63LOqZzpJJEmOTvJ1Jtmy11Q23jAava+/s8WTJ0idyTM71KIXMxZS5uKU3/aUQ+X5i/fOli2qufKNZUJ5Q/5QlvOTcKJphT9bv9UUvK2VcJv+My6YMGpUu8UeNzV/hZzO59buY36FBPytxnT1hEq6qurL1JeDqlZfjmQfV/i1YbOHTnyyxfHF8cU/nhNQkgQEAAA=",
      "debug_symbols": "7ZzbTuMwEIbfJde98Bx84lVWK1SgoEpVQVBWWiHefV1InLQJMVaTZQy9AQcGz/+NHY9t7L5UN6ur57vL9fb2/qm6+PVSbe6vl7v1/TY8vbwuqqvH9Wazvrvs/rhS+y+Ab/ZPD8vt/vFpt3zcVRdqUa22N+F7+Nvb9WZVXVh+/b2ogLKsOctaZ1mbLGubZe2yrH2ONaosa8iyzmpLzGpLzGpLzGpL/HxbLnpmnmxt6LWNpmBwwJZRNbWGom+t1VDNxiPU1iZ4ObDeq7YnqAYFXFuCIv6vut0p0bbURNunog3ofMNIrBOqHejG2qHCnmo/ieoQ7EPZoWpS81UN81WN81VNJ1TNZJq6mSwkWt0qi7W1Va7XV4lPUTLlW0NZIxplZSfKyk40+P6i9di8P6GsOTX+GB17gG9dwL4Netba+8baKDCJSGqrmyE5FF0vkr5s/awK1w+F68fC9VPh+rlw/bpw/aZw/bZs/Vr++Ok46ne6p198/3Fx3haKpqf/K/qPU1E/pea0YExc9xjb9h8KLHv9rnD9vmz9RonXr1Wr3x/oH1xvQVxvuXbdbNyQcbs2c23F+B4XOMdlMC54jstgXOgcl8G48Dkug3HR3ysurEzDysDduOxhzU+ClT8jy4Pl2IuZ/TGs/OlbJixG2M5ip4aVP9ebDtZ+NDGMA2Aod/aoP9r+nma4tCBKDYpSQ6LUsCg1ego1o+O9NfO7sJO4GBvIrZvGxdiI8pnh0yT+jaUJGgpNeOzCqaldkD52AZO40HFTisxxczuc3wVN4sLHrUHubE3VLngaFya6gJ4LPYULppZCw7ELM7WLjnHtwk7iwvrowvdcuPldTPJ2a4jNrfG4ub2a3wXM7+Kjt9u7xoVTmJpFIsddPbQ6MYs01M4iyafOngBHJaCBUrNIHeezYcg/7hWevhmsHoM1XwAbk7ohk4I1oJv8HIp0YB30g1LiAWLGMahsHwDEAzgcBUDpAKh8BADXB6DSAbh0AF06gPhhNAVgSwdwpQP4wgFAfCZOAYjPxCmA0jMxlJ6JofRMDKVnYpC/oDGuBUgdavcclfjuBkbEFZ+3R3DfAMTn7RSA+LydAED5K+gEgPzz2KPnOQFZOoBrN4Md97cAUPyJbIc4ClDAkVrfArhU1iBu9hM92f6mGYo/wT1+ghhQ/BWqFID4O1QJABJ/iSoFIP4WQApA/DWqFID4vJ0CkJ+3EwDy83YCoPCrMEClZ2L5l5lTAKVnYvnXmVMApWdi+ReaxwBew+Of5eN6ebVZ1Z82dPu8ve58+NDu78P7b4LxPw==",
      "brillig_names": [
        "_reduce_total_supply"
      ],
      "assert_messages": {
        "64": "call to assert_max_bit_size",
        "32": "Not initialized",
        "74": "call to assert_max_bit_size",
        "112": "Array index out of bounds",
        "141": "attempt to add with overflow",
        "91": "attempt to subtract with underflow",
        "120": "attempt to add with overflow",
        "37": "Function _reduce_total_supply can only be called internally",
        "130": "Array index out of bounds"
      }
    },
    {
      "name": "burn_public",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "from",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          },
          {
            "name": "nonce",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": null
      },
      "bytecode": "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",
      "debug_symbols": "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",
      "brillig_names": [
        "burn_public"
      ],
      "assert_messages": {
        "893": "attempt to add with overflow",
        "314": "Array index out of bounds",
        "695": "attempt to add with overflow",
        "887": "attempt to add with overflow",
        "302": "attempt to add with overflow",
        "494": "call to assert_max_bit_size",
        "488": "Message not authorized by account",
        "866": "Array index out of bounds",
        "671": "attempt to add with overflow",
        "220": "attempt to add with overflow",
        "604": "call to assert_max_bit_size",
        "729": "Array index out of bounds",
        "793": "Array index out of bounds",
        "34": "Not initialized",
        "330": "Array index out of bounds",
        "199": "Array index out of bounds",
        "260": "attempt to add with overflow",
        "650": "attempt to add with overflow",
        "705": "Array index out of bounds",
        "775": "Array index out of bounds",
        "47": "invalid nonce",
        "556": "attempt to subtract with underflow",
        "687": "Array index out of bounds",
        "230": "Array index out of bounds",
        "102": "attempt to add with overflow",
        "745": "Array index out of bounds",
        "858": "Array index out of bounds",
        "343": "attempt to add with overflow",
        "660": "Array index out of bounds",
        "846": "attempt to add with overflow",
        "322": "Array index out of bounds",
        "191": "Array index out of bounds",
        "572": "Storage slot 0 not allowed. Storage slots must start from 1.",
        "249": "Array index out of bounds",
        "642": "Array index out of bounds",
        "758": "attempt to add with overflow",
        "621": "attempt to subtract with underflow",
        "874": "Array index out of bounds",
        "804": "attempt to add with overflow",
        "225": "Index out of bounds",
        "737": "Array index out of bounds",
        "539": "call to assert_max_bit_size",
        "472": "Nested call failed!",
        "926": "attempt to add with overflow",
        "207": "Array index out of bounds",
        "716": "attempt to add with overflow",
        "515": "Storage slot 0 not allowed. Storage slots must start from 1."
      }
    },
    {
      "name": "unshield",
      "is_unconstrained": false,
      "custom_attributes": [
        "aztec(private)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "call_context",
                  "type": {
                    "fields": [
                      {
                        "name": "msg_sender",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "storage_contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "function_selector",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::function_selector::FunctionSelector"
                        }
                      },
                      {
                        "name": "is_delegate_call",
                        "type": {
                          "kind": "boolean"
                        }
                      },
                      {
                        "name": "is_static_call",
                        "type": {
                          "kind": "boolean"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::call_context::CallContext"
                  }
                },
                {
                  "name": "historical_header",
                  "type": {
                    "fields": [
                      {
                        "name": "last_archive",
                        "type": {
                          "fields": [
                            {
                              "name": "root",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "next_available_leaf_index",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                        }
                      },
                      {
                        "name": "content_commitment",
                        "type": {
                          "fields": [
                            {
                              "name": "num_txs",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "txs_effects_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "in_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "out_hash",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::content_commitment::ContentCommitment"
                        }
                      },
                      {
                        "name": "state",
                        "type": {
                          "fields": [
                            {
                              "name": "l1_to_l2_message_tree",
                              "type": {
                                "fields": [
                                  {
                                    "name": "root",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "next_available_leaf_index",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                              }
                            },
                            {
                              "name": "partial",
                              "type": {
                                "fields": [
                                  {
                                    "name": "note_hash_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "nullifier_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "public_data_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::partial_state_reference::PartialStateReference"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::state_reference::StateReference"
                        }
                      },
                      {
                        "name": "global_variables",
                        "type": {
                          "fields": [
                            {
                              "name": "chain_id",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "version",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "block_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "slot_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "timestamp",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 64
                              }
                            },
                            {
                              "name": "coinbase",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::eth_address::EthAddress"
                              }
                            },
                            {
                              "name": "fee_recipient",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "gas_fees",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::global_variables::GlobalVariables"
                        }
                      },
                      {
                        "name": "total_fees",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::header::Header"
                  }
                },
                {
                  "name": "tx_context",
                  "type": {
                    "fields": [
                      {
                        "name": "chain_id",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "version",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "gas_settings",
                        "type": {
                          "fields": [
                            {
                              "name": "gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "teardown_gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "max_fees_per_gas",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            },
                            {
                              "name": "inclusion_fee",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::gas_settings::GasSettings"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::transaction::tx_context::TxContext"
                  }
                },
                {
                  "name": "start_side_effect_counter",
                  "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 32
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "from",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "to",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          },
          {
            "name": "nonce",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "fields": [
              {
                "name": "call_context",
                "type": {
                  "fields": [
                    {
                      "name": "msg_sender",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "storage_contract_address",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "function_selector",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::function_selector::FunctionSelector"
                      }
                    },
                    {
                      "name": "is_delegate_call",
                      "type": {
                        "kind": "boolean"
                      }
                    },
                    {
                      "name": "is_static_call",
                      "type": {
                        "kind": "boolean"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::call_context::CallContext"
                }
              },
              {
                "name": "args_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "returns_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "min_revertible_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "is_fee_payer",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "max_block_number",
                "type": {
                  "fields": [
                    {
                      "name": "_opt",
                      "type": {
                        "fields": [
                          {
                            "name": "_is_some",
                            "type": {
                              "kind": "boolean"
                            }
                          },
                          {
                            "name": "_value",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "std::option::Option"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::max_block_number::MaxBlockNumber"
                }
              },
              {
                "name": "note_hash_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "nullifier_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "key_validation_requests_and_generators",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "request",
                        "type": {
                          "fields": [
                            {
                              "name": "pk_m",
                              "type": {
                                "fields": [
                                  {
                                    "name": "x",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "y",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "is_infinite",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                              }
                            },
                            {
                              "name": "sk_app",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"
                        }
                      },
                      {
                        "name": "sk_app_generator",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"
                  }
                }
              },
              {
                "name": "note_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::note_hash::NoteHash"
                  }
                }
              },
              {
                "name": "nullifiers",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "note_hash",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::nullifier::Nullifier"
                  }
                }
              },
              {
                "name": "private_call_requests",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "call_context",
                        "type": {
                          "fields": [
                            {
                              "name": "msg_sender",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "storage_contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "function_selector",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::function_selector::FunctionSelector"
                              }
                            },
                            {
                              "name": "is_delegate_call",
                              "type": {
                                "kind": "boolean"
                              }
                            },
                            {
                              "name": "is_static_call",
                              "type": {
                                "kind": "boolean"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::call_context::CallContext"
                        }
                      },
                      {
                        "name": "args_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "returns_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "start_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "end_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::private_call_request::PrivateCallRequest"
                  }
                }
              },
              {
                "name": "public_call_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "item",
                        "type": {
                          "fields": [
                            {
                              "name": "contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "call_context",
                              "type": {
                                "fields": [
                                  {
                                    "name": "msg_sender",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "storage_contract_address",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "function_selector",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::function_selector::FunctionSelector"
                                    }
                                  },
                                  {
                                    "name": "is_delegate_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  },
                                  {
                                    "name": "is_static_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::call_context::CallContext"
                              }
                            },
                            {
                              "name": "args_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "returns_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "revert_code",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 8
                              }
                            },
                            {
                              "name": "start_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "end_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                  }
                }
              },
              {
                "name": "public_teardown_call_request",
                "type": {
                  "fields": [
                    {
                      "name": "item",
                      "type": {
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "call_context",
                            "type": {
                              "fields": [
                                {
                                  "name": "msg_sender",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "storage_contract_address",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "function_selector",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::function_selector::FunctionSelector"
                                  }
                                },
                                {
                                  "name": "is_delegate_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                },
                                {
                                  "name": "is_static_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::call_context::CallContext"
                            }
                          },
                          {
                            "name": "args_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "returns_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "revert_code",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 8
                            }
                          },
                          {
                            "name": "start_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "end_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                      }
                    },
                    {
                      "name": "counter",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                }
              },
              {
                "name": "l2_to_l1_msgs",
                "type": {
                  "kind": "array",
                  "length": 2,
                  "type": {
                    "fields": [
                      {
                        "name": "recipient",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::eth_address::EthAddress"
                        }
                      },
                      {
                        "name": "content",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::messaging::l2_to_l1_message::L2ToL1Message"
                  }
                }
              },
              {
                "name": "start_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "end_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "note_encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "note_hash_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::NoteLogHash"
                  }
                }
              },
              {
                "name": "encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "randomness",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::EncryptedLogHash"
                  }
                }
              },
              {
                "name": "unencrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::LogHash"
                  }
                }
              },
              {
                "name": "historical_header",
                "type": {
                  "fields": [
                    {
                      "name": "last_archive",
                      "type": {
                        "fields": [
                          {
                            "name": "root",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "next_available_leaf_index",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                      }
                    },
                    {
                      "name": "content_commitment",
                      "type": {
                        "fields": [
                          {
                            "name": "num_txs",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "txs_effects_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "in_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "out_hash",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::content_commitment::ContentCommitment"
                      }
                    },
                    {
                      "name": "state",
                      "type": {
                        "fields": [
                          {
                            "name": "l1_to_l2_message_tree",
                            "type": {
                              "fields": [
                                {
                                  "name": "root",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "next_available_leaf_index",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                            }
                          },
                          {
                            "name": "partial",
                            "type": {
                              "fields": [
                                {
                                  "name": "note_hash_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "nullifier_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "public_data_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::partial_state_reference::PartialStateReference"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::state_reference::StateReference"
                      }
                    },
                    {
                      "name": "global_variables",
                      "type": {
                        "fields": [
                          {
                            "name": "chain_id",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "version",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "block_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "slot_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "timestamp",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 64
                            }
                          },
                          {
                            "name": "coinbase",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::eth_address::EthAddress"
                            }
                          },
                          {
                            "name": "fee_recipient",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "gas_fees",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::global_variables::GlobalVariables"
                      }
                    },
                    {
                      "name": "total_fees",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::header::Header"
                }
              },
              {
                "name": "tx_context",
                "type": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "version",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "gas_settings",
                      "type": {
                        "fields": [
                          {
                            "name": "gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "teardown_gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "max_fees_per_gas",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          },
                          {
                            "name": "inclusion_fee",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::gas_settings::GasSettings"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::transaction::tx_context::TxContext"
                }
              }
            ],
            "kind": "struct",
            "path": "protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"
          },
          "visibility": "public"
        }
      },
      "bytecode": "",
      "debug_symbols": "",
      "brillig_names": [
        "pack_arguments_array",
        "call_private_function_internal",
        "unpack_returns",
        "get_public_data_witness",
        "lt_32_hint",
        "decompose_hint",
        "lte_16_hint",
        "key_registry_get_stored_keys_hint",
        "get_public_keys_and_partial_address",
        "get_notes_internal",
        "get_collapse_hints",
        "get_key_validation_request",
        "notify_nullified_note",
        "unsafe_rand",
        "notify_created_note",
        "emit_encrypted_note_log",
        "pack_arguments",
        "enqueue_public_function_call_internal",
        "directive_invert",
        "directive_integer_quotient"
      ]
    },
    {
      "name": "balance_of_public",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)",
        "aztec(view)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "owner",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "kind": "field"
          },
          "visibility": "public"
        }
      },
      "bytecode": "H4sIAAAAAAAC/11SvW4WMRAc/+2NbZIKKSk+6BEHuU+CO4FElY+kSkHBAyBRICR6xCPmpWDWFyKBpfXt+rwzu+NdkEI8IvEWWJCSacP0AlqTzABeP4PxxNMnxTzthigLm34ibX6StX9Eea3jsw3Cu7nx676F5wNt7PzwF5myuiAENoTK6RXwFNNt8DJ0qPACeQ/NuALZy6uCRsUSUshyc6wr6rRGCjJNUV6ZlnHFfza5sd9lp3qgbbIuSJQGm4pAA7yCzC7Kl+hO6WxOFN3jAPGwD156d7Gv6E1sMmbVYDO2hmTVK78DZ7xfBTrujtqqrcHyAZbrW5f13/X7vwWew3ZVrndVDsi5HvwwCoP1zSNIeEQRn9U8ZXWW1bCxqrTsEqUrr0bpVuB9p3d+P8mK2gvtiUpvrsDnXQE9IZmOrgGzP+pXvW/xhLSL0W1078nepLGcay8O8eVBxJjEXlyYLTDRurQw4XlT3zjN+C7MxDLj1+YDUYLjU8ofh1PPlFCZ2S6gKWHzOdRnzGHbbZ9DAf5kUzo9oYuukx6WEUaS3cMq9jrjxzEkITrx1YbL+8v7P4Nt4pkGAwAA",
      "debug_symbols": "7ZvdbuIwEIXfJddc+Gc8nuFVVqsKWqiQEFRAV1oh3n0DTZxAorgIqDxrbtqkPYy/Mwoeewz74m02/Xx/Wazm620x/rUvluvXyW6xXpV3+8OomG4Wy+Xi/aX950Idf2h70m8/Jqvj7XY32eyKsRoVs9Vb+bt87XyxnBVjD4dRR8bWV0J2Pkg1mh4tGFVHLS+5Uau+yMhGV2osRzlT/x4VGm6g1kpDpdTKwo9yu1uy7W2dbY5lWxvi2qMFF6Em7Wo1GWU61HgX6jLZ59jH0P5xoelxoflhoY36duijWl+lNlepe2cGx4jVCxyziVjVYX7AllNPfU+sq0E0U9BaZfviOgpvBYQGwmrqVTdv99bDbfjkErJw6bJwiVm49Fm4pCxccg4urcrCpc7CpcnCZRZrHwtZuMxi7WOzWPvY29c+5Z7WhAGYIz6/uafDAIBkm5DkT9AkEZoFQoOSCK0lQhuJ0LGqjkpBDBpdA63ORhj1hGYXQms8DHfhnHf1BFxe0uGiCwcgmt6JpkfR9F40PYmmZ8n0Tomm16LpjWj61Od7gkBPrkOf+JxD4UyyvMQO/c/POaRCaKsj9BoxnE2ib+8e8UiPSjS9Fk1vEqdv2g7o+Yy+qwaL9Vk8WGp2I9i3vwCsexRATWDzlRX7zEpPVuCZlZ6suGdWerKCz6z0ZMX/T1kBVWMDaGhn5WiV8rGa+urrOqsQnl8AvrDqU1+qXWnVBKutDU1lNfV13R2txheB2g9bBReslvHV5QD2DgO4oQFSb3gNbj596pvP8KlfR9D5iKtPvOFFxgzQU+INL1Lc0FNEzRbqSYGttx2vibfHhpsclHh7LEKf+FFUhB5E0yfemozQJ34UFaFPvDJH6EW3hSn1yjxIz8lX5kF60bWWRddaFl1rWXStZdG1lkXXWhZcaw/l7Z/JZjGZLmfVd1jnn6vX1ldad38/vv5Tiv8B",
      "brillig_names": [
        "balance_of_public"
      ],
      "assert_messages": {
        "96": "attempt to add with overflow",
        "42": "Storage slot 0 not allowed. Storage slots must start from 1.",
        "66": "call to assert_max_bit_size",
        "84": "Array index out of bounds",
        "22": "Function balance_of_public can only be called statically",
        "19": "Not initialized"
      }
    },
    {
      "name": "shield",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "from",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          },
          {
            "name": "secret_hash",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          },
          {
            "name": "nonce",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": null
      },
      "bytecode": "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",
      "debug_symbols": "",
      "brillig_names": [
        "shield"
      ],
      "assert_messages": {
        "192": "Array index out of bounds",
        "1024": "attempt to add with overflow",
        "250": "Array index out of bounds",
        "817": "Array index out of bounds",
        "936": "attempt to add with overflow",
        "226": "Index out of bounds",
        "540": "call to assert_max_bit_size",
        "473": "Nested call failed!",
        "1052": "Array index out of bounds",
        "982": "attempt to add with overflow",
        "208": "Array index out of bounds",
        "915": "Array index out of bounds",
        "1104": "attempt to add with overflow",
        "516": "Storage slot 0 not allowed. Storage slots must start from 1.",
        "830": "attempt to add with overflow",
        "315": "Array index out of bounds",
        "894": "attempt to add with overflow",
        "50": "invalid nonce",
        "303": "attempt to add with overflow",
        "495": "call to assert_max_bit_size",
        "489": "Message not authorized by account",
        "1071": "attempt to add with overflow",
        "35": "Not initialized",
        "873": "attempt to add with overflow",
        "221": "attempt to add with overflow",
        "1065": "attempt to add with overflow",
        "1044": "Array index out of bounds",
        "593": "Storage slot 0 not allowed. Storage slots must start from 1.",
        "331": "Array index out of bounds",
        "200": "Array index out of bounds",
        "261": "attempt to add with overflow",
        "834": "Array index out of bounds",
        "907": "Array index out of bounds",
        "971": "Array index out of bounds",
        "953": "Array index out of bounds",
        "883": "Array index out of bounds",
        "557": "attempt to subtract with underflow",
        "103": "attempt to add with overflow",
        "231": "Array index out of bounds",
        "865": "Array index out of bounds",
        "923": "Array index out of bounds",
        "344": "attempt to add with overflow",
        "850": "attempt to add with overflow",
        "1036": "Array index out of bounds",
        "323": "Array index out of bounds"
      }
    },
    {
      "name": "transfer_public",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "from",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "to",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          },
          {
            "name": "nonce",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": null
      },
      "bytecode": "H4sIAAAAAAAC/41YW6gkVxXd55yq6uqq7r5V3V19q5+3H/fecUKPmYmmJokEAnlMRklMAkIQFZUgfokPFIQQGDDGqEGiEPBHg1+CHxofIQr5EkEmJB+iCEHUYMT5Ef3Jh0KIa+1T3bfHTEIaqvo89tl77cfZZ586K87Yc+LiiyJnxUVNvCQ5LfgleJoi8e1TieI74jvuRz++wz9i8ZjzmBR3niMB3ndKiPddEuF9QRp43y3xu0G4dxeXXiTTGV9NfSe3ipegktKzYkySiEmT5hmRgTQvGJE5SdJEojBtDsQ004lEaXq/jtaPIiFqQI+khZZpvxct/zOy+XUgQPbA+ljStSzBM26l6B5JSklr8xcVFi/4ziAnyys0BJytVNZl6HU3vaCLXrDp7QXo9Ta9Vg+9/qbX7KNX+B5R7uNlh+jvD8uKemKslLPGGTYHtqzsfkmakt1yv7KDYiLO7QPR/gCtgaukCQ3e3xKXugFJ98+Ie0IGa7m3Mllama6rTL+sTNFPxJXNAjTBEC83opHHZ8R8UIq1PAgJZbvo4F1MYImPyISWgKBiEkg06RQVe14Rkem2Ndu2DjaKRes5ugtKWnJsqSrBlm5hl5UsV5Wdr9BbWbRaO63KLib1ynDOlfOdleA5X4KKLJf2LVoFnsW0su0ZPHGwlq/APtDuq7BPUc6h1+9lvpbHK3NQILyKvT6GnpA+VQVluZZvgbIcFRj+Ec3y7cpMZ9SckMoT/9ASM0vfBPTnxPY/4BAqoJB+ZSYznQaG2YQ9e9KzE6AbH+gaGnHanFVmdgCqKaimFrNT2OBgsDb3Y6IgnIIofyz9tbwEOAWePgUvOLdYYu4Xsrygwe36Vk1RLiqzmIMpCZ0nXIHweVltCdXuSogl0XypPOcknZP0N570PAI2dkgKEsYB9q/7ObZyKN7gnsW8sn08yynw7UQRQf9uY9qiNq13wh9lvoVBAARYqCZ/8powkOn1/kIFFbU6B9ipZrm3AOGrslDOZoYxtxxx7HVZrOUKtF5wGM+K2h+B+eroGPP/kuNapYVXKdhV6RCtQ3uM9/HqCBF6RMntOXRZqkH+6w1S2UN4cT5bGwRkEwLfAP/FCODNsSzXxnr5UwS6UH5IvmDOqFmp1Q5p6CON+mONGlDIcWVW2yjGDoFX7Ka34Ny2t3oL/H614m8qftAC6Up3A9BiolB1ijmMZQ5rA8qc+4MGox5LaGquk9XaXFQdzHSlaDlHGyK5HteuW3lZi6PKHB1C6a2xF0enQHiTnNoSnsL7lBJiSXR4rDwPSXpI0ts8KfRaXiPUVErN4hD64DmeAh+TQnvZ2YC+p3aPLOmTSlq6g2yaIV13seUCJM/eTmo+Sdn827S621ZGjCm7qfqOyT+zaSUpdn10pkCuYT4omaRbO63KZr2TIyfYHjk8Mph8wx2eTB2F53k1kze3MjwFdGg7JLbu2jys6co8sklXroV0ZS4h3w+wRwZ7GDKPSrFNbOYxpRycEfs3nA7m65UJRoDEFBbqwTNQSBQ4soNNYivrxDbwia0c6fSosqOSPXvSsyXQjbu6Zoz3uBlARBdUY1CN7RizepaN+SKf8YhHpSbVYCu7tGQTkIb+KYNxJfRdyF7AyW5wo0RnH7r386+ce/r0c/fd+eylSw9+9F3vuXL3l3/52Sdvf+W17/yb5h7fINGpwTOfEsoYMTR5zspQBXkthpUM+xDW1zykLXC+7qWzqb384Z/84L4HnrnywJO3XDg9f+q7Dz/9/S9+s1MdXrnz4zLUxX3F2qtMj8brWR6PPaLOKSZXMT2dyW4vRGsAruTpr8bM6nokZ5CAy4lhe1f34M08GcGbL8nIZ7weReQ2r2zee7ueSkc55ZLmqDKjHBa58PKLXxCwjPJeApZ/lqQud3DON5Ibt2G7/b3xfz+JOxIlcYDFr0rgK4SgkUw4aMEjTmI0Ow1YI6HRgxPvKhI4UAKHDRRhX2bcd84iokOnk04NeE9Ql4L8Z/DlABy0WA8mezkk/0dyH9csFuvtmnOp7mOn0rwdUB5x87fw5ImWSjbEcZE2HfbBi+LWNq5M4kNLwTTzCuamOsE7sYaDNQIHTHB7XlsjCSYchDUSF8AaQQcoow4koB07ULgcFHkArVygTSVu5JbNhCxAFTmqnSdEuhS3UZhG3VHTG7VWM+Pu61q0wq6Od2mU3taetCUmNABcC4Yw4R7CwN7gwwBlXt4JgTUIc2+rSm1FkmclWdubNwBC8gp3AISVhNia2XaTRoH3tnplCyDcOJVFfO1Q6nfxRL+TnLxJAXX4+Fhh+CC4W3hc7dAPKUhEpH1agrV9EA4lvlAXB02Uv04dGr4ThwZwaBgQ0yc8JnojnHCQPgpCODRUhwYxhoNQnc3Qx5mlzqYBk0agZkxOVjOEkxB8Pyfhri+vacoGTNlAr2HRiho63nizKRtbU0YwZbTXAvtL0qp9GXSgbhRHgTfTo2omkjwurbX92vW8PbVEHQEwvCvZmGBiBYMZ18LukBgQAgo3DV4yGhE4PIVM4s/2loUQF6WNyjTiW/TO5O9wLm0jVbg0ZvR8zwcYmBEIdxyFOwp3+c1Sp0F63HQppNvDoh9Kr64KAl8V2N2qwO9vzXFpl0e8inQU6RgLP/PZye97xzChSDrOJWFtfHvN7MRc0b0ayq89FCXZiDTd4JbNCR+q8JDCQwp/oRYuITcR9OV+TnPGRN5VfbkNmbJMj0J6qJXtH3ytDH3dNfT1W1uPqrRXZ/eNvsw/f61zou3W+oaI+wHP/AFKAfsPVAcuwoE8wKN3wJxzeYa5f0pWa1dYrXJKJkGc9j0SOk+I27F9zd+OfdFC+UqIJVE/U54ZSTOSvu5JoczgGiWdP3E9C5wDBZ5+AHx6exh0atAI7bp+GbB+qeunQG/T/Z36CZfqPjjEvkJDK9+2Bqzi3BaWG79Jgwy3ZKja9ddB0iw9DcyHMVeMOPY+fCZwx7QIhrHEpeQ7pe+mM8yfkdnVl6WrKvOJ3vb0TpiiGu/z3pe1U+iZpdTzplpPO4FnU7d2H9Nbq7uV16IRXOQekmztbvPyA1aSlB/qdXyilkhVY95SA3JP7UzLtgm/slQm3RqEXwSKzG56Bee2vfQt8PvVir+p+FnjAqmWo0B79aXPfXLn0mceocGoh9r/07TjY6qDCVJFyzm14We8DT16yiqmuH7g/tzbGruYHoDwS3KwJeRF+kAJsSSazJTnhKQTkj7iSaFXdo0w9Ld0zwI3pRTPDGH4mN6Uss4G9DfqgJCMPuHXmpQxuj8oMfmklHU63998qKk/EeyT0pang7ria/P7QGX2/aedAYKzpqD5msPKDLE3+/vwT6njQ6AuPWrjUb+gqEd4R4JyejBGVXfCDdUiy9kRfDoawqdDFLh2ONI8MWKeGA2B96cy9HhH/Gx03sQujlJknAjppoH55+LG2v0KIlwcrt3l88zooWHpEEORc9potrGgifMu2Qe0JE74URB/+lEw8Y//FAeGv40Tw4yGBSnEpXHMbqhdG8dxym4T0ptr9/w5Q2Up+HpdRFBY1Igb7DYgMvaZUXnGENrcRYiDseagMshUZTR3Fjku8v3UI8EZ5fVqUa8WxLSpVztuUy/8qV5t/2z1+nvcVuRY0AHEjueWaBes4w67LUhprd3LfqoRR9efl/Jyefl/va+S5WoVAAA=",
      "debug_symbols": "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",
      "brillig_names": [
        "transfer_public"
      ],
      "assert_messages": {
        "640": "Storage slot 0 not allowed. Storage slots must start from 1.",
        "893": "Array index out of bounds",
        "311": "Array index out of bounds",
        "180": "Array index out of bounds",
        "561": "Storage slot 0 not allowed. Storage slots must start from 1.",
        "238": "Array index out of bounds",
        "756": "Array index out of bounds",
        "823": "attempt to add with overflow",
        "945": "attempt to add with overflow",
        "735": "attempt to add with overflow",
        "214": "Index out of bounds",
        "528": "call to assert_max_bit_size",
        "461": "Nested call failed!",
        "714": "attempt to add with overflow",
        "906": "attempt to add with overflow",
        "196": "Array index out of bounds",
        "912": "attempt to add with overflow",
        "504": "Storage slot 0 not allowed. Storage slots must start from 1.",
        "885": "Array index out of bounds",
        "690": "attempt to add with overflow",
        "303": "Array index out of bounds",
        "748": "Array index out of bounds",
        "812": "Array index out of bounds",
        "291": "attempt to add with overflow",
        "483": "call to assert_max_bit_size",
        "477": "Message not authorized by account",
        "608": "call to assert_max_bit_size",
        "669": "attempt to add with overflow",
        "724": "Array index out of bounds",
        "209": "attempt to add with overflow",
        "794": "Array index out of bounds",
        "584": "Storage slot 0 not allowed. Storage slots must start from 1.",
        "706": "Array index out of bounds",
        "319": "Array index out of bounds",
        "188": "Array index out of bounds",
        "249": "attempt to add with overflow",
        "764": "Array index out of bounds",
        "624": "attempt to add with overflow",
        "877": "Array index out of bounds",
        "679": "Array index out of bounds",
        "36": "invalid nonce",
        "545": "attempt to subtract with underflow",
        "865": "attempt to add with overflow",
        "91": "attempt to add with overflow",
        "219": "Array index out of bounds",
        "21": "Not initialized",
        "661": "Array index out of bounds",
        "332": "attempt to add with overflow",
        "777": "attempt to add with overflow"
      }
    },
    {
      "name": "un_get_decimals",
      "is_unconstrained": true,
      "custom_attributes": [],
      "abi": {
        "error_types": {},
        "parameters": [],
        "return_type": {
          "abi_type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          },
          "visibility": "public"
        }
      },
      "bytecode": "H4sIAAAAAAAA/7VUwU7DMAxN1o4mhTIEf8AXtGgHuA124sKBA/eyRmMCWqkt/08jYvowYUJbZimyk9rP9rNVKUaRTk/FT5HC8xALv8htj5dO6+FMGNjC3fP9pNCeQoNgX8/nFjs6TN25FiOpobGTAWOpvrCofsql3LGSefwu4I3meDKcU2evTX/31qxeHz7en02L40em+ES4WMTzEXHZ1H1brvrbqmpN1yFC7EEVfyCmgPhSbur7CqOmuyE9mbbbNDVGHf0TyTKSgE2i2X3hdL6f3FhcFR63yFzNgvWQAg8B9/eK84oblILWh8lfSMhD+SkX/cfslhw7u+ubtlybR1N+L5xk9HDNW5SeVtHGdUnAVh7fbTKDGKRPsbx0p3bPwB/jFWCE/IVJ1qdvBNYnYj4Jq3EmRm4i0BpiCGvivnF+KCZm2BSTid9zyCAffbPr8gkg2mLdgQcAAA==",
      "debug_symbols": "7ZjPioMwEIffJWcPM5N/k77KshTb2iKILa1dWIrvvrZrrLsGPFhYdHNRor/Eb77kEHMTu2xzPazzcn+8iNXbTRTHbVrlx7Jp3epEbM55UeSHdf+xgPuFH/HLKS3vrUuVniuxgkRk5a65N133eZGJlVV1MohZdm2QwXZRBBnIatJtVuvnsCihfk+EmwDBygfZ0AiEkh5YGf4NgTCFgm0bdIAjFAa8CkNmQIETKFwn2Ukeo2A/qIXBhCCFKIgNU9uJ2OIIDTr0utEp9fyGtYE0Ifk0YX+JBOmx0dyNbdxorexrVb3ZURBaI8YPrJh+ZO9e5L/1IrsSNfDAi4pegl509BL0YqKXoBcbvQS9cPQS9OKil5AXgugl6AWX5cXKzgtN8rKw/e7LvCxsv/syL+oPvKDqvBg9Uimj8X/F9MxKMA96PWt6M2t6O2t6ng+9xAG9mzO9hPnS103zIz3n6abI2iPJ/bXc9k4oq8/T95sm/AU=",
      "brillig_names": [
        "un_get_decimals"
      ]
    },
    {
      "name": "setup_refund",
      "is_unconstrained": false,
      "custom_attributes": [
        "aztec(private)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "call_context",
                  "type": {
                    "fields": [
                      {
                        "name": "msg_sender",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "storage_contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "function_selector",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::function_selector::FunctionSelector"
                        }
                      },
                      {
                        "name": "is_delegate_call",
                        "type": {
                          "kind": "boolean"
                        }
                      },
                      {
                        "name": "is_static_call",
                        "type": {
                          "kind": "boolean"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::call_context::CallContext"
                  }
                },
                {
                  "name": "historical_header",
                  "type": {
                    "fields": [
                      {
                        "name": "last_archive",
                        "type": {
                          "fields": [
                            {
                              "name": "root",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "next_available_leaf_index",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                        }
                      },
                      {
                        "name": "content_commitment",
                        "type": {
                          "fields": [
                            {
                              "name": "num_txs",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "txs_effects_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "in_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "out_hash",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::content_commitment::ContentCommitment"
                        }
                      },
                      {
                        "name": "state",
                        "type": {
                          "fields": [
                            {
                              "name": "l1_to_l2_message_tree",
                              "type": {
                                "fields": [
                                  {
                                    "name": "root",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "next_available_leaf_index",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                              }
                            },
                            {
                              "name": "partial",
                              "type": {
                                "fields": [
                                  {
                                    "name": "note_hash_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "nullifier_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "public_data_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::partial_state_reference::PartialStateReference"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::state_reference::StateReference"
                        }
                      },
                      {
                        "name": "global_variables",
                        "type": {
                          "fields": [
                            {
                              "name": "chain_id",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "version",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "block_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "slot_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "timestamp",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 64
                              }
                            },
                            {
                              "name": "coinbase",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::eth_address::EthAddress"
                              }
                            },
                            {
                              "name": "fee_recipient",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "gas_fees",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::global_variables::GlobalVariables"
                        }
                      },
                      {
                        "name": "total_fees",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::header::Header"
                  }
                },
                {
                  "name": "tx_context",
                  "type": {
                    "fields": [
                      {
                        "name": "chain_id",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "version",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "gas_settings",
                        "type": {
                          "fields": [
                            {
                              "name": "gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "teardown_gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "max_fees_per_gas",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            },
                            {
                              "name": "inclusion_fee",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::gas_settings::GasSettings"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::transaction::tx_context::TxContext"
                  }
                },
                {
                  "name": "start_side_effect_counter",
                  "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 32
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "fee_payer",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "user",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "funded_amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          },
          {
            "name": "user_randomness",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          },
          {
            "name": "fee_payer_randomness",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "fields": [
              {
                "name": "call_context",
                "type": {
                  "fields": [
                    {
                      "name": "msg_sender",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "storage_contract_address",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "function_selector",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::function_selector::FunctionSelector"
                      }
                    },
                    {
                      "name": "is_delegate_call",
                      "type": {
                        "kind": "boolean"
                      }
                    },
                    {
                      "name": "is_static_call",
                      "type": {
                        "kind": "boolean"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::call_context::CallContext"
                }
              },
              {
                "name": "args_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "returns_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "min_revertible_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "is_fee_payer",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "max_block_number",
                "type": {
                  "fields": [
                    {
                      "name": "_opt",
                      "type": {
                        "fields": [
                          {
                            "name": "_is_some",
                            "type": {
                              "kind": "boolean"
                            }
                          },
                          {
                            "name": "_value",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "std::option::Option"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::max_block_number::MaxBlockNumber"
                }
              },
              {
                "name": "note_hash_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "nullifier_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "key_validation_requests_and_generators",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "request",
                        "type": {
                          "fields": [
                            {
                              "name": "pk_m",
                              "type": {
                                "fields": [
                                  {
                                    "name": "x",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "y",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "is_infinite",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                              }
                            },
                            {
                              "name": "sk_app",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"
                        }
                      },
                      {
                        "name": "sk_app_generator",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"
                  }
                }
              },
              {
                "name": "note_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::note_hash::NoteHash"
                  }
                }
              },
              {
                "name": "nullifiers",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "note_hash",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::nullifier::Nullifier"
                  }
                }
              },
              {
                "name": "private_call_requests",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "call_context",
                        "type": {
                          "fields": [
                            {
                              "name": "msg_sender",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "storage_contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "function_selector",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::function_selector::FunctionSelector"
                              }
                            },
                            {
                              "name": "is_delegate_call",
                              "type": {
                                "kind": "boolean"
                              }
                            },
                            {
                              "name": "is_static_call",
                              "type": {
                                "kind": "boolean"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::call_context::CallContext"
                        }
                      },
                      {
                        "name": "args_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "returns_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "start_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "end_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::private_call_request::PrivateCallRequest"
                  }
                }
              },
              {
                "name": "public_call_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "item",
                        "type": {
                          "fields": [
                            {
                              "name": "contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "call_context",
                              "type": {
                                "fields": [
                                  {
                                    "name": "msg_sender",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "storage_contract_address",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "function_selector",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::function_selector::FunctionSelector"
                                    }
                                  },
                                  {
                                    "name": "is_delegate_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  },
                                  {
                                    "name": "is_static_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::call_context::CallContext"
                              }
                            },
                            {
                              "name": "args_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "returns_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "revert_code",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 8
                              }
                            },
                            {
                              "name": "start_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "end_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                  }
                }
              },
              {
                "name": "public_teardown_call_request",
                "type": {
                  "fields": [
                    {
                      "name": "item",
                      "type": {
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "call_context",
                            "type": {
                              "fields": [
                                {
                                  "name": "msg_sender",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "storage_contract_address",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "function_selector",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::function_selector::FunctionSelector"
                                  }
                                },
                                {
                                  "name": "is_delegate_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                },
                                {
                                  "name": "is_static_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::call_context::CallContext"
                            }
                          },
                          {
                            "name": "args_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "returns_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "revert_code",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 8
                            }
                          },
                          {
                            "name": "start_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "end_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                      }
                    },
                    {
                      "name": "counter",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                }
              },
              {
                "name": "l2_to_l1_msgs",
                "type": {
                  "kind": "array",
                  "length": 2,
                  "type": {
                    "fields": [
                      {
                        "name": "recipient",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::eth_address::EthAddress"
                        }
                      },
                      {
                        "name": "content",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::messaging::l2_to_l1_message::L2ToL1Message"
                  }
                }
              },
              {
                "name": "start_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "end_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "note_encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "note_hash_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::NoteLogHash"
                  }
                }
              },
              {
                "name": "encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "randomness",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::EncryptedLogHash"
                  }
                }
              },
              {
                "name": "unencrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::LogHash"
                  }
                }
              },
              {
                "name": "historical_header",
                "type": {
                  "fields": [
                    {
                      "name": "last_archive",
                      "type": {
                        "fields": [
                          {
                            "name": "root",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "next_available_leaf_index",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                      }
                    },
                    {
                      "name": "content_commitment",
                      "type": {
                        "fields": [
                          {
                            "name": "num_txs",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "txs_effects_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "in_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "out_hash",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::content_commitment::ContentCommitment"
                      }
                    },
                    {
                      "name": "state",
                      "type": {
                        "fields": [
                          {
                            "name": "l1_to_l2_message_tree",
                            "type": {
                              "fields": [
                                {
                                  "name": "root",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "next_available_leaf_index",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                            }
                          },
                          {
                            "name": "partial",
                            "type": {
                              "fields": [
                                {
                                  "name": "note_hash_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "nullifier_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "public_data_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::partial_state_reference::PartialStateReference"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::state_reference::StateReference"
                      }
                    },
                    {
                      "name": "global_variables",
                      "type": {
                        "fields": [
                          {
                            "name": "chain_id",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "version",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "block_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "slot_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "timestamp",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 64
                            }
                          },
                          {
                            "name": "coinbase",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::eth_address::EthAddress"
                            }
                          },
                          {
                            "name": "fee_recipient",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "gas_fees",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::global_variables::GlobalVariables"
                      }
                    },
                    {
                      "name": "total_fees",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::header::Header"
                }
              },
              {
                "name": "tx_context",
                "type": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "version",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "gas_settings",
                      "type": {
                        "fields": [
                          {
                            "name": "gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "teardown_gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "max_fees_per_gas",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          },
                          {
                            "name": "inclusion_fee",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::gas_settings::GasSettings"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::transaction::tx_context::TxContext"
                }
              }
            ],
            "kind": "struct",
            "path": "protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"
          },
          "visibility": "public"
        }
      },
      "bytecode": "",
      "debug_symbols": "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",
      "brillig_names": [
        "pack_arguments_array",
        "call_private_function_internal",
        "unpack_returns",
        "get_public_data_witness",
        "lt_32_hint",
        "decompose_hint",
        "lte_16_hint",
        "key_registry_get_stored_keys_hint",
        "get_public_keys_and_partial_address",
        "get_notes_internal",
        "get_collapse_hints",
        "get_key_validation_request",
        "notify_nullified_note",
        "pack_arguments",
        "unsafe_rand",
        "notify_created_note",
        "compute_raw_note_log_unconstrained",
        "emit_encrypted_note_log",
        "pack_arguments_array",
        "set_public_teardown_function_call_internal",
        "directive_integer_quotient",
        "directive_invert"
      ]
    },
    {
      "name": "is_minter",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)",
        "aztec(view)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "minter",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "kind": "boolean"
          },
          "visibility": "public"
        }
      },
      "bytecode": "H4sIAAAAAAAC/zVSPU8kMQx9jvPhJMdVJ0Fxd/3pFphtZgQSFctSgUSLRIGQ6BH/kl/Fc2Z3JXvtJH7v2Z4JKmELtXtggmqmQ/kH/gotA3b7B9l2tntibrvVEGiy8BK6+Emkv0O64PHJAuLt9/7cnfwdaMPbzRHZaHWCiDVItXIO/EK5F5chUpmeIq5pDnUGostjlbJ0EpXIMAabYWUOlZBaAqNUpvHELxvD0B/igc5pG60TEqkhl0RQQaWCWDsp/6M7pbM5UfCoDhBP++CtDGvoM3ojG61GasgbLA2aLRFmj7TB9SxxVcUh+sUsKf5GjuXpOINyHCSPi9FZHHfxYONuRvQm9ZJ4iW+yci1F65W/pBgoBUr7QY7mPTyuPXAJyXTrXVj0tbxwQwkH9fQ9U7v6iCS5wKQ/6dUhng9jGK2pt7aIqeXOvWbi+bJerWzwRkw1Nvu5+IyTkA5G6dsR1BMWVIvWTsE9W/MviX/jS2qrrU0S8MMay80LOum6madppMHMuqeV7HWD960oEZ34csHZ19nXN4Bj4r7IAgAA",
      "debug_symbols": "5ZvdbuIwEIXfJddc+G/sGV5ltaqghSpSFCqgK61Q3n2dLnbCJopbsVQe+QYSOEy+YzmemZBcqpfd9v31qW73h1O1/nGpmsPz5lwfWr936VbV9lg3Tf36NP64Ev2L1B/609um7XdP583xXK3Fqtq1L/7d/3ZfN7tq7Uy3mshIu6uQwEWptGpGa5QIUf0mDWoxF9mSkle19Ue5Uf9cVdLcQS2FNFelFNp8KzfcM9pOh9Gm1GhLhRQ8agMJapQQ1KiEmlDb/0LtB/sWuw/tHhcaHxeaHhZaiU+H7tXyS2r1JfXsygBgw1QBQJewKuP6YEdOHc7NWAggkjBqtdBzcQHjqWDNMF+1xFn1cLqPJreiD5emCJdQhEtbhEtXhEsswiWV4FKLIlzKIlyqIlwWUftoU4TLImofXUTto++vfXxPq+IBiBI+P9nTWWtD1496COlZemjkCE0MoY3gCC05QiuO0MmsbkXy2qGFAVrcHGGqBqKgtkLabvkqHDgIC7DfxO6fq3DGsKYH1vSWNb1jTY+s6YkzPQjW9JI1vWJNn/t6jybSI0zoM19zMP4n6TfthP771xwUkV7LFL2OHGbcO9qe3QrG7JIxu+LCDnbCbhizA192l3t1sLjGu8yrA4w31wCayZ0kLvPqAJVaos+8E0dBAz0m1KRNOKNIOz3xajjXEi7zOi5Bn3nfnqDPvG9P0LOuoV3mffsyPWaemRP0uWfmZfrcM/MyffaZeZGeda5F1rkWWedaZJ1rkXWuRda5lhjn2s7v/toc68222V0fFdm/t8+jJ0fOv9/+fuPFfwA=",
      "brillig_names": [
        "is_minter"
      ],
      "assert_messages": {
        "77": "Array index out of bounds",
        "42": "Storage slot 0 not allowed. Storage slots must start from 1.",
        "89": "attempt to add with overflow",
        "22": "Function is_minter can only be called statically",
        "19": "Not initialized"
      }
    },
    {
      "name": "_increase_public_balance",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)",
        "aztec(internal)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "to",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": null
      },
      "bytecode": "H4sIAAAAAAAC/41UzYoUMRD+8tNJJd2d9IDgCqN4FWbdGdAeVtiT48xJ0DfwETwI+gIexaN3wYMI3sU32JfSr7pnR9iTDUmnU1Xf96Wq0ms4YzdwcgDWcD5ygjwCH+GIfD2/jyA72b3Wvd08YDnMlka4re54zi/QcN4jPKax36v7QYEeTGjTnK5ukBNHXsMYyTBZ0jlwB+lggIf/3HMmdVbbvdk20kKFLoMyM9bGGYI5sXlETmuE0I62JbZLNo22SevJTz06Lm3/0ivskb9TnQwCNYQkXBp0lNN3hZTnKEfKXtmsroqCVP2sE3nhstg6og6jFY7SU0hc4TLDxezpbhyxPsOvcDWangl10VKE87mMpvRLhD4+pYZbz59bD3xBiF6F7WdhS/g+LnXTEsPHJycQc0Lphfa+0Cv8F0lVkjqQ5BWGI0mYSCpJQo0THnGCr9z20S91adXB0+b1gKEErx4xnKI9E8wlcd8gHrMatJCaD3aZ5pKoLtg4IhbWcM4sV02Z9qfMD6fyMQ40YCBwlJZFazsh/Fv2HOG9SmF5Q+20IGmFdyxIyh1dPqBb4f0FZSX1iF1LMVN3aCuxOVUMLa6zMkLCaHuVakJHhNAQ4SOaw5RjujScmxRGE+TZTW+32n9OCmdp6f8J7XxmUSHsAs1apPyQSr3UqIq5t8xAkjgsGPQFCw3a8jDiNtqA4vVifeMdazTAVbvgvIjadoP2lWOPuLlHvh6b11ae32tDbo04CS2vQiCUluK7cP8H4Zw0K/zeqvrGkAnCNG+mReoZkMRLvgteVcn6M+Br+hnkecw/AwL+ksxw0YCWdK2IfjbTpxWRVj8T2ZmGnxvjiKjEF1ucXZ9d/wX/SUU6iwQAAA==",
      "debug_symbols": "7Z3dbts8DIbvJcc9EEWKInsrHz4M6dYOAYJ0aLsBQ5F7n9LFchJ7Voo6qzj1pFVSRnwf1hL1YyvPiy+3N9+/flpt7u4fF9f/PS/W95+XT6v7TXr1vL1a3Dys1uvV10+Hby/c7gfgi/3jt+Vm9/LxafnwtLh2V4vbzZf0O332brW+XVxH2l4NzBTj3lBDzKbAfsSWvOtqTUXtrd1Yzawe9tacvBxZ/3+1AHqDanBAe0twSH9Vd3hLtCN20dZStMGLdoxIoaBaIHTW4p0fqOZZVKdgH8veVR0vV7Vcrmq9WNXevaFqQu7qJoxQ+K9HF/3eOjoZXKse3qJkzlbj/dlKdtb4Kmt6lfVo+/UxcPeJVBYuXACQe00+YI0y1o5DVzGoZFt0OFZvkNxBMPWtGEFGrftO8KDJe33h5EY4YyOc0gintsGJrhFOaITTN8KJjXBSI5yNjIewkfEQNjIewkbGQzjHeCjNwnx2oVogPXOCyMzdjE+wrzJNQ5NscjZlg03Z3qZstCmbbMo+J9NrKMnm0Mt2Rz6G1kG1s2YHXFhDCjF03XEqyvZkDYnYuP5oXL8Y16+29QdnXD8Y1++N60fj+sm4/vr7f6GsX8Kpfq6+/UresUpFHuh/j/YrLuvH0m4eMOcdX46Hc0x+0Y/G9ZNx/aF6/f0SBUc90j+609zt2BJKv+zAY/MP6nelpa/Y/44Lf8RlNC7xIy6jcZGPuIzGRT/iMhaX6P6tuJDrFmmIgA7jsoOFlmDrH5G9DpbyVUykp7D1D99eCesz7MFkZw9LLcH+YWDIzmdY9jINO193yVWpiVWpkarUaE1qxM2hZrK/F7i8Cz+Li6mOXHAeFxM9ipzRfaYFkYKLtPXcudA4cBFmcaF5xcu5eOqCL+8izuAiONTsggYuZB4Xkl0EPnWhs7iIfaAUTlyom93FabtQmMMFQA4U+IELf3kXOIuLELILDqcu6PIuwuVd/GmckRtTKnNhiGfgBhyNjXBKI5zaBmd6qxVQaAXUtwKKrYBSK6ChFdBGhkXgGhkXgZtjYPT3b/dMbmzqBmdUNxjVfc6oIpZ0e8r3TvgD4/G1esZ+rR61dLYBkHYTdgiA28Jafci7BmlhzZ3MWgHwH6MNk7T8DrR58ZSRS7QMobveUxGPrHcA3lUPkNcn2bvhcSEeqgcQPwngawfwTjMAyBAArQOQdYBgHaD6brQEEK0DiHUANQ6A1WfiEkD1mbgEYD0To/VMjNYzMVrPxFj/hIalBygdm6aUlSgd3uLW4VaftydwXwCqz9slgOrzdgGA6p9BFwDqf25x8rk5OOu8gPd9cC6fAhuERo5qrf7kAPF+EqD6owMkp70EIKWsgdTpVozDRbP6TxqYflIT6j9qoARQ/VkDBYD6DxsoARh/WhnqP26gBFB93i4B1J+3CwD15+0CgIG8PQ1gPRMH65k4WM/EbD0TWz83BNh0Jt6mlz+WD6vlzfp2/10id983nw++WuTp57fff0nGvwA=",
      "brillig_names": [
        "_increase_public_balance"
      ],
      "assert_messages": {
        "140": "attempt to add with overflow",
        "150": "Array index out of bounds",
        "132": "Array index out of bounds",
        "161": "attempt to add with overflow",
        "24": "Function _increase_public_balance can only be called internally",
        "69": "call to assert_max_bit_size",
        "95": "attempt to add with overflow",
        "111": "Storage slot 0 not allowed. Storage slots must start from 1.",
        "79": "call to assert_max_bit_size",
        "44": "Storage slot 0 not allowed. Storage slots must start from 1.",
        "19": "Not initialized"
      }
    },
    {
      "name": "assert_minter_and_mint",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)",
        "aztec(internal)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "minter",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": null
      },
      "bytecode": "H4sIAAAAAAAC/41TsY4UMQx14iTjOLO0XLEgRIOQFm5XOmZ0SDSw3DY011MgwQ9QIkp6JAqERI/4l/speC+zHOgqRkomiZ/fc2xnKxriTtQOIlvRNGASeyj4DGPA78UdKba3/SXP9suQiBFmGEVnniTMLyVjvpDyGMbVBeEHEk2dS+EzRbWJy+MuKXZp2W0liAKQ/gK2UiQRdZc0y2zP+voYX4VXMJdQTR+J3Bc9BJF7hNQF7lIW24PF9k8w3V1jF1PZBg0VyxoRlDpkMaoxH3WSOmzkzEWHmhFVSjgOZP0oeSPnU7AM1xwds9c2hWZrZC0/wQ1ufL9ufOK3pGRvIHsujSGuJVle8zCCw/PZNUm4ZjGD3RpQ5b9ERoqMK4i8ktVRpHSRESJlzJ0PPMVHHKfsay4jAQ6b84KlFSciF3p3REZ+c3HwvhYnb/rDMxZb0vamp60A8k7KRt6ewm8gAgGgBoU1YN7Eew1g0RJ9Em9TtMZEtxEMbQTDexkPPQmAjJjHgbn2pzwCh7AKgyKjOngG/oPkpejOQFgmivMSyds5vRpGr6ZTxCnyaRGZQWe6Y69YYkt/QXdnOmg7ivcu6ZKJkomSn4+SseH+iW0zB1MrDY+sgGoA5qvh/Bvo1NA+P2cWNAd2teE17PqiruBQLZnfFrS4OZ8hfpdLV/exPEMQ/jCHu9GhQa6ZcZv7NppZ47ZCvW7k+y4oGCl8OsvJ1cnVb7Ho/qwFBAAA",
      "debug_symbols": "7ZzdTuMwEIXfJde98Px4bPMqq9WqQEGVqoKgrLRCvPum0DhtEuK1mqAx2xtI4ODzzTjx2MHpa3W7un65/7Xe3j08V1c/XqvNw81yt37Y1mevb4vq+mm92azvfx3/uDL7L0Dv+ufH5XZ/+rxbPu2qK7OoVtvb+nv9t3frzaq6cvz2c1EBZ6ltllqy1C5L7bPUIUeNJksNWWrMUmf1JWb1JWb1JWb1Jf57Xy56skDuIAzWRSkIDmgZTdNqfRhatRlqWQLCQS21y4l6T+3PoAYDfFCCIf5S7nBOth012Q6pbAP60MRIbBPUHmyj9miwS01mEuo62afY+6ZhvqZxvqZpvqb5jKaZpGmbyUGi151xeFA743vXKtlzSKa8ayhrRKOs6kRZ1YkG719vnW1uHzHJ0Uds7P/QimHfAz21DaFRiwFJ5LHmaAbk+tB388imaHoomh6Lpqei6bloels0vRRN74qm9yXTW+0jpudI722PXvmV4+P8rD6UHv3XXzneRHpKzVxBJK5uxLVXDtWR7OlDyfRiiqYH5fTWtPThhH5wPQVxPeXbdbH4IXG79vJtw/iRFbxkZSArdMnKQFb4kpWBrNhLVgayIt8pK2ykiZSBj7OyD9X9P6Fqn33lhcrx+mUO3VC1T9UyQ8UY6tGC5iNUp31eN2Gow5NAMW2oRzyfPcqeZoh0qIiFFLGwIhariEXOZxkd3Z2b28BPYDA2aLswhcHI+OHTQ2XSIEjzeIaD6xnABAYhPr0yxnUNcG4DOtvAGgrRgHsGPIWBjwZWugZ2AgPXpihA10AmNujeB96dbwAQUwTYM/BzG4QJDKyNBmI7BsHMbQBzG3wyf2CIBuIS0zbk+MgMnU1M24TaaRuF1NYN4ND0L1ig1LTNxglkPeqabqj0rUK1Y6HKl4caK6qQpEIVsE15rA/pRF3TgzHK8WPpEjSujw/K8T2O4qNufDQh4oPv41PZ+Fw2vi0bX/nAmcJ3ZeP7svFD0figvOqm8JVX3RR+2VUXyq66UHbVhbKrLmhfrohv8VO7vQNHksDH/8VoglVeo0eCfcdXXqNT+MprdAIfta+ME/jaN1qPbnoEZN34Pr6wZj33F/aofKu1RxzFV77X2sciV+P7VJUgbp4NBnL9R2BY9AZbQOV7s1P4yl+ESuCT8jehUvjKX4VK4Svf2Z/CV16jU/jaa3QCX3uNTuCrr9Hj+GVXXSq76mp//TiBr/394xR+2VVX+xvIY/hv9env5dN6eb1ZHT5W5+5le3P0KTu7P48fv6nFfwE=",
      "brillig_names": [
        "assert_minter_and_mint"
      ],
      "assert_messages": {
        "112": "Array index out of bounds",
        "141": "attempt to add with overflow",
        "33": "Not initialized",
        "65": "call to assert_max_bit_size",
        "75": "call to assert_max_bit_size",
        "91": "attempt to add with overflow",
        "120": "attempt to add with overflow",
        "130": "Array index out of bounds",
        "38": "Function assert_minter_and_mint can only be called internally"
      }
    },
    {
      "name": "cancel_authwit",
      "is_unconstrained": false,
      "custom_attributes": [
        "aztec(private)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "call_context",
                  "type": {
                    "fields": [
                      {
                        "name": "msg_sender",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "storage_contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "function_selector",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::function_selector::FunctionSelector"
                        }
                      },
                      {
                        "name": "is_delegate_call",
                        "type": {
                          "kind": "boolean"
                        }
                      },
                      {
                        "name": "is_static_call",
                        "type": {
                          "kind": "boolean"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::call_context::CallContext"
                  }
                },
                {
                  "name": "historical_header",
                  "type": {
                    "fields": [
                      {
                        "name": "last_archive",
                        "type": {
                          "fields": [
                            {
                              "name": "root",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "next_available_leaf_index",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                        }
                      },
                      {
                        "name": "content_commitment",
                        "type": {
                          "fields": [
                            {
                              "name": "num_txs",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "txs_effects_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "in_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "out_hash",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::content_commitment::ContentCommitment"
                        }
                      },
                      {
                        "name": "state",
                        "type": {
                          "fields": [
                            {
                              "name": "l1_to_l2_message_tree",
                              "type": {
                                "fields": [
                                  {
                                    "name": "root",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "next_available_leaf_index",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                              }
                            },
                            {
                              "name": "partial",
                              "type": {
                                "fields": [
                                  {
                                    "name": "note_hash_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "nullifier_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "public_data_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::partial_state_reference::PartialStateReference"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::state_reference::StateReference"
                        }
                      },
                      {
                        "name": "global_variables",
                        "type": {
                          "fields": [
                            {
                              "name": "chain_id",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "version",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "block_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "slot_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "timestamp",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 64
                              }
                            },
                            {
                              "name": "coinbase",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::eth_address::EthAddress"
                              }
                            },
                            {
                              "name": "fee_recipient",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "gas_fees",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::global_variables::GlobalVariables"
                        }
                      },
                      {
                        "name": "total_fees",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::header::Header"
                  }
                },
                {
                  "name": "tx_context",
                  "type": {
                    "fields": [
                      {
                        "name": "chain_id",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "version",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "gas_settings",
                        "type": {
                          "fields": [
                            {
                              "name": "gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "teardown_gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "max_fees_per_gas",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            },
                            {
                              "name": "inclusion_fee",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::gas_settings::GasSettings"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::transaction::tx_context::TxContext"
                  }
                },
                {
                  "name": "start_side_effect_counter",
                  "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 32
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "inner_hash",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "fields": [
              {
                "name": "call_context",
                "type": {
                  "fields": [
                    {
                      "name": "msg_sender",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "storage_contract_address",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "function_selector",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::function_selector::FunctionSelector"
                      }
                    },
                    {
                      "name": "is_delegate_call",
                      "type": {
                        "kind": "boolean"
                      }
                    },
                    {
                      "name": "is_static_call",
                      "type": {
                        "kind": "boolean"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::call_context::CallContext"
                }
              },
              {
                "name": "args_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "returns_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "min_revertible_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "is_fee_payer",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "max_block_number",
                "type": {
                  "fields": [
                    {
                      "name": "_opt",
                      "type": {
                        "fields": [
                          {
                            "name": "_is_some",
                            "type": {
                              "kind": "boolean"
                            }
                          },
                          {
                            "name": "_value",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "std::option::Option"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::max_block_number::MaxBlockNumber"
                }
              },
              {
                "name": "note_hash_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "nullifier_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "key_validation_requests_and_generators",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "request",
                        "type": {
                          "fields": [
                            {
                              "name": "pk_m",
                              "type": {
                                "fields": [
                                  {
                                    "name": "x",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "y",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "is_infinite",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                              }
                            },
                            {
                              "name": "sk_app",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"
                        }
                      },
                      {
                        "name": "sk_app_generator",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"
                  }
                }
              },
              {
                "name": "note_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::note_hash::NoteHash"
                  }
                }
              },
              {
                "name": "nullifiers",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "note_hash",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::nullifier::Nullifier"
                  }
                }
              },
              {
                "name": "private_call_requests",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "call_context",
                        "type": {
                          "fields": [
                            {
                              "name": "msg_sender",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "storage_contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "function_selector",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::function_selector::FunctionSelector"
                              }
                            },
                            {
                              "name": "is_delegate_call",
                              "type": {
                                "kind": "boolean"
                              }
                            },
                            {
                              "name": "is_static_call",
                              "type": {
                                "kind": "boolean"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::call_context::CallContext"
                        }
                      },
                      {
                        "name": "args_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "returns_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "start_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "end_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::private_call_request::PrivateCallRequest"
                  }
                }
              },
              {
                "name": "public_call_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "item",
                        "type": {
                          "fields": [
                            {
                              "name": "contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "call_context",
                              "type": {
                                "fields": [
                                  {
                                    "name": "msg_sender",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "storage_contract_address",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "function_selector",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::function_selector::FunctionSelector"
                                    }
                                  },
                                  {
                                    "name": "is_delegate_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  },
                                  {
                                    "name": "is_static_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::call_context::CallContext"
                              }
                            },
                            {
                              "name": "args_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "returns_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "revert_code",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 8
                              }
                            },
                            {
                              "name": "start_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "end_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                  }
                }
              },
              {
                "name": "public_teardown_call_request",
                "type": {
                  "fields": [
                    {
                      "name": "item",
                      "type": {
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "call_context",
                            "type": {
                              "fields": [
                                {
                                  "name": "msg_sender",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "storage_contract_address",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "function_selector",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::function_selector::FunctionSelector"
                                  }
                                },
                                {
                                  "name": "is_delegate_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                },
                                {
                                  "name": "is_static_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::call_context::CallContext"
                            }
                          },
                          {
                            "name": "args_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "returns_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "revert_code",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 8
                            }
                          },
                          {
                            "name": "start_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "end_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                      }
                    },
                    {
                      "name": "counter",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                }
              },
              {
                "name": "l2_to_l1_msgs",
                "type": {
                  "kind": "array",
                  "length": 2,
                  "type": {
                    "fields": [
                      {
                        "name": "recipient",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::eth_address::EthAddress"
                        }
                      },
                      {
                        "name": "content",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::messaging::l2_to_l1_message::L2ToL1Message"
                  }
                }
              },
              {
                "name": "start_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "end_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "note_encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "note_hash_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::NoteLogHash"
                  }
                }
              },
              {
                "name": "encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "randomness",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::EncryptedLogHash"
                  }
                }
              },
              {
                "name": "unencrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::LogHash"
                  }
                }
              },
              {
                "name": "historical_header",
                "type": {
                  "fields": [
                    {
                      "name": "last_archive",
                      "type": {
                        "fields": [
                          {
                            "name": "root",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "next_available_leaf_index",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                      }
                    },
                    {
                      "name": "content_commitment",
                      "type": {
                        "fields": [
                          {
                            "name": "num_txs",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "txs_effects_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "in_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "out_hash",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::content_commitment::ContentCommitment"
                      }
                    },
                    {
                      "name": "state",
                      "type": {
                        "fields": [
                          {
                            "name": "l1_to_l2_message_tree",
                            "type": {
                              "fields": [
                                {
                                  "name": "root",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "next_available_leaf_index",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                            }
                          },
                          {
                            "name": "partial",
                            "type": {
                              "fields": [
                                {
                                  "name": "note_hash_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "nullifier_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "public_data_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::partial_state_reference::PartialStateReference"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::state_reference::StateReference"
                      }
                    },
                    {
                      "name": "global_variables",
                      "type": {
                        "fields": [
                          {
                            "name": "chain_id",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "version",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "block_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "slot_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "timestamp",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 64
                            }
                          },
                          {
                            "name": "coinbase",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::eth_address::EthAddress"
                            }
                          },
                          {
                            "name": "fee_recipient",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "gas_fees",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::global_variables::GlobalVariables"
                      }
                    },
                    {
                      "name": "total_fees",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::header::Header"
                }
              },
              {
                "name": "tx_context",
                "type": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "version",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "gas_settings",
                      "type": {
                        "fields": [
                          {
                            "name": "gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "teardown_gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "max_fees_per_gas",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          },
                          {
                            "name": "inclusion_fee",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::gas_settings::GasSettings"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::transaction::tx_context::TxContext"
                }
              }
            ],
            "kind": "struct",
            "path": "protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"
          },
          "visibility": "public"
        }
      },
      "bytecode": "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",
      "debug_symbols": "7VbRaoMwFP2XPPuQm5vk5vZXxii2tUUQLWoHQ/rvSzujDkP3IBsb9cnc5HA85yQ3pBOHbHc5bfPyWDVi89KJotqnbV6VvuoE6Ptcc07LW9m0ad2KjUxEVh7895qIY15kYkP6msxgikH1SMWoBzBYjKDRMPZotNZ+gwZJFGT4sRvZEVwM7wwFuKORHWPCAeTADZqn4NdEgFkzmWVi10xmmdCaySwTtyATZDDBJRsYXUpz5+af41ZyATcotCESRRNuqyJoRhd2npH5i5LIOVHsggyFUvJMOfxb5SqmHMgZHTQR36gfOmCWLvxFykknEUVbAxGH1kBNv9caCp/Lrn4uuyZud7x2/BjpsV0z3tuGHC1uMPvXNPlqV+dFkZ+202eon35L6zzdFVlfHi/lfrLavp8/VzzFBw==",
      "brillig_names": []
    },
    {
      "name": "redeem_shield",
      "is_unconstrained": false,
      "custom_attributes": [
        "aztec(private)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "call_context",
                  "type": {
                    "fields": [
                      {
                        "name": "msg_sender",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "storage_contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "function_selector",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::function_selector::FunctionSelector"
                        }
                      },
                      {
                        "name": "is_delegate_call",
                        "type": {
                          "kind": "boolean"
                        }
                      },
                      {
                        "name": "is_static_call",
                        "type": {
                          "kind": "boolean"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::call_context::CallContext"
                  }
                },
                {
                  "name": "historical_header",
                  "type": {
                    "fields": [
                      {
                        "name": "last_archive",
                        "type": {
                          "fields": [
                            {
                              "name": "root",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "next_available_leaf_index",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                        }
                      },
                      {
                        "name": "content_commitment",
                        "type": {
                          "fields": [
                            {
                              "name": "num_txs",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "txs_effects_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "in_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "out_hash",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::content_commitment::ContentCommitment"
                        }
                      },
                      {
                        "name": "state",
                        "type": {
                          "fields": [
                            {
                              "name": "l1_to_l2_message_tree",
                              "type": {
                                "fields": [
                                  {
                                    "name": "root",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "next_available_leaf_index",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                              }
                            },
                            {
                              "name": "partial",
                              "type": {
                                "fields": [
                                  {
                                    "name": "note_hash_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "nullifier_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "public_data_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::partial_state_reference::PartialStateReference"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::state_reference::StateReference"
                        }
                      },
                      {
                        "name": "global_variables",
                        "type": {
                          "fields": [
                            {
                              "name": "chain_id",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "version",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "block_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "slot_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "timestamp",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 64
                              }
                            },
                            {
                              "name": "coinbase",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::eth_address::EthAddress"
                              }
                            },
                            {
                              "name": "fee_recipient",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "gas_fees",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::global_variables::GlobalVariables"
                        }
                      },
                      {
                        "name": "total_fees",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::header::Header"
                  }
                },
                {
                  "name": "tx_context",
                  "type": {
                    "fields": [
                      {
                        "name": "chain_id",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "version",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "gas_settings",
                        "type": {
                          "fields": [
                            {
                              "name": "gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "teardown_gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "max_fees_per_gas",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            },
                            {
                              "name": "inclusion_fee",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::gas_settings::GasSettings"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::transaction::tx_context::TxContext"
                  }
                },
                {
                  "name": "start_side_effect_counter",
                  "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 32
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "to",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          },
          {
            "name": "secret",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "fields": [
              {
                "name": "call_context",
                "type": {
                  "fields": [
                    {
                      "name": "msg_sender",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "storage_contract_address",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "function_selector",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::function_selector::FunctionSelector"
                      }
                    },
                    {
                      "name": "is_delegate_call",
                      "type": {
                        "kind": "boolean"
                      }
                    },
                    {
                      "name": "is_static_call",
                      "type": {
                        "kind": "boolean"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::call_context::CallContext"
                }
              },
              {
                "name": "args_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "returns_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "min_revertible_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "is_fee_payer",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "max_block_number",
                "type": {
                  "fields": [
                    {
                      "name": "_opt",
                      "type": {
                        "fields": [
                          {
                            "name": "_is_some",
                            "type": {
                              "kind": "boolean"
                            }
                          },
                          {
                            "name": "_value",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "std::option::Option"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::max_block_number::MaxBlockNumber"
                }
              },
              {
                "name": "note_hash_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "nullifier_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "key_validation_requests_and_generators",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "request",
                        "type": {
                          "fields": [
                            {
                              "name": "pk_m",
                              "type": {
                                "fields": [
                                  {
                                    "name": "x",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "y",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "is_infinite",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                              }
                            },
                            {
                              "name": "sk_app",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"
                        }
                      },
                      {
                        "name": "sk_app_generator",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"
                  }
                }
              },
              {
                "name": "note_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::note_hash::NoteHash"
                  }
                }
              },
              {
                "name": "nullifiers",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "note_hash",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::nullifier::Nullifier"
                  }
                }
              },
              {
                "name": "private_call_requests",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "call_context",
                        "type": {
                          "fields": [
                            {
                              "name": "msg_sender",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "storage_contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "function_selector",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::function_selector::FunctionSelector"
                              }
                            },
                            {
                              "name": "is_delegate_call",
                              "type": {
                                "kind": "boolean"
                              }
                            },
                            {
                              "name": "is_static_call",
                              "type": {
                                "kind": "boolean"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::call_context::CallContext"
                        }
                      },
                      {
                        "name": "args_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "returns_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "start_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "end_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::private_call_request::PrivateCallRequest"
                  }
                }
              },
              {
                "name": "public_call_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "item",
                        "type": {
                          "fields": [
                            {
                              "name": "contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "call_context",
                              "type": {
                                "fields": [
                                  {
                                    "name": "msg_sender",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "storage_contract_address",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "function_selector",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::function_selector::FunctionSelector"
                                    }
                                  },
                                  {
                                    "name": "is_delegate_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  },
                                  {
                                    "name": "is_static_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::call_context::CallContext"
                              }
                            },
                            {
                              "name": "args_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "returns_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "revert_code",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 8
                              }
                            },
                            {
                              "name": "start_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "end_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                  }
                }
              },
              {
                "name": "public_teardown_call_request",
                "type": {
                  "fields": [
                    {
                      "name": "item",
                      "type": {
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "call_context",
                            "type": {
                              "fields": [
                                {
                                  "name": "msg_sender",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "storage_contract_address",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "function_selector",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::function_selector::FunctionSelector"
                                  }
                                },
                                {
                                  "name": "is_delegate_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                },
                                {
                                  "name": "is_static_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::call_context::CallContext"
                            }
                          },
                          {
                            "name": "args_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "returns_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "revert_code",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 8
                            }
                          },
                          {
                            "name": "start_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "end_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                      }
                    },
                    {
                      "name": "counter",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                }
              },
              {
                "name": "l2_to_l1_msgs",
                "type": {
                  "kind": "array",
                  "length": 2,
                  "type": {
                    "fields": [
                      {
                        "name": "recipient",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::eth_address::EthAddress"
                        }
                      },
                      {
                        "name": "content",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::messaging::l2_to_l1_message::L2ToL1Message"
                  }
                }
              },
              {
                "name": "start_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "end_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "note_encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "note_hash_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::NoteLogHash"
                  }
                }
              },
              {
                "name": "encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "randomness",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::EncryptedLogHash"
                  }
                }
              },
              {
                "name": "unencrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::LogHash"
                  }
                }
              },
              {
                "name": "historical_header",
                "type": {
                  "fields": [
                    {
                      "name": "last_archive",
                      "type": {
                        "fields": [
                          {
                            "name": "root",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "next_available_leaf_index",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                      }
                    },
                    {
                      "name": "content_commitment",
                      "type": {
                        "fields": [
                          {
                            "name": "num_txs",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "txs_effects_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "in_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "out_hash",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::content_commitment::ContentCommitment"
                      }
                    },
                    {
                      "name": "state",
                      "type": {
                        "fields": [
                          {
                            "name": "l1_to_l2_message_tree",
                            "type": {
                              "fields": [
                                {
                                  "name": "root",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "next_available_leaf_index",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                            }
                          },
                          {
                            "name": "partial",
                            "type": {
                              "fields": [
                                {
                                  "name": "note_hash_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "nullifier_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "public_data_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::partial_state_reference::PartialStateReference"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::state_reference::StateReference"
                      }
                    },
                    {
                      "name": "global_variables",
                      "type": {
                        "fields": [
                          {
                            "name": "chain_id",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "version",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "block_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "slot_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "timestamp",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 64
                            }
                          },
                          {
                            "name": "coinbase",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::eth_address::EthAddress"
                            }
                          },
                          {
                            "name": "fee_recipient",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "gas_fees",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::global_variables::GlobalVariables"
                      }
                    },
                    {
                      "name": "total_fees",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::header::Header"
                }
              },
              {
                "name": "tx_context",
                "type": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "version",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "gas_settings",
                      "type": {
                        "fields": [
                          {
                            "name": "gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "teardown_gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "max_fees_per_gas",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          },
                          {
                            "name": "inclusion_fee",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::gas_settings::GasSettings"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::transaction::tx_context::TxContext"
                }
              }
            ],
            "kind": "struct",
            "path": "protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"
          },
          "visibility": "public"
        }
      },
      "bytecode": "",
      "debug_symbols": "",
      "brillig_names": [
        "get_notes_internal",
        "get_collapse_hints",
        "lt_32_hint",
        "decompose_hint",
        "lte_16_hint",
        "notify_nullified_note",
        "get_public_data_witness",
        "key_registry_get_stored_keys_hint",
        "get_public_keys_and_partial_address",
        "unsafe_rand",
        "notify_created_note",
        "get_key_validation_request",
        "emit_encrypted_note_log",
        "directive_integer_quotient",
        "directive_invert"
      ]
    },
    {
      "name": "un_total_supply",
      "is_unconstrained": true,
      "custom_attributes": [],
      "abi": {
        "error_types": {},
        "parameters": [],
        "return_type": {
          "abi_type": {
            "kind": "field"
          },
          "visibility": "public"
        }
      },
      "bytecode": "H4sIAAAAAAAA/7VUz0/CMBRuZbgOnRo8esGzF2Y4eEQ5efHgwSsprOIisGStifGvl2orn4+iBMaXLO/1x/vez5WzJbiTTfYbnAU2IhYGD+i41wH9wsmxnE47puxIrVVlhjP5PhwVZqiLD/Vje+VksvgOSBx9t+7uhiwJ5FgL902vZ7kb+4m7m7BlP+rmjhccA/HN5eP3voT7LNLAvXPY8308XnwnTp8oczctx68Pb7ORqnBKsFK0IxSWsb1kHJRzU8mxuc3zSmmNDFGAla1hbAHjiyzm9zlaNbdjelKVLso5Wh1uyGQrEoPukZB138nubviaV1E/b5a6mBnJoQV1qHF+r2ldcYJaIJP9+M84+PH+vS//jtkpOXK6NmUlJ+pRyRyfTywPlTRFHkgVdRyXGHQRuPsXTsEGyyeIX7/26Z7BfbQXwFHnE0YfjlAL7J2Y3IlIjDZfXzv8FQXoDPLBMe9vmMvzP2AQV8xW69+E80sn22wVobi5s2+w1f4wsuZgl4Cs4SnK6AbmvK7eOGNR4Jz2Bm3SAGcKuj+zv+gnAAFCITAJAAA=",
      "debug_symbols": "7ZndbsIwDIXfJddc2InjOLzKNE1lg6lSVSZgkybEu6/dmraj2ToE0vjJDVA4dc75EiQ32aqn+ez1+SEvF8u1mt5tVbF8zDb5sqyutruJmq3yosifH/pfK6hf5FO+fsnK+mq9yVYbNYWJmpdP1Xt16yIv5mrqaDcZyJz4RijgWimCiWitto3W2q4sGtjdT5Q/woRQEArrERNkgmFi2TeBcIwLcY3QA464YAgoWPPABR7hwreQvZExFxKKOhhMCOqYCy2Wqbmp+iz+dzdo0TRqtH0/4iJqjTpMjsb+Eom6xwpzqO3Zj2aVkJV6s0MQWyMcCpPob9qai7lZLkZ0+AODDLhQ4hLlYhOXKBdOXKJcXOIS5SKJS5SLT1xiXDQkLlEueF1cnGm56KO4XFm/ezIuV9bvnowL/QMXbGsj2zEuzIEisutqG+BP//bC/fOF+3cX7l/O3r+Fzr//5j+2L9Q99JveU3+9STQUs2k3CLrC+ouLT1xiXAwkLlEumLhEuejEJcrFXBcXAg5ZCanPpQ5LtxT2/Duyw8JSu4qJ/H7Y82/fDgyr27BW9sOef693wrB/aAwZ9O9hyXI4x6pGgP0h/EmGsD8Osauu3rJVns2KeXN+ungtH3vHqZv3l69fKvEH",
      "brillig_names": [
        "un_total_supply"
      ]
    },
    {
      "name": "transfer_from",
      "is_unconstrained": false,
      "custom_attributes": [
        "aztec(private)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "call_context",
                  "type": {
                    "fields": [
                      {
                        "name": "msg_sender",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "storage_contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "function_selector",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::function_selector::FunctionSelector"
                        }
                      },
                      {
                        "name": "is_delegate_call",
                        "type": {
                          "kind": "boolean"
                        }
                      },
                      {
                        "name": "is_static_call",
                        "type": {
                          "kind": "boolean"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::call_context::CallContext"
                  }
                },
                {
                  "name": "historical_header",
                  "type": {
                    "fields": [
                      {
                        "name": "last_archive",
                        "type": {
                          "fields": [
                            {
                              "name": "root",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "next_available_leaf_index",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                        }
                      },
                      {
                        "name": "content_commitment",
                        "type": {
                          "fields": [
                            {
                              "name": "num_txs",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "txs_effects_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "in_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "out_hash",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::content_commitment::ContentCommitment"
                        }
                      },
                      {
                        "name": "state",
                        "type": {
                          "fields": [
                            {
                              "name": "l1_to_l2_message_tree",
                              "type": {
                                "fields": [
                                  {
                                    "name": "root",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "next_available_leaf_index",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                              }
                            },
                            {
                              "name": "partial",
                              "type": {
                                "fields": [
                                  {
                                    "name": "note_hash_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "nullifier_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "public_data_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::partial_state_reference::PartialStateReference"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::state_reference::StateReference"
                        }
                      },
                      {
                        "name": "global_variables",
                        "type": {
                          "fields": [
                            {
                              "name": "chain_id",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "version",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "block_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "slot_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "timestamp",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 64
                              }
                            },
                            {
                              "name": "coinbase",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::eth_address::EthAddress"
                              }
                            },
                            {
                              "name": "fee_recipient",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "gas_fees",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::global_variables::GlobalVariables"
                        }
                      },
                      {
                        "name": "total_fees",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::header::Header"
                  }
                },
                {
                  "name": "tx_context",
                  "type": {
                    "fields": [
                      {
                        "name": "chain_id",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "version",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "gas_settings",
                        "type": {
                          "fields": [
                            {
                              "name": "gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "teardown_gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "max_fees_per_gas",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            },
                            {
                              "name": "inclusion_fee",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::gas_settings::GasSettings"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::transaction::tx_context::TxContext"
                  }
                },
                {
                  "name": "start_side_effect_counter",
                  "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 32
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "from",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "to",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          },
          {
            "name": "nonce",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "fields": [
              {
                "name": "call_context",
                "type": {
                  "fields": [
                    {
                      "name": "msg_sender",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "storage_contract_address",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "function_selector",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::function_selector::FunctionSelector"
                      }
                    },
                    {
                      "name": "is_delegate_call",
                      "type": {
                        "kind": "boolean"
                      }
                    },
                    {
                      "name": "is_static_call",
                      "type": {
                        "kind": "boolean"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::call_context::CallContext"
                }
              },
              {
                "name": "args_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "returns_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "min_revertible_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "is_fee_payer",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "max_block_number",
                "type": {
                  "fields": [
                    {
                      "name": "_opt",
                      "type": {
                        "fields": [
                          {
                            "name": "_is_some",
                            "type": {
                              "kind": "boolean"
                            }
                          },
                          {
                            "name": "_value",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "std::option::Option"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::max_block_number::MaxBlockNumber"
                }
              },
              {
                "name": "note_hash_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "nullifier_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "key_validation_requests_and_generators",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "request",
                        "type": {
                          "fields": [
                            {
                              "name": "pk_m",
                              "type": {
                                "fields": [
                                  {
                                    "name": "x",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "y",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "is_infinite",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                              }
                            },
                            {
                              "name": "sk_app",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"
                        }
                      },
                      {
                        "name": "sk_app_generator",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"
                  }
                }
              },
              {
                "name": "note_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::note_hash::NoteHash"
                  }
                }
              },
              {
                "name": "nullifiers",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "note_hash",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::nullifier::Nullifier"
                  }
                }
              },
              {
                "name": "private_call_requests",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "call_context",
                        "type": {
                          "fields": [
                            {
                              "name": "msg_sender",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "storage_contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "function_selector",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::function_selector::FunctionSelector"
                              }
                            },
                            {
                              "name": "is_delegate_call",
                              "type": {
                                "kind": "boolean"
                              }
                            },
                            {
                              "name": "is_static_call",
                              "type": {
                                "kind": "boolean"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::call_context::CallContext"
                        }
                      },
                      {
                        "name": "args_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "returns_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "start_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "end_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::private_call_request::PrivateCallRequest"
                  }
                }
              },
              {
                "name": "public_call_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "item",
                        "type": {
                          "fields": [
                            {
                              "name": "contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "call_context",
                              "type": {
                                "fields": [
                                  {
                                    "name": "msg_sender",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "storage_contract_address",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "function_selector",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::function_selector::FunctionSelector"
                                    }
                                  },
                                  {
                                    "name": "is_delegate_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  },
                                  {
                                    "name": "is_static_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::call_context::CallContext"
                              }
                            },
                            {
                              "name": "args_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "returns_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "revert_code",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 8
                              }
                            },
                            {
                              "name": "start_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "end_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                  }
                }
              },
              {
                "name": "public_teardown_call_request",
                "type": {
                  "fields": [
                    {
                      "name": "item",
                      "type": {
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "call_context",
                            "type": {
                              "fields": [
                                {
                                  "name": "msg_sender",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "storage_contract_address",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "function_selector",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::function_selector::FunctionSelector"
                                  }
                                },
                                {
                                  "name": "is_delegate_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                },
                                {
                                  "name": "is_static_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::call_context::CallContext"
                            }
                          },
                          {
                            "name": "args_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "returns_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "revert_code",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 8
                            }
                          },
                          {
                            "name": "start_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "end_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                      }
                    },
                    {
                      "name": "counter",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                }
              },
              {
                "name": "l2_to_l1_msgs",
                "type": {
                  "kind": "array",
                  "length": 2,
                  "type": {
                    "fields": [
                      {
                        "name": "recipient",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::eth_address::EthAddress"
                        }
                      },
                      {
                        "name": "content",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::messaging::l2_to_l1_message::L2ToL1Message"
                  }
                }
              },
              {
                "name": "start_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "end_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "note_encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "note_hash_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::NoteLogHash"
                  }
                }
              },
              {
                "name": "encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "randomness",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::EncryptedLogHash"
                  }
                }
              },
              {
                "name": "unencrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::LogHash"
                  }
                }
              },
              {
                "name": "historical_header",
                "type": {
                  "fields": [
                    {
                      "name": "last_archive",
                      "type": {
                        "fields": [
                          {
                            "name": "root",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "next_available_leaf_index",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                      }
                    },
                    {
                      "name": "content_commitment",
                      "type": {
                        "fields": [
                          {
                            "name": "num_txs",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "txs_effects_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "in_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "out_hash",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::content_commitment::ContentCommitment"
                      }
                    },
                    {
                      "name": "state",
                      "type": {
                        "fields": [
                          {
                            "name": "l1_to_l2_message_tree",
                            "type": {
                              "fields": [
                                {
                                  "name": "root",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "next_available_leaf_index",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                            }
                          },
                          {
                            "name": "partial",
                            "type": {
                              "fields": [
                                {
                                  "name": "note_hash_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "nullifier_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "public_data_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::partial_state_reference::PartialStateReference"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::state_reference::StateReference"
                      }
                    },
                    {
                      "name": "global_variables",
                      "type": {
                        "fields": [
                          {
                            "name": "chain_id",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "version",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "block_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "slot_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "timestamp",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 64
                            }
                          },
                          {
                            "name": "coinbase",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::eth_address::EthAddress"
                            }
                          },
                          {
                            "name": "fee_recipient",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "gas_fees",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::global_variables::GlobalVariables"
                      }
                    },
                    {
                      "name": "total_fees",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::header::Header"
                }
              },
              {
                "name": "tx_context",
                "type": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "version",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "gas_settings",
                      "type": {
                        "fields": [
                          {
                            "name": "gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "teardown_gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "max_fees_per_gas",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          },
                          {
                            "name": "inclusion_fee",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::gas_settings::GasSettings"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::transaction::tx_context::TxContext"
                }
              }
            ],
            "kind": "struct",
            "path": "protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"
          },
          "visibility": "public"
        }
      },
      "bytecode": "",
      "debug_symbols": "",
      "brillig_names": [
        "pack_arguments_array",
        "call_private_function_internal",
        "unpack_returns",
        "get_public_data_witness",
        "lt_32_hint",
        "decompose_hint",
        "lte_16_hint",
        "key_registry_get_stored_keys_hint",
        "get_public_keys_and_partial_address",
        "get_notes_internal",
        "get_collapse_hints",
        "get_key_validation_request",
        "notify_nullified_note",
        "unsafe_rand",
        "notify_created_note",
        "emit_encrypted_note_log",
        "directive_invert",
        "directive_integer_quotient"
      ]
    },
    {
      "name": "constructor",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)",
        "aztec(initializer)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "admin",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "name",
            "type": {
              "kind": "string",
              "length": 31
            },
            "visibility": "private"
          },
          {
            "name": "symbol",
            "type": {
              "kind": "string",
              "length": 31
            },
            "visibility": "private"
          },
          {
            "name": "decimals",
            "type": {
              "kind": "integer",
              "sign": "unsigned",
              "width": 8
            },
            "visibility": "private"
          }
        ],
        "return_type": null
      },
      "bytecode": "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",
      "debug_symbols": "",
      "brillig_names": [
        "constructor"
      ],
      "assert_messages": {
        "433": "attempt to add with overflow",
        "878": "attempt to add with overflow",
        "1262": "Array index out of bounds",
        "232": "attempt to add with overflow",
        "677": "Storage slot 0 not allowed. Storage slots must start from 1.",
        "994": "Array index out of bounds",
        "543": "Array index out of bounds",
        "1250": "attempt to add with overflow",
        "903": "attempt to add with overflow",
        "1092": "Array index out of bounds",
        "1025": "attempt to add with overflow",
        "958": "attempt to subtract with overflow",
        "1208": "attempt to add with overflow",
        "1330": "attempt to add with overflow",
        "1135": "Array index out of bounds",
        "556": "attempt to add with overflow",
        "1062": "Array index out of bounds",
        "867": "Array index out of bounds",
        "1123": "attempt to add with overflow",
        "404": "Array index out of bounds",
        "849": "Array index out of bounds",
        "654": "invalid admin",
        "1270": "Array index out of bounds",
        "947": "attempt to add with overflow",
        "1197": "Array index out of bounds",
        "1002": "attempt to add with overflow",
        "1057": "attempt to subtract with overflow",
        "1179": "Array index out of bounds",
        "978": "attempt to add with overflow",
        "527": "Array index out of bounds",
        "1100": "attempt to add with overflow",
        "515": "attempt to add with overflow",
        "765": "SharedImmutable already initialized",
        "314": "attempt to add with overflow",
        "826": "Array index out of bounds",
        "954": "attempt to subtract with overflow",
        "1143": "Array index out of bounds",
        "936": "Array index out of bounds",
        "412": "Array index out of bounds",
        "473": "attempt to add with overflow",
        "857": "attempt to add with overflow",
        "918": "Array index out of bounds",
        "1046": "attempt to add with overflow",
        "650": "Initializer address is not the contract deployer",
        "644": "Initialization hash does not match",
        "254": "attempt to add with overflow",
        "443": "Array index out of bounds",
        "1278": "Array index out of bounds",
        "1077": "attempt to add with overflow",
        "236": "Array index out of bounds",
        "1053": "attempt to subtract with overflow",
        "535": "Array index out of bounds",
        "1297": "attempt to add with overflow",
        "462": "Array index out of bounds",
        "1035": "Array index out of bounds",
        "1291": "attempt to add with overflow",
        "834": "attempt to add with overflow",
        "895": "Array index out of bounds",
        "1151": "Array index out of bounds",
        "1017": "Array index out of bounds",
        "438": "Index out of bounds",
        "243": "Array index out of bounds",
        "420": "Array index out of bounds",
        "798": "SharedImmutable already initialized",
        "926": "attempt to add with overflow",
        "1115": "Array index out of bounds",
        "719": "SharedImmutable already initialized",
        "1164": "attempt to add with overflow",
        "201": "attempt to add with overflow",
        "963": "Array index out of bounds"
      }
    },
    {
      "name": "total_supply",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)",
        "aztec(view)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "kind": "field"
          },
          "visibility": "public"
        }
      },
      "bytecode": "H4sIAAAAAAAC/11SwWocMQx9smxZ9qa5FNoctj0VSmHbzELroYWeskmPJTmEQO4h35qfSp5mSCAxWGPJ0tPTG09QSXuoXwATNBUa2DdwGXcB/OwTzA9+uKTvh3UjccvMS+gckfyDgaMZRDq/iMTzSPi84Cy2/n3GrHE9QaR2iFf7DryH/ZMgIOJ0PyCHO5hHQPbiKQe7Gm7FJCqZx5zqQLWJsG2kZiNlD/5toJUdvnRoaZWAf1B3+DrYjVU1kYVaK0OKbzlb+7XwerUe3yzUY1hbyE4r2S2yt20EEzFq+/kCIi8o7rx3yzB24fSVHBkhPT0NNiwvQT9zGsumv6NIQyeOIfmI/HNnyzP0aEl5q+s+JPFF8CtqX6JANXXaXvJIFlJJTFqqHdNaQPxfIUZSJ4VQZxZXtw3/mBEvZLp2ynRDTHUm3M8xQZHAdxLcL4f2jgXNs/eP/Hvde7wOfpbX0de9vg4C3nlnuUfBhu027uGWxU3uvgm3sXvb4XYvSsRofDrj5OHk4QnOXbJPnAIAAA==",
      "debug_symbols": "7Zptb+IwDMe/S1/zIg+O7fBVTqcJNpgqVWUCdtIJ8d0vvbUp0Ko5NJjiG2+ghX+dn620jp0eipfV8v31qazXm10x/3Eoqs3zYl9u6nB2OM6K5basqvL16fTnQjUf2vzV794WdXO62y+2+2KuZsWqfgnf4dp1Wa2KOcFxNpB5S63QO4pSjWZEC0Z1VsOh79VqzDJ6o1s1hlHO1D9nhbafoNZKQ6vUysKXcsNnok22i7ZPRVsb9p2PFlyCmrXr1GyUGVC7m1CHYJ9jN6bxfqbpfqb5fqb9P5sOaqOuUuur1KNPBkfA7QWOyKbuNHTRV98PoJlG1M77To1KY2LOOnIUQRxfzlljRdODaHonmh5F05NoehZN7yXTWyWaXoumF51rbe5PTIYIwm5An/ldy7H+CId4SQ9ff9eyivRWJ+g1YqxDkPqZY4MnDb0WTW9E09vM6Z3q6f0Z/UiVbrGru8FyX8Eij4mxq8CAe8PmIyrwiMpIVNwjKiNRwUdURqJCj6iMRIX/p6iAws5T0HAalcZV/21cdbmvvq5zFeL8BfCXrua+VLvSVRNdPSloWldzX9fd0NX0IpBx2lVw0dVgX10OADcYwE0NkHvLaLL4dLkXn3GHzzEMtrMw85YRGzNFn3nLKEGfecuIle/pOaH2FrpHWtg1tQNfM9/MmW7RIIimz3wzJ0GfeWsyQZ/5Zk6CPvPMnKAX3Ram3DPzNH3umXmaPvvMPEkvOteS6FxLonMtic61JDrXkuhcS4Jz7TGc/lpsy8WyWrVv267f6+eTl2/3v98+/gniPw==",
      "brillig_names": [
        "total_supply"
      ],
      "assert_messages": {
        "21": "Function total_supply can only be called statically",
        "18": "Not initialized",
        "47": "call to assert_max_bit_size",
        "66": "Array index out of bounds",
        "78": "attempt to add with overflow"
      }
    },
    {
      "name": "transfer",
      "is_unconstrained": false,
      "custom_attributes": [
        "aztec(private)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "call_context",
                  "type": {
                    "fields": [
                      {
                        "name": "msg_sender",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "storage_contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "function_selector",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::function_selector::FunctionSelector"
                        }
                      },
                      {
                        "name": "is_delegate_call",
                        "type": {
                          "kind": "boolean"
                        }
                      },
                      {
                        "name": "is_static_call",
                        "type": {
                          "kind": "boolean"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::call_context::CallContext"
                  }
                },
                {
                  "name": "historical_header",
                  "type": {
                    "fields": [
                      {
                        "name": "last_archive",
                        "type": {
                          "fields": [
                            {
                              "name": "root",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "next_available_leaf_index",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                        }
                      },
                      {
                        "name": "content_commitment",
                        "type": {
                          "fields": [
                            {
                              "name": "num_txs",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "txs_effects_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "in_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "out_hash",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::content_commitment::ContentCommitment"
                        }
                      },
                      {
                        "name": "state",
                        "type": {
                          "fields": [
                            {
                              "name": "l1_to_l2_message_tree",
                              "type": {
                                "fields": [
                                  {
                                    "name": "root",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "next_available_leaf_index",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                              }
                            },
                            {
                              "name": "partial",
                              "type": {
                                "fields": [
                                  {
                                    "name": "note_hash_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "nullifier_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "public_data_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::partial_state_reference::PartialStateReference"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::state_reference::StateReference"
                        }
                      },
                      {
                        "name": "global_variables",
                        "type": {
                          "fields": [
                            {
                              "name": "chain_id",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "version",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "block_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "slot_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "timestamp",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 64
                              }
                            },
                            {
                              "name": "coinbase",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::eth_address::EthAddress"
                              }
                            },
                            {
                              "name": "fee_recipient",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "gas_fees",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::global_variables::GlobalVariables"
                        }
                      },
                      {
                        "name": "total_fees",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::header::Header"
                  }
                },
                {
                  "name": "tx_context",
                  "type": {
                    "fields": [
                      {
                        "name": "chain_id",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "version",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "gas_settings",
                        "type": {
                          "fields": [
                            {
                              "name": "gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "teardown_gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "max_fees_per_gas",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            },
                            {
                              "name": "inclusion_fee",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::gas_settings::GasSettings"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::transaction::tx_context::TxContext"
                  }
                },
                {
                  "name": "start_side_effect_counter",
                  "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 32
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "to",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "fields": [
              {
                "name": "call_context",
                "type": {
                  "fields": [
                    {
                      "name": "msg_sender",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "storage_contract_address",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "function_selector",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::function_selector::FunctionSelector"
                      }
                    },
                    {
                      "name": "is_delegate_call",
                      "type": {
                        "kind": "boolean"
                      }
                    },
                    {
                      "name": "is_static_call",
                      "type": {
                        "kind": "boolean"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::call_context::CallContext"
                }
              },
              {
                "name": "args_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "returns_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "min_revertible_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "is_fee_payer",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "max_block_number",
                "type": {
                  "fields": [
                    {
                      "name": "_opt",
                      "type": {
                        "fields": [
                          {
                            "name": "_is_some",
                            "type": {
                              "kind": "boolean"
                            }
                          },
                          {
                            "name": "_value",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "std::option::Option"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::max_block_number::MaxBlockNumber"
                }
              },
              {
                "name": "note_hash_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "nullifier_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "key_validation_requests_and_generators",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "request",
                        "type": {
                          "fields": [
                            {
                              "name": "pk_m",
                              "type": {
                                "fields": [
                                  {
                                    "name": "x",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "y",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "is_infinite",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                              }
                            },
                            {
                              "name": "sk_app",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"
                        }
                      },
                      {
                        "name": "sk_app_generator",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"
                  }
                }
              },
              {
                "name": "note_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::note_hash::NoteHash"
                  }
                }
              },
              {
                "name": "nullifiers",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "note_hash",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::nullifier::Nullifier"
                  }
                }
              },
              {
                "name": "private_call_requests",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "call_context",
                        "type": {
                          "fields": [
                            {
                              "name": "msg_sender",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "storage_contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "function_selector",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::function_selector::FunctionSelector"
                              }
                            },
                            {
                              "name": "is_delegate_call",
                              "type": {
                                "kind": "boolean"
                              }
                            },
                            {
                              "name": "is_static_call",
                              "type": {
                                "kind": "boolean"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::call_context::CallContext"
                        }
                      },
                      {
                        "name": "args_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "returns_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "start_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "end_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::private_call_request::PrivateCallRequest"
                  }
                }
              },
              {
                "name": "public_call_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "item",
                        "type": {
                          "fields": [
                            {
                              "name": "contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "call_context",
                              "type": {
                                "fields": [
                                  {
                                    "name": "msg_sender",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "storage_contract_address",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "function_selector",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::function_selector::FunctionSelector"
                                    }
                                  },
                                  {
                                    "name": "is_delegate_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  },
                                  {
                                    "name": "is_static_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::call_context::CallContext"
                              }
                            },
                            {
                              "name": "args_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "returns_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "revert_code",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 8
                              }
                            },
                            {
                              "name": "start_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "end_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                  }
                }
              },
              {
                "name": "public_teardown_call_request",
                "type": {
                  "fields": [
                    {
                      "name": "item",
                      "type": {
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "call_context",
                            "type": {
                              "fields": [
                                {
                                  "name": "msg_sender",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "storage_contract_address",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "function_selector",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::function_selector::FunctionSelector"
                                  }
                                },
                                {
                                  "name": "is_delegate_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                },
                                {
                                  "name": "is_static_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::call_context::CallContext"
                            }
                          },
                          {
                            "name": "args_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "returns_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "revert_code",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 8
                            }
                          },
                          {
                            "name": "start_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "end_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                      }
                    },
                    {
                      "name": "counter",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                }
              },
              {
                "name": "l2_to_l1_msgs",
                "type": {
                  "kind": "array",
                  "length": 2,
                  "type": {
                    "fields": [
                      {
                        "name": "recipient",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::eth_address::EthAddress"
                        }
                      },
                      {
                        "name": "content",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::messaging::l2_to_l1_message::L2ToL1Message"
                  }
                }
              },
              {
                "name": "start_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "end_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "note_encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "note_hash_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::NoteLogHash"
                  }
                }
              },
              {
                "name": "encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "randomness",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::EncryptedLogHash"
                  }
                }
              },
              {
                "name": "unencrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::LogHash"
                  }
                }
              },
              {
                "name": "historical_header",
                "type": {
                  "fields": [
                    {
                      "name": "last_archive",
                      "type": {
                        "fields": [
                          {
                            "name": "root",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "next_available_leaf_index",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                      }
                    },
                    {
                      "name": "content_commitment",
                      "type": {
                        "fields": [
                          {
                            "name": "num_txs",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "txs_effects_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "in_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "out_hash",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::content_commitment::ContentCommitment"
                      }
                    },
                    {
                      "name": "state",
                      "type": {
                        "fields": [
                          {
                            "name": "l1_to_l2_message_tree",
                            "type": {
                              "fields": [
                                {
                                  "name": "root",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "next_available_leaf_index",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                            }
                          },
                          {
                            "name": "partial",
                            "type": {
                              "fields": [
                                {
                                  "name": "note_hash_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "nullifier_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "public_data_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::partial_state_reference::PartialStateReference"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::state_reference::StateReference"
                      }
                    },
                    {
                      "name": "global_variables",
                      "type": {
                        "fields": [
                          {
                            "name": "chain_id",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "version",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "block_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "slot_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "timestamp",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 64
                            }
                          },
                          {
                            "name": "coinbase",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::eth_address::EthAddress"
                            }
                          },
                          {
                            "name": "fee_recipient",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "gas_fees",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::global_variables::GlobalVariables"
                      }
                    },
                    {
                      "name": "total_fees",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::header::Header"
                }
              },
              {
                "name": "tx_context",
                "type": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "version",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "gas_settings",
                      "type": {
                        "fields": [
                          {
                            "name": "gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "teardown_gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "max_fees_per_gas",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          },
                          {
                            "name": "inclusion_fee",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::gas_settings::GasSettings"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::transaction::tx_context::TxContext"
                }
              }
            ],
            "kind": "struct",
            "path": "protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"
          },
          "visibility": "public"
        }
      },
      "bytecode": "",
      "debug_symbols": "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nk5+5p5OfuaeTn7mnk5+5p5OfuaeTn7mnk5+5p5OfuaeTn7mnk5+5p5OfuaeTn7mnk4yc08nmbmnk8zc00lm7ukkZuIbVmbu6SQz93SSmXs6ycw9nWTmnk4yc08nmbmnk8zc00lm7ukkM/d0kpl7OsnMPZ1k5p5OMnNPJ5m5p5PM3NNJZu7pJDP3dJKZezrJzD2dZOaeTjJzTyeZuaeTzNzTSWbu6SQz93SSmXs6ycw9nWTmnk4yc08nmbmnk8zc00lm7ukkM/d0kpl7OsnMPZ1k5p5OMnNPJ5m5p5PM3NNJZu7pJDP3dJKZezrJzD2dZOaeTjJzTyeZuaeTzNzTSWbu6SQz93SSmXs6ycw9nWTmnk4yc08nmbmnk8zc00lm7ukkM/d0kpl7OsnMPZ1k5p5OMnNPJ5m5p5PM3NNJZu7pJDP3dJKZezrJzD2dZOaeTjJzTyeZuaeTzNzTSWbu6SQz93SSmXs6ycw9nWTmnk4yc08nmbmnk8zc00lm7ukkM/d0kpl7OsnMPZ1k5p5OMnNPJ5m5p5PM3NNJZu7pJDP3dJKZezrJzD2dZOaeTjJzTyeZuadTmLmnU5i5p1OYuadTmLmnUzAT37Bh5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTmHmnk5h5p5OYeaeTnHmnk5x5p5OceaeTnHmnk7RTHzDxpl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6xZl7OsWZezrFmXs6ReyeTqUsxlsJjaet82IXm50P+f68CbVvd2W123ljyh/Pf8OBvsG14UBHCO/Biesuuf07hz8ne/uv//3/+df/+T//9f/+3/7nv/8f//0//vXf/+1//fq0+fW/6m+E38Ta7+9L/sFW+dp09fewX39E3v9IeP8j8f2PpPc/kt//SHn7I/U3OF9/pLrbUwrLR/LzR9z7H/Hvf0Te/0h19bPI74/k4J8+Et//SHr/I/n9j1RXP0e3fCTZvz9Sf7vo9Ufs+x9x73+kuvo5L0uZy9NS1t8aef2R8P5H4vsfSa8/Uszz9PP7Hylvf6T+l+9iFx8r7snH6n9vfv0R9/5H/Psfqa5+uV/mxpY/PvMv7zz8a4AweoA4eoA0eoA8eoAyeID6X6p6DmBHD+BGD+BHDzB6J8fROzmO3slx9E6Oo3dyHL2T0+idnEbv5PTzfRDSItdCvj/rjfv6/jD4+3/uQ9EsWjaa+PT977rQ7TPZfPAZ+/5nymC25ecnTLR+YfsQTS3fnwZ/fx78/WXs91tjRg9gO+yesg4gzwO40QP40QPI6AHC6AHi6AHS6AEGH/LWlMEDWDN6ADt6ADd6AD96ABk9QBg9QBw9QBo9wOidbEfvZDd6J7vRO9mN3slu6E6+/Zf99eRWZ8OQl2FCuv9hzdX+rpazrSRUq496k5ZAypuHUNnFysNys+L3w2KTf3z4y0dnNdzNarif1XCZ1fAwq+FxVsPTOMN/fX0e+/Vl6Ne7n98VxS1/rC6+HLaqzs5quJvVcD+r4TKr4WFWw+M4w/+59TZPv6/PY7++DP16b8Z+vR379W7s1/uxXy9jvz6M/fqfO+ZNwMqqZR/S6t8DiBk9wM+X17r7e6Euub8HSKNnkAcPEGyHAdbXYW/54fT3AG70AH70ADJ6gDB6gNhhgOTuA+S/B0ijB8ijByiDB4hm9AB29ABu9AAddvLtvF4etsH+PYCMHiCMHiCOHiCNHiCPHqAMHiB12Mk2+3WA8nfglezoAWRwXJTC6AHi6AHS6AHK4AGyGT2AHT2AGz3AWH1w+w/369H6H+BSvBfCNFIxYheDxNv/OixRbuc0281ptp/TbJnT7DCn2XFOs9Mos/+59Qe3Xl9eBn65+/G9EJe/5En8+25zduSXu5Ff7kd++Y/Pq7IkWqQ8LWgY+eVx5Jf/dIcGuzwabPz7y/PILy8Dv9ybkV/+U1cMfknsBv/05WHkl/90QaMsQXOM5u8vLwO/XEZikZ/u0LBeoiGGv788jfzyPPLLy8AvD2bkl9uRX+5Gfrnv9+Xp75eEgoz88h/v0LDu0Pz05T/eoZK2vzyN/PI88st/fOTaJeKK9u8/PkUz8svtyC93I7/8pzs0mrVgzT79JUVGfnkY+eVx5JenkV+eR355GfjlyfT7cve3nyc78st/vEPN8vfI6J++/Md3aJHtL5eRXx5GfvmPd+iL+DylkV8+UrakkbIlm5Ffbkd+uRv55X7Yl9/+w/96cKN4Ksr6B+IY4+tBrNjlJTsr7u+E1EblynsDhLIOkBsPQ5W5nG2W8RKzTJeYZb7ELMsVZunMJWZpQWb5z82qJh1bPJAtcqwtUIVKZ5tlvMQs0yVmmS8xy3KFWXoDMst/bpbH6djigGzxQLag3Mn/3Czp07EF5X7751bLdiVbUO6Kf27WaKrYIgfv6UblpEBZc7D/vn7vPRgkNsFCWXO433xQGqplTYSyJkFZk6GsKUdb80Htq5Y1FsoaB2WNh7JGoKwJUNYcfRZ/UjasZU2GsqYgWZMMlDUWyhoHZc3RZ/EnNeNa1kDpqZShrClI1mQLZY2DssZDWSNQ1gQca27/Ib8e3frV1LC+5p38/ZM2lto4vtzfBnv4nVlrfOXpaJbpRnefgPVm+w/bb5oja0GTFUktc1bNmYx5MqfqP7G49f3d4nPDnLL+om2JD8b86sLwbHpYBfBDdOyrhpew3iYlyh2Kt7n69D1BZB5coWz/cft804zXmGa6xjTzNaZZLjHNjV+JPt007TWm6a4xTX+Naco1pnmNKMhfIwry14iCfIcoyBp5yMqXxkRjXvVqzKn13TdFuz788JPqOW2/6jGJ8WJmNt7ObLyb2Xg/s/HSND400zNh/VlaGx6nehvi+Wln3ZLwcrcjtpHMscWsPzRXYvmvVupnaWSW5P6XCium8uxDA67s/nj2n1steK6AxefFEYPJT1gisdSwJGKpYcnEUsNSiKWCJRhiqWGxxFLD4oilhsWfCstabpXE/QiLEEsNy7mi3G5YFKLc9W1/Zx/6JNYn6vz6e9q3fz6cF/HFK+fzmJ/nNr9MbX40c5tv5zbfzW2+n9t8mdv8MLf5c9+6ce5bN85968a5b900962b5r5109y3boI/92V92j8+HV+0ap3G/Iy+dUUWDe3k4WX0xXz0rStleWPDhYc2v1+ffHraO78k0rx7qFWyyWwXVpx1sujBeNfJyrkmG+I62ce81+/Joh/4XSeLfj10nSy6iHhzslnWyZb0NFl0ydF1sugCpedkC3xM1HOyJ4ug7pP1JjxN9mQR1OvJniyCej1ZOdVk/Voo630yT5M9VwTVmOy5IqjGZM8VQTUme64IyqewTjbnp8meK4J6PVlrzhVCtWZ7rhiqNdtzBVGy/vaZl4ffD15ne64oqjVbudRszxVHtWZ7rkDqcbZOnmd7rkiqNdtzhVKt2Z4rlpK0JlUlPyVVrT1XLNWa7bliqdZsTxZLNWZ7slhq/QVXH0x6nq1carYni6Uasz1ZLNWY7bliqeDcOlsfnmd7rliqNdtzxVKN2bpzxVKt2Z4rlnqcrfjn2Z4rlmrN9lyxVGu2cq7ZllXfRvOcqXHniqVasz1XLNWa7cliqcZszxVLRWvX2brKfXuuWKoxW3+uWKo123PFUq3ZniuWimLW2YbnfLI/VyzVmq1carbniqVasz1XLPU42+ieZ3uuWKo125PFUq9ni1/N/rKuzsKXs4u5F9aZ8mw//EnSsB/+bGjYD7/bG/bDa6HX9sPXtLfsh9crDfvhq9rzvaq95Gf74ZvJNOyHv38b9sO3FWjYD99XoGE/fEOZhv3wHWUa9sO3lHltP3xjipb98E1lGvZPfv/C949o2T/5/Qvf5aFl/+T3L3wvhlf23/4r/Hq2/gKL+OpPX/j4a+L1t0Bef8S//xF5/yPh/Y/E9z+S3v9Ifv8j5e2P1P9aGMLiYCE+f8S+/xH3/kf8+x+prn6IS/ozpPj0kfD+R+L7H0nvf6S6+qGsv2/8x48Qf3+kvP2R+m9Tvf6Iff8jrvWR/PQR//5H5P2P1C/DtZlOfDwuf38kvv+R9P5H8vsfqQuLtJzmMZW/P7Lx2xgvP2Lf/4h7/yMbQeJyjyXjnz4i738kvP+R+P5HUuMj1j59JL//kfL2R+o9udP6u/EpPu2Xeh/s1x9x73/Ev/+R6uqne+v+54uv/oeg1x+J738kvf+R6uqn9Y942TxdFvWk/suP1PPorz9i3/+Ia3zEytNH/Psfkfc/Ul39HJdDKcenQ6me+Xv9kfT+R/L7H6mufk7L3s/5afr1LM7rj9j3P+Le/0h19XNZ9n4xT9OvK/LXHwnvfyS+/5HU+IhNTx/J73+kvP2ReiO1cv+t2fJ0i9Xbkb3+iHv/I/7Nj9z+K/56st55KQe7dMzIj3Kh2JqoNnn9uaRf/y6Pj/9zq99R3yHS+CHy+CFKhyGKk3WI8vAi5PcQG31sOo9hDxjDHTCGP2AMOWCMcMAY8YAx0gFj5APGOGCf2wP2uT1gn9sD9rntss/jwxjxeQw5YIxwwBjxgDHSAWPkA8Yo48dw5oAx7AFjuAPGOGCfuwP2uTtgn7sD9rnrsM9vAe06xu3fz2PkA8Yo48fw5oAx7AFjuAPG8AeMIQeMEQ4YIx4wxgH73B+wz/0B+1wO2OfSZZ+v1S6//m2fxnAHjOEPGEMOGCMcMEY8YIx0wBj5gDHK+DGCOWCMA/Z5OGCfhwP2eThgn4cD9nnoss+zvY+R3dMY6YAx8gFjlPFjRHPAGPaAMdwBY/gDxpADxggHjHHAPo8H7PN4wD6PB+zz1MN3b3+pWcewDw3Pf4+Re4yR7m9A3/4tT2PIAWOEA8aIB4yRDhgjHzBGGT9GMQeMYQ8Ywx0wxgH7vBywz8sB+7wcsM9Ll30e7vdHCk/3R8kHjFGGj+GMOWAMe8AY7oAx/AFjyAFjhAPGiAeMkQ4YIx8wxgH73B6wz22XfZ7LfYxinsZwB4zhDxhDDhgjHDBGPGCMdMAY+YAxyvgxnDlgjAP2uTtgn7sD9rk7YJ/3eL/E5rX/+a9/+6cx4gFjpAPGyAeMUcaP0eX9ktYY9oAx3AFj+APGkAPGOGCf+wP2uT9gn/sD9nmX9zKy3HPIOcjTGB386hZArWUstyDEPo0RDhgjHjBGOmCMfMAYZfwYPd5naI5hDxjDHTCGP2CMd/f514fCJx+Kn3woffKh/MmHygcfevuv9l8fsp98yH3yIf/Jhz7xiPiJR8RPPCJ+4hHxE4+In3hE+sQj0icekT7xiPSJR6RPPCJ94hHpE49In3hE+sQj0icekT/xiPyJR+RPPCJ/4hH5E4/In3hE/sQj8icekT/xiPyJR5RPPKJ84hHlE48on3hE+cQjyiceUT7xiPKJR5RPPKJ84BHemE8+ZD/5kPvkQ/6TD8knHwqffCh+8qH0yYfqHpHWd77KTTi/jsjl/scsSU+tHfzG3+Q6jrDxF7meI9jhI7jhI/jhI8jwEcLwEeLwEdLwEYbvaTt8T7vhe9oN39Nu+J52w/e0G76n3fA97YbvaTd8T7vhe9oN39N++J72w/e0H76n/fA97YfvaT98T/vhe9oP39N++J72w/e0DN/TMnxPy/A9LcP3tPx8T9927fKHFZ/8Y9dEqTztTFp05e1Pkn8+/WVQQDMoohmU0AzKaAYVMIOCQTPIohnk0AzyaAahndQB7aQOaCd1QDupA9pJHdBO6oh2Uke0kzqindQR7aSOaCd1RDupI9pJHdFO6oh2Uke0kzqhndQJ7aROaCd1QjupE9pJncae1F9DxPFDpPFDdDgfUwjrEFGehyjDh8hm/BC27xDJPg/hxg/hxw/R4SzIbh0i+8pahPFDxPFDdNgXef1tTZ+zeRqimPFDdPhTU3Rraj1KeB7i3bX4+lD65EP5kw9V17G49e8F5fa33QaB7T8u1I709cdhb39KvD+cflkj9Rf/1KyxUNa4Y62JZv0NuGjS3XGS+zbHY5kjWOYELHMiljkJy5yMZU6BMscaLHMsljlYp7LFOpUt1qlssU5li3UqW6xT2WKdyhbrVHZYp7LDOpUd1qnssE5lh3UqO6xT2WGdyg7rVHZYp7LDOpU91qnssU5lj3Uqe6xT2WOdyh7rVPZYp7I/+lS2fklkRxuezclY5hQoc8RgmWOxzHFY5hx97tjkVnOyfzLn6J2V7udOiunJnAJlTjBY5lgsc4525dtNtZhz21pP5kQscxKWORnLnAJlTjRY5lgscxyWOR7LHMEyB+tUjlincsQ6lSPWqRyxTuWkeSq7p1g5WSxzDj+VXV7NefiJ2Zs5lYeLXUPH4u4qKOZv2/3EtsvEtgdo29f3w2KR+GR7nNj2NLHtGdp2U+7+Xh5tr5hxm+lqhrlfN/Frnhn7THpnnve3wOVRt3/Ps2CfX2m980qxf/tiwT6/XtuOfX69th37/CrLw8lY/2Q79vn12vYyre3BGGx/j3d/jz+4N4LBvjfemeereyMc/rLjO/NMxpXVF6N9PU/v7nV3Lv+9noe/67U9zy9zNJNvFXMOv4Hj3ZwUnsyJWOYkLHMyljkFypzD32ZqmGOxzHFY5ngscwTLHKxT2WOdyh7rVPZYp7LHOpUF61QWrFNZsE5lwTqVBetUFqxTWbBOZcE6lQXrVBasUzlgncoB61QOWKdywDqVA9apHLBO5YB1KgesUzlgncoB61SOWKdyxDqVI9apHLFO5Yh1KkesUzlincoR61SOWKdyxDqVE9apnLBO5YR1KiesUzlhncoJ61ROWKdywjqVE9apnLBO5Yx1KmesUzljncoZ61TOWKdyxjqVM9apnLFO5Yx1KmesU7lgncoF61QuWKdywTqVC9apXLBO5YJ1KhesU7lgncoF6lSOBupUjgbqVI4G6lSOBupUjgbqVI4G6lSOBupUjgbqVI4G6lSOButUtlinssU6lS3WqWyxTmWLdSpbrFPZYp3KFutUtlinssU6lR3WqeywTmWHdSo7zVO5uCdzjj6Vk1lLDZMtT+YELHMiljkJy5yMZU6BMufw2r6GORbLHIdljscyB+tU9linssc6lT3WqeyxTmWPdSoL1qksWKeyYJ3KgnUqC9apLFinsmCdyoJ1KgvWqSxYp3LAOpUD1qkcsE7lgHUqB6xTOWCdygHrVA5Yp3LAOpUD1qkcsU7liHUqR6xTOWKdyhHrVI5Yp3LEOpUj1qkcsU7liHUqJ6xTOWGdygnrVE5Yp3LCOpUT1qmcsE7lhHUqJ6xTOWGdyhnrVM5Yp3LGOpUz1qmcsU7ljHUqZ6xTOWOdyhnrVM5Yp3LBOpUL1qlcsE7lgnUqF6xTuWCdygXrVC5Yp3LBOpUL1KmcDNSpnAzUqZwM1KmcDNSpnAzUqZwM1KmcDNSpnAzUqZwM1KmcDNapbLFOZYt1KlusU9lincoW61S2WKeyxTqVLdapbLFOZYt1KjusU9lhncoO61R2WKcyVm1fwqrtS1i1fQmrti9h1fYlrNq+hFXbl7Bq+xJWbV/Cqu1LWLV9Cau2L2HV9iWs2r6EVduXsGr7ElZtX8Kq7UtYtX0Jq7YvYdX2JazavoRV25ewavsSVm1fwqrtS1i1fQmrti9h1fYlrNq+dHxtXzSrOTE9mlP55hJl+eaS8vpwzN+2B2jby9IVKhiTnmyPE9uegG0PxpfVdnm2PWPbnlfbQ3yyvUDbnu4+8+vr/rT9+ErHj20vT7ZbZNutXX3Gumfb3cS2e2jbQ1htj+HJduR7tWU78r3ash3nXv0yB+eq/DIH5wb5ZU7CuRS+zME557/MwTm6v8ypngo55dUcJ/J6BJ/LEs/78hBXWi/fQ+QfDyE2rZLBmfA8RBk+RL1Qre8QdvwQbvwQfvwQMn6IMH6I2GGI+0lQHSKNHyKPH6IMH6J02N3O34cI5nkIO34IN34IP34IGT9EGD9EHD9Eh93tyhJ3i7eVIfL4IcroIbIx44fosbtzvg9hn4dw44fw44eQ8UOE8UPE8UOk8UPkzkPk5yHK8CGsGT9Eh90t2S9DSKkM4cYP4ccPIeOH6LC7Jbj7EOWPIZ6fdnn9u4kr7v5LIP4WR34ZFNEMSmgGZTSDCphBzqAZZNEMcmgGeTSDBM0gtJPaoZ3UDu2kdmgntT/6HAr3Pxo/pNa9cd/mHL3Holmz9yY+mzN2h30NEccPkcYP0cGvg1s1QkimsW5WlvdV7OMfXcy3NQXJGjFQ1tijrfFutSY/WvPeYVUxw8c1fefz/elfozw/HFfR83DsuPjNxJHJExNPJk9MhEyemAQyeWIST8NETFzvfSuPTL4mmq4y0Xyeico9/SflaaLlRBO9h6zh79fgczg8KsuLOc6Yv6OyYKGscVDWHB2JOLfsECf2yRqBsiZAWdPj3svrSz2hIjRDhxsnuvWejxKeh8jjhyjDh4hm/BB2/BBu/BB+/BAyfogwfog4fojxuzuO391x/O5O43d3Gr+70/jdncbv7jR+d6fxuzuN391p/O5O43d3Gr+78/jdncfv7jx+d+fxuzuP3915/O7O43d3Hr+78/jdncfv7jJ+d5fxu7uM391l/O4u43d3Gb+7y/jdXcbv7jJ+d5fhu7sYM34IO34IN34IP34IGT9EGD9EHD9EGj9EHj/E+N1tx+9uO3532/G7247f3Xb87rbjd7cdv7vt+N1tx+9uO353u/G7243f3W787nbjd7cbv7vd+N3txu9uN353u/G7243f3X787vbjd7cfv7v9+N3tx+9uP353+/G724/f3X787vbjd7eM390yfnfL+N0t43e3jN/dMn53y/jdLeN3t4zf3TJ+d4fxuzuM391h/O4O43d3GL+7w/jdHcbv7vHvqpXx76qV8e+qlfHvqpXx76qV8e+qlfHvqpXx76qV8e+qlfHvqpXx76qV8e+qlfHvqpXx76qV8e+qlfHvqpXx76qV8e+qlfHvqpXx76qV8e+qlfHvqpXx76qV8e+qlfHvqpXx76qV8e+qlfHvqpXx76qV8e+qlfHvqpXx76qV8e+qlfHvqpXx76qV8e+qlfHvqpXx76qV8e+qlfHvqpXxL5KV8S+SWTP+TbLbGPaAMTr4bb8WQzd7jm6bFe1SMxmdr9gTwexJYPZkMHuObm4YTVntkWd7rAGzx4LZ48Ds8WD2CJg9Acyew8/nVz3pbvYkMHsymD0Fyx5nwOyxYPY4MHs8mD0CZk8AswfsfHZg57MDO58d2Pnswc5nD3Y+b7yrGezygy05RPfaHmtzWtqr3f6dw+vHvVt/U8+7dDcp/TYooBkU0QxKhxvk199S8v6hrVyqeae9N0+0D40WF+PzzMaXiY3feId2EuPtzMa7mY33MxsvMxsfZjY+zmz8zDeszHzDysw3bJj5hg0z37Bh5hs2zHzDhplv2DDzDRtmvmHDzDdsmPmGDTPfsHHmGzbOfMPGmW/YOPMNG2e+YePMN2yc+YaNM9+wceYbNs58w6aZb9g08w2bZr5h08w3bJr5hk0z37Bp5hs2zXzDpplv2DTzDZtnvmHzzDdsnvmGzTPfsHnmGzbPfMPmmW/YPPMNm2e+YfPMN2yZ+YYtM9+wZeYbtsx8w5aZb9gy8w1bepzzxdjV+GL94+Pfg/Q4j4s390Ek/z2INeaIQewRg7gjBvFHDCJHDBKOGCQeMUg6YpB8xCBH7Hh7xI63R+x422HHO2PXn6t3xpvnQfwRg8gRg4QjBolHDJKOGCQfMUg5YBBnjhjEHjHIETveHbHj3RE73nXZ8SWsg9jnMNW6eMQg6YhB8hGDlAMG8eaIQewRg7gjBvFHDCJHDHLEjvdH7Hh/xI7vUZnqbMr3QX498/cg5YBBelR6tgexRwzijhjEHzGIHDFIOGKQeMQg6YhBjtjxcsSOD0dsxnDEZgxHbMZwxGbsUuJyO8vXtMdtlV8//rpvhO1SttLVoAJmUJfykvcM6vZ3CNulvETNeDez8X5m42Vm48PMxseZjU8zG59nNr5MbHya+YZNM9+waeYbNs18w3YpL1EzfuYbNs18w6aZb9g08w2bZr5h88w3bJ75hs0z37B55hu2S3mJmvEz37B55hs2z3zD5plv2DzzDVtmvmHLzDdsmfmGLTPfsF3KS9SMn/mGLTPfsGXmG7bMfMOWiW9YZya+YZ2Z+IZ1ZuIb1pmJb1hnJr5hnZn4hnVm4hvWmYlvWGcmvmGdmfmGtTPfsHbmG9bOfMPamW/YHoWVesbPfMPamW9YO/MNa2e+Ye3MN6yb+YZ1M9+wbuYb1s18w/YoZNYzfuYb1s18w7qZb1g38w3rZr5hfZdzPqa78fkP478H8UcM0uPcdP7eQswFeR6ky/lW8n0Ql58HiUcMko4YJB8xSDlgkC4//NscxB4xiDtiEH/EIHLEIEfseDlix8sRO16O2PFdfuDUu/t94sNTrx/X5YdIXZH7IO75Punyg6HNQdwRg/gjBpEjBglHDBKPGCQdMUg+YpBywCDxiB0fj9jx8YgdH4/Y8V0qq8XdBxFJz4P02PG+3KWDuGd90qVSuTlIOmKQfMQg5YBBulTSNgexRwzijhjEHzGIHDHIETs+HbHj0xE7Ph2x47tUDAZ7j+qDPEf1XSr7JN/1SbDPl1aXCrzmIO6IQfwRg8gRg4QjBolHDJKOGCQfMUg5YJByxI4vR+z4csSOL0fs+C6VMKHcf6sk2vI8SI8df3vkPpPinweJRwySjhgkHzFIGT+I71L50BzEHjGIO2IQf8QgcsQg4YhB4hGDpCMG6bHjozycwn8+/j1IOWCQLm9iNwexRwzijhjEHzFIOGKQeMQg6YhBRm/G23+kXw/Xtby//3jaTaff/+Rmpfyyr67NGx+qa+3Wh+wnH3KffMh/8iH55EPhkw/FTz6UPvnQJx6RP/GI8olHlE88onziEeUTjyifeET5xCPKJx5RPvGI8olHlE88YuP3Epufsh99yn30Kf/Rp+SjT4WPPhU/+lT66FP5o0995Bv2I9+wH/mG/cg37Ee+YT/yDfuRb9gN38hLnlyMkedPpY8+lT/6VPnkU8589Cn70afcR5/yH31KPvpU+OhTH/mG+8g33Ee+4T7yDf+Rb/iPfMN/5Bv+I9/wH/mG/8g36q/uinHr2+TGVT5VPvlU/ZVUufnM8ikbw/On/Eefko8+FT75VP1NMjF+/ZSR+Pyp+NGn0kefyh99qnzyqfrrVc1P2Y8+5T76lP/oU/LRpz7yjfiRb8SPfCN+5BvxI99IH/lG2iCf4/qp8nzapPDRp+JHn0offSp/9Knyyaey+ehT9qNPuY8+5T/61Ee+kT/yjfyRb+SPfCN/5Bv5I98oH/lG+cg3yke+UT7yjfKRb5SPfKN85BvlI98oH/lG+cQ3NtrLNT9lP/qU++hT/qNPyUefCh99Kn70qfTRp/JHn/rIN+xHvmE/8g37kW/Yj3zDfuQb9iPfsB/5hv3IN+xHvmE/8g33kW+4j3zDfeQb7iPfcB/5hvvIN9xHvuE+8g33kW+4j3zDf+Qb/iPf8B/5hv/IN/xHvuE/8g3/kW/4j3zDf+Qb/iPfkI98Qz7yDfnIN+Qj35CPfEM+8g35yDfkI9+Qj3xDPvKN8JFvhI98I3zkG+Ej3wgf+Ub4yDfCR74RPvKN8JFvhI98I37kG/Ej34gf+Ub8yDfiR74RP/KN+JFvxI98I37kG/Ej30gf+Ub6yDfSR76RPvKNj/Ki7qO8qPsoL+q28qLJrp/Kf/495fl1t1jc8m5cLP7+l+/0PULuMEL26wg5uL9HKKNH2MrNdhzBDh/BDR/BDx9Bho8Qeoyw7rlYzN/7YStH3XGENHyEPHyEMnqEYoaPYIeP4IaP4IePIMNHGL6ny/A9XYbv6TJ8T5fRe9obM3wEO3wEN3wEP3wEGT5CGD5CHD5CGj5CHj7C8D1th+9pO3xP2+F72g7f03b4nrbD97Qdvqft8D1th+9pO3xPu+F72g3f0274nnbD97Qbvqfd8D3thu9pN3xPu+F72g3f0374nvbD97Qfvqf98D3th+9pP3xP++F72g/f0374nvbD97QM39MyfE/L8D0tw/e0DN/TMnxPy/A9LcP3tAzf0zJ8T4fhezoM39Nh+J4Ow/d0GL6nw/A9HYbv6TB8T4fhezoM39Nx+J6Ow/d0HL6n4/A9HYfv6Th8T8fhezoO39Nx+J6Ow/d0Gr6n0/A9nYbv6TR8T6fhezoN39Np+J5Ow/d0Gr6n0/A9nYfv6Tx8T+fhezoP39N5+J4e/h6ZH/4emR/+Hpkf/h6ZH/4emR/+Hpkf/h6ZH/4emR/+Hpkf/h6ZH/4emR/+Hpkf/h6ZH/4emR/+HpkMf49Mhr9HJsPfI5Ph75GJkeEjhOEjxOEjpOEj5OEj9NjTr+pQpMt7ZK9HsMNHcMNH8MNHkOEjhOEjxOEjpOEj1Pf0i056//LW019jlJ+P8bJeRzbeJOs5gh0+ghs+gh8+ggwfIfQY4dUdtPEmWc8R0vAR8vARyugRvBk+gh0+ghs+gh8+ggwfYfie9j329Mt71KfhI+ThI5TRI4gZPoIdPoIbPoIfPoIMH+HtHff1qfTRp/JHn3rb23/9Zk/+9WxdHsX1BEpy/3Uv610tZA4Lu2DtH8/+81d767FfH8Z+fRz79Wns1+exX1+Gfn1dB/X7ejv2691Pv/7+c9Mh5Maz1nj5/bA1D9/sXP4yxiMZI0jGBCRj4rHGyPpLuiakJ2MSkjEZyZgCZIw3xxqT1t/9NNk+GWORjHFIxngkY0TPmPJkTEAyJiIZc+wJbNcf+7K3fz8Zk5GMKUDGiIEx5vZf5UvTVY++sg5T0sMPnnj5+uCvPyb+54bPWVPiOqh7nM4L32h9qHzwoTrrlx/6NTX7BWXDaRYoOT2y968kyKuP2Pc/4t7/iH//I/L+R8L7H4nvfyS9/5GqwxWznKbF2T8+8ryNfFx2kU/3g9cbsx3gdfv6esjW7+vt2K93Y7/ej/16ee/rNwOU1x+J73+kugtKuB/ZrjFvl5YfwnP5ed557NeXoV9fP/bf+fpHpzB/fP3zs6WUNSp7uGF/L1Q9Ka9kiwOyxR9pi5PlWRf9k7sIjikBx5SIY0o61JSXR0vGMaXAmBK6HrjPX2/Hfr0b+/V+7NfL2K8PY7++fspsXx3v3jP18vmeA+TRA5QfD/DydK2Xznf8fjv4+93g7/c///5Xh2e9ZL7j94eR3/9f//KVPvrPf2y9c2x+f1L8w28v+LD95/LXH0nvfyS//5Hy9ke2GjpufuQXOP/r0ap5Li4pKvdwaFr3/SbGr7ck/nNDNob1BekYH49m2ZaNLz7yX9/vTPznbZdVt4FNZbkJbDYPaUJbz0aWxZGse3hTzSZTfbd6+YO5uAevs7U3crxZnvXe/PHs1wkhh9v+sPCuYXtJ60RvmdaH88fm2kzzncrd5l/e9exETpZn3R8Hm3xTCaRSoRJJpUIlkUqFSiaVCpVCKs9U6mn8y1OxpFKh4kilQsWTSoWKkEqFCmPbGhXGtjUqjG1rVBjb1qgwtq1QEca2NSqMbWtUGNvWqDC2rVERUqlQYWxbo8LYtkaFsW2NCmPbGhXGthUqgbFtjQpj2xoVxrY1Koxta1SEVCpUGNvWqDC2rVFhbFujwti2RoWxbYVKZGxbo8LYtkaFsW2NCmPbGpWrxiv5TqXEJypXjVdeUkkXPVdSWqxwKcvrh63xfp2g8ZL+sOOL4kXPobcoJlnbqaWHQofFEYUIf4rwouq9J8KLyre3EOZwp5Ea35zd8sXZyd+080VD/WG0rXEPF9XTZZ952Xfmbdf52a9e1X/xZlhwLG8h70N5M+A4lvdFhb0a74umDNR4M/o+lvdF/yyjxbtc9A8+arypL4/lTX15LG/qy2N5C3kfypv68lje1Jc/4f2FkJLxxwipAn+MkMKujbCs83PG/I0wGWq1HyOk/PoxQiqqHyOkSPoxQiHCnyLckDJZ7ghLC2H06y+Q3f42cX861n+XvNOPoyYTJ7Y9TWx7ntj2Mq/t1kxsu53Ydjex7X5i22Vi26Hv1Y4/XJks9C3cdabQd3bXmdZv+LwGtDZn35hpkfWH6lLz2Xz/dWqb/3j4y5wCZU79Rx30zLFY5jgsczyWOfFYc2yJqxi+CdK7/Pu2JiFZ4+3R1qzH600a57+t6eDH1txPeyP+yRu8P2AM6TCGvf82sg+h8bTLYeWa8+PToXZvGVmeDiaUxtMvfgHn11wD+ly9WecaTeNpMfefujEPd7qrhQopLs+mxx+Br36vzWsSy75+1Jv1N578Hz8uH6vfu4bEYh923+3hr8WJXBzcxUlcHNzFyVwc3MUpXBzYxRHDxcFdHMvFwV0cx8X5weJ8IfRE+FOEQoQ/RUhNvAfh+nPk8tB9Y0FI5fpjhNSXP0ZIFbgHYVnf0CrPZyG12k8RBiqqHyOk7tmBMNj7+xXxCSHVyY8RUp38GKEQ4U8RMi7cg9AvrxgF/4Qw8jrZgTDK8uZBfLBhQcjr5McIz3WdWLH35Gh5RPg12XMd/I3JniuBdBv/1WTPleqx60uhtxyheZrsuS7fxmTPlT5pTBY+0ZHKGhQaaTzt8/qKmM/p4UKrFbx5a9aHbXCPD/8ik+DzF2pk4ONINTLw4aEaGfioT42MkMwGGfh4Uo0MfPCpRgY+UlUjAx/WqpFhDLxBJjMG3iLDGHiLDGPgLTKMgbfICMlskGEMvEWGMfAWGcbAW2QYA2+RYQy8QaYwBt4iwxh4iwxj4C0yjIG3yAjJbJBhDLxFhjHwFhnGwFtkGANvkWEMXCeTDWPgLTKMgbfIMAbeInPlGDi7lUyJT2SEZDbIXDkGfk3mwjGwW7uzemfDE5kLx8ANMheOgRtkLhwDu/W9au9E/iZjLxwDN8hcOAZukLlwDPxI5jkGtheOgRtkhGQ2yBwfA5f1aW+cbcxVynKzPhbf2l8/+vBMUdZa54eiHBvT+3LSRmKpYUnEUsOSiaWGpRBLBYszxFLDYomlhsURSw2LJ5YaFiGWGhZGuVUsjHKrWBjlVrEwyq1iYZRbw+IZ5VaxMMqtYmGUW8XCKLeKRYilhoVRbhULo9wqFka5VSyMcqtYGOXWsAij3CoWRrlVLIxyq1gY5VaxCLHUsDDKrWJhlFvFwii3iuWyUe7L997lslHuSyzhslHuayxXjXJfv+4erhrlNrBcNcptYJGrYnn5lnu4apTbwHLVKLeB5apR7uuX28NVo9wGlqtGua+xxBNFuXFVf9GHBpYcl2dzfrDhBuiLyomC3I5UThTjdqRyohD3HSolLr8QWB4PoVCz2BdZSr18iQ/hcKwZ7NcfiBP/gO728BdvIe9DeZ8oKJ+C94mi/Sl4n0hGTMH7RPpkCt4nEj4z8E4XVVRqvC+q1dR4X1QFqvGmvvyL9xcVIZUKFWq1GhUqqhoV6p4aFaqTGpWLaggrfvliKyE2bv0gcf09dfnzIq+ECDEsP6fu42OIEKp/xEl+edgV//rh4pYJFl8a32vu32tyacQpNqxxik1PcUq+qO6hj7zhIxfVavSRN3zkovqSPvKGj1xUE9NH3vARoY/QRxo+ctF8ybl85GslL5rjOeFKXjQvdcKVvGgu7YQryfzfSVayMEt3lpVkLu0sK8mM11lWknmps6wk9eQ8K2mNXf56bY3zT2tJRXmWtSxn6rB8/rV06zdbl9zTWjKCfVrLLy7MSte5XPVOztatM7T+mctV77ds7jO08szlqvnHFperZvMaXM7U1/ZjLs4+c7nqPd3ictW8TYvLVbMgLS5CLtVz96rxbovLZePdBhfGu3UujHfrXBjvVrmcqcNtVy6Md+tcGNfVucgVuHzN9BKR2tdMLxF7fc30RNFUkiVRmm2rMebtj/W/ny01KieKpTpSOVEk1Y/KmXqodqRyoiiqI5UT5Qw7UjlRZNmRipBKhcqJYtCOVE4Ur3akwti2RoWxbY0KY9sKlTN1s+xIhbFtjQpj2xoVxrY1KheNV0Ja3ogND70LbgZ9U7noHRTN8rryLVf5ROVMncW2qXzN9BL3ytdML3FXfM30ROd/tssX5yDPM5XLzPREOYjGTE90TzdmeqJcQWOmJ9L/jZmeKJ56PdMz9XVozPREMdJrjXSmvgCNmZ4pRno9U7nMTM8UI72e6ZlipNczPVOM9HqmZ4qRXs902hjpZr01ZtrA59v8aaOZb/PBQ5Sw/rRSiDXzweOOlvkyt/ngEULLfPBrv2U++F3eMh/8gm6ZD37rNsy34Lduy3zwW7dl/ty3rp371rVz37p27lvXzn3r2rlvXTv3rWvRb92yml8q5jv0W7dhPvqt2zAf/dZtmI9+6zbMR791G+aj37oN89Fv3Yb56Lduw3z0W7dh/ty3LnrL2Zb5c9+6fu5b18996/q5b130Trot88HP/eiWVt3RVcxH7xuZZHk4ZfuH+c/P+iJl+eby2CS71lFb/CpDxf/ZfvsbDPiZpgcG/LTUAwN+DuuBAT/h9cCAKzY9MOBaUA8MeLShBwZcv6qBQW8gqQdm2sj32/xp49Nv86eNIr/Nl7nNnzYi+zYfPW5aX+bNLlXMR49uGuajxyAN89EjhdfmozcybJmPfus2zEe/dRvmo9+6DfPRb92G+ei3bsP8uW9d9D5zLfPnvnXRO7c1zEdvsdYyf+5bF71p2YP5zUI/m+L6e6spu/XpGH7PdZ4r+udznec+//lc57n8fz7XeSKF9lyzXX/wNnv7PNd5woqfz3WeGOTnc50nYPnxXNGb93Wd6zyh0M/neqa4qTXXM8VNrbnKheZ6pripNdcLxU3orfy6zvVCcRN6O7+ec0Vv6Nd1rheKm9Cb+nWd66nu17DmJXLIz3M91Tmc/N3qyrpCncO/TLJYbcC+TYI61b5NOvzw8TdBsZh0c5yGk77T1S7IWjuTW78vcBt6BfPrV3uXp5385uLJpcpFyKXKJZBLlUsklyqXRC5VLplcqlwKudS4HN92bhIullyqXBjv1rkw3q1zEXKpcmG8W+fCeLfOhfFunQvj3ToXxrtVLo7xbp0L4906F8a7dS6Md+tchFyqXBjv1rkw3q1zYbxb58J4t86F8W6Vi2e8W+fCeLfOhfFunQvj3ToXIZcql8vGu9mtVjx04F25XDbebXC5bLzb4HLVeNeZ5Yu9s+GZy1Xj3QYXuWq82+Jy1XjXebNyEXnmctV4t8XlqvFui4uQi6vEu3LVeLfF5arxbovLieLduErB6EODS47Ls49lQL8U5DeWE4W7PbGcKNrtiCWcKNh9B0uJixHl8SAKVYs7diG34URR9BzATxSezwH8RHH/HMCFwI8FfiKlMgfwE0mgOYBfVFvpAb+oatMDflE9qAY8Umn+BfwbC/VgFQtVWxULtVUVixBLDQt1ShXLRdXE7S+ya2c4CbFx+QeJy59fgvx5n1cmGNdGbD4+Rgqh+oedtZOZd8W/fri4ZYLFl8b3mvv3mlwa4cpNxS/hik2VcOWiCohO8o6TXFS10UnecZKLKk06yRtOki6qjukk7zjJRXMFdJJ3nOSimZNzOcn3Ul4023PGpRQu5VmW8qJZtTMuJTOBp1lK5utOs5TMqp1mKZn7OstSZmaoTrOU1JXzLKU1dkFnjfPPi8kYdqLFdPcfLHPJPS8mo9inxfwCU3j7bIC56t8EsnXrDK2vgLlqHjyb+wytVMBc9fZvghGCqYO5asbzEYyrVE+Xq8ZeTTBXjWOaYK6a22qCuWqmqHH4OnPVyLcJ5rKRbwsMI98NMIx8N8AIwdTBMPLdAMPIdwMMA7wNMJcI8L6meqZfxG1N9RJB2PdUTxRWJVmSp9m2+jDmsvx9o1SxnCio6olFiKWG5UQBVU8sJwqnemI5URqxJ5YTxZg9sZwowuyI5Uy/V9sTy4ki155YGOVWsTDKrWIRYqlhYZRbxcIot4qFUW4VC6PcGpYz/ezoO1hCWt6cDQ8l8t78Ti+f6Vck38ESzfJe8y19WcFyiZvoe6qXuF2+p3qJG+N7qie6BbJdzMhBKlM9Uf6iMdUz/cZia6onuq9bUz1R7qA11RPlA1pTletM9UTRUkNGnOlXBVtTPVG01JrqmaKlxlTPFC29nuqZfqSvNdUzRUuNqZ4pWmpMddpo6dt8mdv8aaOab/PBI5Ww/u5NiDXzwaOPlvngEUXLfPAooWE++o8mtcwHv81b5oPf0C3zwW/dlvngt27LfPBbt2X+3Lcu+s+3tMyf+9ZF/8mLhvnoP8bQMn/uWxe9gX3LfPRbt6zml5r56Lduw3z0W7dhPvqt2zAf/dZtmI9+6zbMR791X5uP3mC2ZT76rdswH/3WbZg/962b575189y3LnoL3Zb5c9+6ee5bN89966K3SY1ueTi6mvngJ0+S5atTtn+YX/nmImX55vLYdrrWo1r8KkPF/9nQ+hsM+JmmBwb8tNQDA34O64EBP+G1wHj01pR6YMC1oB4Y8GhDDwy4ftUDIwRTBzNt5Ptt/rTx6bf500aR3+ZPG+t9mz9tRPZlPnp/yLS+zZtdqpiPHt00zEePQRrmo0cKDfPR7/OG+ei3bsN89Fu3YT76rdswH/3WbZiPfuu+Nh+9D17L/LlvXfS+ci3z57510fu0tcyf+9ZF73v2YH6z0s+muP6CacpufTqG33Od54r++Vznuc9/Ptd5Lv/2XLNdf1Q1e/s0Vz9PpPDzuc4TVvx8rvPEID+f6zwBy8/nKhea6zyh0M/neqa4qTXXM8VNrbmeKW5qzfVCcRN6V7+uc71Q3ITe16/rXC8UN6F39us61wvFTehd4N6ba1jzEjnkp7miNwx7b67J361+XlesjmHfJkEdl98mQZ1q3yYdf/jYuPSFv/3lKDScNKxtUYN3D8+ayrMuLWePK3ebU+3RvLzt9gil+qQtshC0JTy296+ZK/cSfAn53jQ85t+4I3EfiTsRd1fc4TXufB7ct626fHFIjxC/Z1quMlOFPm9aM7WXmam7zEz9ZWYql5npiULWxkxPFC02ZnqiQK0x08vESPEyMVK6TIyULhMjpcvESOkyMZJCB0GtmZ4oRhJv1qSDvE5ndC1jTSeKvtQYniiuU2N4oohRjeGJYlEthvlEUa4awxPFz2oMTxSZqzE8UcyvxlDI8McMr6BTvmd6BTXxPdMrxPxfMy0niohCWpuxpud8QjnRPk1ueTZJZaYnUgp5XdNc8t8zFTOt936bP20o/W3+tFHst/nTBpDf5svc5k97HH+brxsLeWmYX8Lyql15ODc37k1Z782HN+J+/b5wzQqzJu1tuINx8ptLIpcql0wuVS6FXGpcrCGXKhdLLlUujlyqXDy5VLkIuVS5BHKpcmG8W+fCeLfOhfFunQvj3SoXx3i3zoXxbp0L4906F8a7dS5CLlUujHfrXBjv1rkw3q1zYbxb58J4t8rFM96tc2G8W+fCeLfOhfFunYuQS5UL4906F8a7dS6Md+tcGO/WuVw23s1u5VLiExe5bLzb4HLZeLfB5arxrjN2teLhJcWVy1Xj3RYXIZcql6vGu87frRB55nLVeLfF5arxbovLVePdRy6VeFeuGu82uISrxrstLieKd+MqBaMPDS45Ls8+9p7/pSC/sZwo3O2J5UTRbk8sck0sJS6dvsvjQRSqFnes8Zdwoih6DuAnCs/nAH6iuH8O4CcSFHMAP5FSmQJ4PJEEmgP4RbWVHvCLqjY94BfVg3rAhcDNswCP1INVLFRtVSzUVlUsVEBVLNQpNSzpomri1yvxi823tFjj8g+y2hzkz/u8MsG4/vqvj4+RQqj+YWf9+Vz/+OuN1YfL2p+w+NL4XnP/XpNLI1yx919vtOk5XEkXVUB0knec5KKqjU7yjpNcVGnSSd5xEqGT0ElaTnLRXAGd5B0nuWjm5FxO8r2UF832nHEpL5qhOuNSXjSrdsKlzMwEnmYpma87zVIyq3aapWTu6zRLKVzKsywldeU8S2mNXf6abY3zT4tZGMNOtJhu/WbrknteTEaxT4v5DYa3zwaYq/5NIFu3ztD6Cpir5sGzuc/QSgXMVW//Jpir5mibYK6a8XwE456rp4O5auzVBHPVOKYJ5qq5rSaYq2aKGodvMEIwdTCXjXxbYBj5boBh5LsBhpHvBhhGvnUwZ/pR4b5gGOBtgLlEgPc9VbnOVC8RhH1P9URhVZIleZptqw9jLsvfN0oVy4mCqp5YThRS9cRyooCqI5Yz/WZtTywnSiP2xHKiGLMnlhNFmD2xCLHUsJwocu2JhVFuFQuj3CoWRrlVLIxya1jO9Eu1PbEwyq1iYZRbxXLRuCWk5c3Z8FAi783v9PKZfkXyHSzRLEbc0pcVLJe4ib6meqbfhWxN9RI3xvdUT3QLZLuYkYNUpnqi/EVrqnKdqZ7ovm5N9US5g9ZUT5QPaE31RJFVa6onipYaMuJMvyrYmuqJoqXWVM8ULTWmeqZoqTFVuc5UzxQtNaZ6pmipMdVpo6Vv86eNgL7Nnzaq+TIf/ce/rHFrTb9xtQmAxx/tCYBHFe0JgMcK7QnI7BMAv9fbEwC/rdsTAL+D2xMAv4XbEwC/h5sTQP/hnPYEZr+J0X9wpD2B2W9i9B9qaE9g9psYvcF9ewLwN/G9SZkJtQnA38StCcDfxI0JoDeubk8A/iZuTQD+Jm5NAP4mbk0A/iZuTQD+Jm5NAP4mbk1g9ps4z34T59lvYvT2u+0JzH4Tl9lv4jL7TYzeatWavH63ybUJoJ9CVtYuwFbi0wQieiPK9gTQTyGbV0tcRdRH9MaO7Qmgn0LNCcjsE0DXA80JoN8DzQmg64HmBND1QHMC8DdxYwLojfHaE5j9JkbvwNeewOw3MXr/u/YEZr+J0XvVtScAdRN/mwR1t36bBHVbfpmk0MnMp9Uk/4e6r3mepLXLoyTbeto5WX58y7l4f7r6405i8/LN3r5+tOcvvkeFLmmXR+6I/GjknsiPRi5EfjTyQORHI49E/jfybzCJYOpgMsHUwZTrgonLH7gkuicw/sKq6DWYC2uX12AurDDKYoeU5zPGX1gHvAYjBFMHc92YOqxzDDY+g7lu5NsAc93I9zUYuW4cE/zybPAVMNe9laIsbwfGaJ7BXPdWaoA5/lZy69Pex9KYqjWy5FisCQ+dOa3/PYE4+wTS7BPIs0+gTD4BhS56nSdgZ5+Am30CfvYJyOwTmP0mDrPfxGH2mzjMfhOH2W/iOPtNHGe/iSP6TWxXpXez2f0xgcp3FynLd5d4t6T+J2Yf1z8x+/z8J+aIfscrohGi2UKDHpcookGPeBTRoMdSimjQozRFNOjxnx6ahB5ZKqJBj1kV0UwcDX9PYOKY9XsCMvsE4OO/vPx0m3UmH7q74OM/PTTw8Z8eGvj4Tw8NfPynhibDx396aODjPz008PGfHhr4yFIPjRDNFpqJo+HvCUwcs35PYOLI8nsC6PGfW38Jy7p87O5Cj//00BT0+E8RDXr8p4gGPf5TRIMe/ymiEaLZQoMe/ymiQY8sFdGgx6yKaCaOhr8nMHHM+msCyUwcWX5PAD3+835VhD61dleOy1fnfK8itsH9nix6RNd1sugxWtfJypkmW+JSoliy+WOyYy+UZNAjtEkwokdzk2BEj/wmwYgeJU6CET1WnQOjRY+YJ8F4qrhdD+OpFIEexlNpDT2Mcg2M35O9iNb4nuxFFMH3ZC8St39P9iLR9fdkLxIDf03WnSpSteLXTLCE2LjWgqw/EhLkz5uqYnZcf13Ux8c7MFTneG/87Yp//XBxC4/iS+N7OzYUT+5U0TWX/p2lP5Ui4NK/s/SnUjFc+neWXrj0V136U+lQLv07S38qVX6upf9eoFNlEs64QKfKfpxxgU6VsTnhAnlmmcAXiLkg8AVixgZ8gZhXAV8g4QJhLxB1kPYCWWOXvxZa4/zTEgnjOPUlcus3W5fc8xJdJpL7nu5lTvXv6Z4rj5vt+nS2vjLdc+Uus7nbbaUy3XPdgM3pniuv1pzuubJUj9N1lWo1+N+c6jzdc927zemeKx/RnO651H3rqIL/razO0z1ZVNWa7rWiKvhf7eo83WtFVfC/CNZ3uvC/H9Z5uucNM6rTnTjM+J6AzD6BiUOB7wmgH/9i7iku458nAP+DHiEvxZA2FFuZAHq8cVMzy3cXE1pnlrHp/oOK7iFL523+PWF0l+s+YfSYo/eE4X9boPuE0bM53SeMHmh1nzD6NdN9wnK1CaOHcm9O2Nlyn/DDD3H9mnDl+Xj/9vhQFuDlNx30JJAunZPFcJ3pnCzg60znZNFhXzrwP1OgS+dkcWdnOicLUjvTOVlE25mOkM4LOoyVX9FhrPyKDmPlV3QYK7+iw1h5m06G/+EFXTqMlV/RYaz8ig5j5Vd0hHRe0GGs/IoOY+VXdBgrv6LDWPkVHcbKL+jA/+SCLh3Gyq/oMFZ+RYex8is6Qjov6Jwt3nl86SSHP+h8TRi+n/qbE/b+PmEvqeUOL5//BnSym+hNQEnWBhspuqf9At+YW5fOyW6iznROprzfpJPvfVFyio90nh++HdO/n81OnkGeTGgNBPkrRrh/d3xCCd/4EQilNYtTWivlGeW1L86uKK99y3ZFee0ruStKIcpeKE/2JxpNlIwqu6E8WTJEE+XJ/lKkiZJqpxdK+PaoE6Gk2umGkmqnG0qqnW4ohSirKL/pUMC8onNtTVLK8rgzpkLn2jKjRefayqFF59pioEEHvqWxLp1rh+wtOjNF4TY16Pgiy2tCvjz+vkX1F0p9XH+h1P/5yxnfaGaKqg9GI0SzhWamEPlgNDPFxwejmSk4PhjNTJHxwWhmCouPRQPfkFoRzUwB8cFoJo6Gvycwccz6PQGZfQLo8d99v9gSTGUC6FFacwLosVRzAugRT3MC6HFJawIJPXpoTgD9jm9OAP0mbk4A/SZuTgD9Jm5OYPabOM1+E8P/5ERzArPfxPA/CdGaAPxPPDQnMPtNDP8TDCXdJ5BrE4C/iVsTgL+JWxOAv4lbE4C/iVsTgL+JWxOAv4lbE4C/iRsTgO+Q35wA/E3cmsDsNzF8K/jmBGa/ieEbqjcnMPtNDN+WvDmByW/igt6g2RmTfz/tjK1NAPwUcibe3zmMuTIB8FOoPQHwU6g9AfBTyFmzlFo4K64yAfBTqD0BcD3QnAB6Z9P2BNDvgeYEwPVAewLgeqA9AfSbuDkB9Ju4OQH0m7g5gdlvYjv7TWxnv4nRm7u2JzD7TYzeH7U9gZlu4mD/mEDFkhTXQu2U79ON4fdsZ7q2fz7bme74n892poDg57OdKXpozzZbu9rt7fNsZwo1fj7bmeKSH88WvSVv59nOFPH8fLYzhUc/n+25YqnWbOVSsz1XLNWa7bliqdZsLxVLobcq7TzbS8VS6A0/O8/2UrEUetvMzrO9VCyF3kDw3dk+tEsM+Xm2JzuT77/BlvPz2mI1afs2Cerg/DYJ6nT7Nun4I0hk6VF7+6etmCR4JgU8kyKeSQnPpIxnUoEzSaGdUNMki2eSwzMJ7/SOeKd3xDu9I97pHfFO74h3eke801uhnUtYlZ4P3v9h0vPTOS5f/agcbHC/zbdzm+/mNt9jm3+7T34//Ee1S6h+c8dmeUWhQcwkYALB1MFEgqmDSQRTB5MJpg6mEEwVTAaP9fTAgEeRemDA41M9MNNGvt/my9zmTxtFfps/baz3bf60Edm3+dPGTd/mg0c3Vvz6h3wJsXEoB4lLfirIn+dsxZC4/tXcx8cTPFT/eLn+0fn2d0z/+uHiFh7Fl8b3mvv3mlwa14gN6zVi0/M1UsAjMi7mO4sJHkVyMd9ZTPDIl4v5zmKCR+tczHcWU7iY51lMcCV3rsX8Rg6uPs+IHFwxnxE5uMo/I3JmJo5F7oxh/uBw5FT5hyOnFj8cORXz4cgZl/dHbo1d/ppijfPP0BmzDIDu7tWNLrkn6HbiqOV7AhOfjt8TEPAJZOtWS6yvTAA9b5TN3RIrlQmgn/bNCaDnNJoTQM8QPE7A2coE0O+u1gQc+j3QnAC6FmxOAF1ZtTaxQ7+JmxOAv4lbE5j9Jnaz38Ru9pvYzXQTVycw001cm4Cf6SKrTgDqIvs2Cepq+jYJ6rL5Nknh8Ap3k0LFJIU2YtGtpQnR24pJx1NKec0OpWKeTVJo2lTu75LcNnzFJItnksMzyeOZdHgIJjf/XU0KUjGpHG/SveTo8b2q1aTRjXa+B7FHDOKOGKSHn/u0DnJbn8bTJSyneCn3Q9zb/NsgQTMooBkU0QxKaAZlNIMKmEFdGtp0NciiGeTQDEI7qdPhJ/Xt79TrLzPfYo8/THp+Oq6/ghzNw4sE+ffNl8Lc5se5zU/g5vsl8o1iKubnuc0vU5ufDbj56wsmMdXMt3Ob7+Y2H/3cz8vD8eHWvZuPfu43zAc/eXJarq1iw7P5BfzkKXF5I6g81pGt5oOfPC3zwU+elvl+GvMffinybr7MbT74uV+iXc1PFfPBz/179rpuPni83zIfPN5vmQ9+61pjzPq0yU8TsAb93i3y2n50vfgyarMG3H9SXvCn8hy1WQvuPS3zwaO2lvngUVvLfPCorWW+gJu/fnUqsWI+eNTWMh88amuZDx61tcwHv3Vb5qPfuq/Nd+i3bsN89Ft3/epsKue+Q791G+aj37ppMSRbUzEf/daN5aX56Lduw3z0W7dhPvitm90ScT7+Bu3dfPBbt2U++l8oXpvvwW/dvGZKiqn4vge/dVvmg9+6LfPBb92W+eC3bst88Fs357Uzi6mdPOC3bst89Fu3YT76rdswH/3WfW2+oN+6DfPRb92G+ei37t38Wrwv6LduXv+4WHknxgr6rfvylR4r6Lduw3z0W7dhPvqt2zAf/dZtmD/123j2+LrRVkWkPb5uVEy2q0k5V0wSPJMCnkkRz6SEZ1I+3qSyvNYnt09WTCpwJkWDZ5LFM8nhmeTxTBI8kwKeSRHPpIRnEt7pHfFO76Rwer9uamGTxTPJ4Znk8UwSPJMCnkkRz6SEZ1LGMwmu/4/NeKd3xju9M97pnfFO74x3eme801vhp8Ibbfesws9/Z7ualF0lMajwI9ZNkyyeSQ7PJI9nkhxvksurSX88vZgU8EyKeCYlPJMynkkFzSSn8BOCTZMUTm9j7+dSzSSHZ5LHM0nwTAp4JkU8kxKeSRnPpAJnksJPqTVNwju9Ld7pbfFOb4t3elu809vind4KPwTW+MECp/DTXjGsUWWMUjHJ4pnk8EzyeCYdfy7FeDeppIpJAc+kiGdSwjMp45lU4EzyBs8khdNb3P1cqly7Cr851TTJ45kkeCYFPJMinkkJz6SMZ1KBM0kMnkl4p7fCr7wl5xeTkjcVkzyeSYJnUsAz6fjTO3lZTYq+YlLCMynjmVTgTFL4XcWmSRbPJIdnksLpbe4vC9WycEHwTAp4JkU8kxKeSRnPpAJnUjR4Jlk8kxyeSXind8Q7vSPe6R3xTu+Id3pHvNP7+Mqv1i+/u+Mrv3zIZjUpx4pJHs8kwTMp4Jl0/LkUympSNJWU1/GVX22T/r/23nfXdVwJ9nuXPIH4V2TeJgny4QLBTZDcBAgu8u7xXt6ivYbc6lnH2lSxu77N4Oh4qn/lpa5u21TBk1ThJM3/5ZcsyeFJ8niSbrh75/i6Lw0+SC0RT1LCk5TxJO14kgqepAon6Ybfx4mSHJ4kjycJ7+5d8e7eFe/uXfHu3hXv7l3h7t7hhl9+JffaCYTvO4HBa8dwXO1iepv60ui1U2zP607xTbfPwy8spLYvef/Cgh/pCI+9wHHx4zZ1frHb3OsRjv7bxU/ontDnQ0+E/hegl9fDVt++RdqgZ0KfD30n9PnQC6HPh14J/S9A3/0Leumg3/ALWEJ3zOk3QGdOvwF6IPT50COhz4fOifQG6JxIb4DOifQG6JxIb4DOiXQ+dM+J9AbonEhvgM6J9AbonEhvgB4JfT50TqQ3QOdEegN0TqQ3QOdEegN0TqTzoQdOpDdA50R6A3ROpDdA50R6A/RI6POhcyK9ATon0hugcyK9ATon0hugcyKdDz1yIr0BOifSG6BzIr0BOifSG6BHQp8PnRPpDdA5kd4AnRPpDdA5kd4AnRPpfOiJE+kN0DmR3gCdE+kN0DmR3gA9Evp86JxIb4DOifQG6JxIb4DOifQG6JxI50PPnEhvgM6J9AbonEhvgM6J9AbokdDnQ+dEegN0TqQ3QOdEegN0TqQ3QOdEOh/6zon0BuicSG+Azon0BuicSG+AHgl9PnROpDdA50R6A3ROpDdA50R6A3ROpPOhF06kN0DnRHoDdE6kN0DnRHoD9Ejo86FzIv0L0J1v+FxyPXROpDdA50R6A3ROpDdA50Q6H3rlRHoDdE6kN0DnRPo3oJfQoNfaQ+dEegN05vS/AN23V3Z+9z105vQboDOnT4ceN0bGG6AzMt4AnZHxBuiMjDdAnx8Zfbs6hFwF6P7xgcDvq/37cOdcGCkpr2pLen16kI9qd13Vlth0V9dXW0xVWy1V6zZT1TpT1XpT1QZT1UZT1SZT1SrLUkK1prKUM5WlnLIs1Qamh+6+Wq8sSwnVKstSQrXKspRQrbIsJVQbTVWrLEsJ1SrLUkK1yrKUUK2yLCVUaypLBVNZKpjKUsFUlgqmstQNj+m+s1r0frtt5ah2c9u3ap8FoLfQLbwKiHVQAHpXlAqI6I1OLAC9d4kFoLcjsQD0DiMWgN40xALQZ+qtfbX9UUsaFIA+JosFwHdiqQD4TiwVAN+JhQISfCeWCoDvxFIB8J1YKgC+E0sFwHdiqYDVO3FavROn1TtxWr0Tp9U7cV69E+fVO3GG78RlawWUPCgAvhNLBcB3YqkA+E4sFQDfiXf3KmAfFADfiaUC4DuxVAB8JxYK2OE7sVQAfCeWCoDvxFIB8J04h1ZALoMC4DuxVAB8J5YKgO/EUgHwnVgqAL4TSwXAd2KhgALfiaUC4DuxVAB8J5YKWL0T33BS7sUFgPcBt6f2fae6fd8LDa7eQmiXbyG+wl9wZXT9+6/q99fEHeLg4uKP6bz4+H7pEyR4PwICWUtjsm09yQp+W16IJHh/WIgkeKMCIuk2//bauUcJ3jJXQgk+Rq+EEnygXwklI+VlKBkqL0MJvm5ZB2XawBc/K6HkrPPvUcatvXYKPUoOO5eh5LRzGcpIlFeh5LRzGUpOO5eh5LRzGUpOO/9Rrhyh5LRzVURHP492JZScdi5DyWnnMpScdi5DGYnyKpScdi5DyWnnMpScdi5DyWnnMpScdq5CiX5i9EooGdEvQ8mIfhnKSJRXoWREvwyltjDkXpvu4Oo3lM+CtUUWqWD045OvL1jbslMsWFveEQvWlkrEgqO1grV1eLFgbasysWBtCy2xYGtJC/087ssLRj+/+/qCrSUt9PPBry/YWtJCP3/8+oKtJS30882vL9ha0kI/P/2nBb9e/FHw9r3gkfKt8XFvTyg4Nn7oh7P/ZTretcfU+uA7Ougnv99MR1ngu5iOsnR4MR1lUfKndGK73Of+rox+1vtfphPLcXLk4x8H7x1lEeZiOrbzjkTHdt7JW7sr5+A6Oujn699Mx3bekejYzjsSHdt5R6ITSeeEjrKl3MV0bGdliY7trCzRsZ2VJTrMyid00J+A8bfpvF497/0v39Efr3EzHeNZWaBjPCsLdCLpnNAxnpUFOrY7eqjt1aP7thvsLz49Zj6hP/IBCKT0mxP0h0+shNJ2a/gRSuF7EcV2H7kUpe0FzaUobW9zLkVpe/VzKUqmyqtQVttLpUtR2t5AXYqS085lKDntXIYyEuVVKDntXIaS085lKDntXIaS085lKDntXIQya3uC0Z0obU870ZeGMrqeju0BRqJjeyaR6ETSOaFje3KQ6Bj/HZdAx/jvuAQ6/B3XQaf/HVfW9mSda+loe1jOxXQMpcFnwYYC3rPgaK1gQzHsWTAXWv92dXD6Tcas7aENfxFkLY3JtvUktT1o4EaS/JD0KpKGGuGnG9bzL9dmbY8ZuBMlPyO9DCU/I70MJSPlZSgZKq9Cqe2BHXei5DdCL0PJWeffo4yvE2r7Z8RnbY8vuRNlJMqrUHLauQwlp53LUHLauQwlp53LUHLa+Y9y5QCltofm3BjRtT2O506UnHYuQ8lp5zKUkSivQslp5zKUnHYuQ8lp5zKUnHYuQ8lp5yqUxh8vdSlKTjuXoWREvwxlJMqrUDKiX4aSEf0ylOhhKJV6vHaq7hvKrwLgn/iUXTMguzooAL3xiwWgLxfFAtDzglgAepfOr5vQI+gOCkDvjWIB6B1JLAB9VSMWgL4gEQtA78RSAfDPkxELgO/EW3vt7LdBAfCdWCoAvhNLBcB3YqkA+E4sFQDfiaUC4DuxVAB8J5YKgO/EQgEFvhNLBazeieEfryMWsHonhn+UjFjA6p0Y/rEpYgHofSBur2OCttAXAP8whhja95JjSoMC0PuAWAB6HxALQO8DYgHofUAsAL0PiAWg9wGxAPSJLLrXQYx+HxSAPpGJBcB34vMCdviDwsUC4DuxVAB8J5YKgO/EUgHwnVgqAL4TSwXAd2KpgMU78Q5/JrJYwOqdGP5kYbGA1Tsx/OnFcW+v/X768qsA+E4sFQDfiaUC4DuxVAB8Jy7ttZPbBgXAd2KpAPhOLBUA34mFAjx8J5YKgO/EUgHwnVgqAL4T5/rqA2FQAHwnlgqA78RSAfCdWCoAvhNLBcB3YqkA+E4sFAB/RKtYAHwnlgqA78RSAat3YvijN1NoX/ZIYbBWgT/wUiwAvROLBaB3YrEA9E6c4quANCoA/tesQgHwxweKBaB3YrEA9E4sFoDeicUC4DuxVAB8J/bx1QfKoAD4TiwVAN+JpQLgO7FUAHwnFgqAP9pKLAC+E0sFwHdiqQD4TiwVAN+JpQJW78TwJx2JBaD3gRB8e+39ewGjLdJrgo7pdZrSA8Pg6hTz8cXy9L5z8nkkO6f9kJ3zq0ifhjXux1EGj3LD+cVuc82jzX+7+Msi+BOUaBH8CUUWLCqvZ2jUvbcIvVfSIvhTpmgR/DlatAj+pDALFu3+ZVHpLULfHtEi+NPeaBH8eXa0CP7EPloEfyYhLYI/dZEWwZ8rSYvgT86kRfBng9Ii+NNPaRH8+a60CP4EW1oEf0YvLYI/hZgWwZ+zTIvgT5KmRfBnZdMi+NPAaRH8eee0qHC7AG8RtwvwFnG7gG4R/JMfaBH8sy1oEfzTO2gR/PNJaBH8E1hoEfwzZmgR/FN0aBH8c4JoEfyTkGgR/LOezFtU4J9mRYvgn9dFi+CfSEaL4J+5Rou2SIvQLeJ2Ad4ibhfgLeJ2Ad4ibhfgLeJ2Ad0i+Cd00iL4Z5DSIvinrNIi+OfI0iL4J+XSIvhnAdMi+Kcd0yL45znTIvgnVtMi+Gdy0yL4p47TIvjnqtMi+CfH0yLP7QK8RZEWoVvE7QK8RdwuwFvE7QK8RdwuwFvE7QK6RYHbBXiLuF2At4jbBXiLuF2AtyjSInSLuF2At4jbBXiLuF2At4jbBXiLuF1AtyhyuwBvEbcL8BZxuwBvEbcLt1vkfIPtkustirQI3SJuF+At4nYB3iJuF+At4nYB3iJuF9AtStwu3G9RCc2iWnuLuF2AtyjSorst8u2Vnd99bxHnIniLOBfBW8TQDW8RQze6RZmhG94ihm54i+J0i8K+NYtKESyK+3a8dtyddLX3Mf6+2vtcztGkcFybQu7BJLtg0lFj+v5efILJBDMGsxPMGEwhmDGYSjBDMPtGMGMwjmDGYDzB/I9pjz2YQDBjMNEwmJZ8ywCM4eQb9zMwhpPvORjDyfccjN3km92xLMlu78HYTb7nYIrd5CuAsZt8BTB2k2/eQgPTfxW+2E2+AphIMGMwdpOvAMZu8hXA2E2+AhjDyfccjOHk+wLj+xxTDSffczCGk+92fD6fwwCM4Z1vjWdgDO98z8FEghmDMZx82wYv560HYzj5noMxnHzPwRhOvudgDCffMzB1M5x8z8HMzzGufWsz+BCFUt1W2mtv3zBuvwuI4AU4117bvY0erwLS6gXk1QvYVy+grF5AXbyAGx4Lf3EBDr2A7fXLVhcGBfjVC0DvxGIB8J1YKgC+E0sFwHdiqQD4TiwVAN+JpQLgO7FQgIfvxFIBq3div3on9qt34hse3XhxAat3Yr96J/ard2IP34lTaQXkOCgAvhMLBQT4TiwVAN+JpQLgO3GsrwLSoAD4TiwVAN+JpQLgO7FUAHwnlgqA78RSAfCdWCoAvhPHdmqKi7kvIMJ3YqkA+E4sFYDfiYUC8DuxUAB+JxYKwO/EQgH4nVgoAL8TCwXgd2KhgNU7cVq9EyfwPlDTob/W798W6q/d4/HV9+Je34xyeR9cm/bXj9BfZ96Fzf/GAt5d/haWvB3ROfs4wALes+7CAt4J78IC3l/vwgLete/CAp4FbsKSwRPGXVjANwh/D8shIm95gAV8L3EXFqMpV8ISiWWExWzKPcdiNuWeYzGbcs+xmE2551jMptxTLLvZlHuOhSl3iIUpd4iFKXeIJRLLCAtT7hALU+4Qi6Lckttv83NIApY1n2C0ueM8Abf5bxd/mVkUpS2aqajrGzCzbM3MuvdmRpqpx0xFCYtmKsqFNFPRztaAmbt/mVl6MxVtmmkm50w9ZlbOmYrMVPRZBM1U9AkKzeQGSJGZkWbqMZMbIEVmcgOkyExugBSZyQ2QIjO5AdJiZtg2boAUmckNkCIzuQFSZCY3QIrMjDRTj5ncACkykxsgRWZyA6TITG6AFJnJDZAeM9GfpEYzf2ImN0CKzOQGSJGZ3AApMjPSTD1mcgOkyExugBSZyQ2QIjO5AVJkJjdAesxEf4IvzfyJmdwAKTKTGyBFZnIDpMjMSDP1mMkNkCIzuQFSZCY3QIrM5AZIkZncAOkxM3ADpMhMboAUmckNkCIzuQFSZGakmXrM5AZIkZncACkykxsgRWZyA6TITG6A9JgZuQFSZCY3QIrM5AZIkZncACkyM9JMPWZyA6TITG6AFJnJDZAiM7kBUmQmN0B6zEzcACkykxsgRWZyA6TITG6AFJkZaaYeM7kBUmQmN0CKzOQGSJGZ3AApMpMbID1mZm6AFJnJDZAiM7kBUmQmN0ALmel8s8Ul15sZaaYeM7kBUmQmN0CKzOQGSJGZ3AApMpMbID1m7twArWRmCc3MWnszuQFSZGakmeuY6dsrO7/73kzOmYrM5JypyEyOJorM5Giix8zC0USRmRxNFJkZbzXTJcHM5I6XTsELZu6l/L62bC979u13pclMpdlMpbuZSouZSquVSutmplJnplJvptJgptJoplIzGamayUjVTEaqZjJStZKR3GYlI7nNSkZym86M5Mp7pQMRNdZDRH1f8ow2QvGxEvp9cQzf10dPhjrT11yGkQw/ZqgzMc5lqDOLzmWoM+XOZagzP89lqDOZT2XodGb+uQx1ThNzGVqYU56VWpgmnpVGM5UqSkQlHS9cku8q9Yr6RdkP0aX2nnpFd3WhUkX3XqFSRfdeoVJFc65wR9J07y178zT0lSqaGYVKFU1255UGTf30vFJN/fS8Uk399LxSTf30vNJoplJFnzKU4s8q1ZSRzitVlZFOK1WVkU4rVZWRXpXuXaVRVUY6rVRVRjqtVFVGOq1UUUaqW/u511b7SqOZShVlJKFSRRlJqFRRRhIqVZSRhEoVZaTzSpOZz2WSmc9lkpnPZZKZz2VufhDWzEo17ZHOK9W0RzqvVNMe6bxSTXuk80o17ZFOK81mMlI2k5GymYyUzWSkmx8VMbNSMxkpK+qnqVWa9n7fmxX107wd33rNvt857Ir6qVCpon4qVKqonwqVKuqnQqWK+qlQqaJ+KlSqaOeQmoy8pb5SRTsHoVJNGem8UkUZ6bzSoigjCZUqykhCpYoyklCpoowkVBrNVKooIwmVmslIms7mFSo1k5E0nc17Xqmms3mFSjXtkVI8Ks1bX6mmPdJ5pZr2SOeVRjOVatoj5VZpGdyRFGUkoVJFGUmoVFFGEirV9FnbWaVe09m8QqWaMtJ5pZoy0nmlmjLSeaXRTKVWMpLXdGasUKmVjOQ1nb8qVGomI2k6y1So1ExG0nQuqFCpmYyk6VxQoVIzGcmZyUiaznoVKjWTkZyZjKTp/F6hUjMZSdP5vUKlZjKSj2YqNZORNJ3JLFRqJiNpOpNZqNRMRtJ0JrNQqZmMpOlMZqFSMxlJ05nMQqVmMpKmM5mFSs1kJE1nMguVmslIms5kFio1k5E0ncksVGomI2k6k1mo1ExG0nQms1CpmYyk6UxmoVIzGUnTmcxCpWYykqYzmYVKzWQkTWcyC5WayUiazmQWKjWTkTSdySxUaiYjaTqTWajUTEbSdCazUKmZjKTpTGahUjMZKZvJSNlMRtJ0zrZQqZmMpOqc7fNKzWQkVedsn1dqJiOpOmf7vFJNGSnuR6XZ9ZVqykjnlWrKSOeVaspI55VqykinlWo6Z1uoVFNGOq9UU0Y6r1RTRjqvNJqp1ExG0nTOtlDp/H66lSOIB/f23O9xpXsNvy8uIb9d60Y6Stqb6vR6YltOz1pvOJX5L9baXtmV6vpanaFavaFag6Fao6Fak6Fas6Fad0O1FkO1qspNp7WGzU5uCpud3BQ2VblpDy/Vg1pV5Sah1mioVlW5SahVVW4SalWVm4RaVeUmoVZVuem8VqcqNwm1qspNQq2GcpMzlJtuOMX5vloN5SZnKDc5Q7nJg/fX7Ns3zvz3Wp/ywVvm+wMF00A+eBeU5IM3Nkk+eK+S5IO3H0k+eEeR5IM3CUk++LycozvkJzeQDz4CC/IDetcV5KN3XUE+etcV5KN3XUE+etcV5KN3XUE+etcV5KN3XUH+2l03rN1149pdN67ddePaXTeu3XVvOPHzUvnoXbe99L75gXz0rivIR++6gnz0rivIR++6ZW/yQy8/oXddQT561xXko3ddQT561xXko3ddQT561xXko3fdvR6Zp8SBfPSuK8hH77qCfPSuey4/o3ddQT561xXko3ddQT561xXko3ddQT561xXkr91189pddwe/78d67HmS+N2lPfrf15Zfv8o/rs374Nq0H1EwlZeG8Jinn1jA+8nfwpK39m7xcYAFvE/dhQW8/92FBbyv3oUFvF/fhQU8B9yFBTxf3IUFfFvw97AcRxblLQ+wgG8hbsJSjKZcCYvZlHuOxWzKPcdiNuWeY4nEMsJiNuWeYzGbcs+xmE2551iYcodYmHJHWNDP2rwLC1PuEAtT7hALU+4Qi6Lc8ijwKDUkAYuL4XhhF9PbK6eR5hTbidIpvvH49VP0vsDcjk4O77+59KP6fj0B57jY13B+sdtcO4Ru898ufpqpKG1ZNzOinxRJM7+ZWbZmZt17MxVlFZqpKGHRTEW5kGZGmrmQmbt/mVl6MxVtmmkm50xFZnLOVGSmos8iaKaiT1DMm4l+5jXN/ImZ3AApMpMbIEVmcgOkyMxIM/WYyQ2QIjO5AVJkJjdAiszkBkiRmdwA6TET/aksNPMnZnIDpMhMboAUmckNkCIzI83UYyY3QIrM5AZIkZncACkykxsgRWZyA6THTPQnBNLMn5jJDZAiM7kBUmQmN0CKzIw0U4+Z3AApMpMbIEVmcgOkyExugBSZyQ2QHjPRn1ZNM39iJjdAiszkBkiRmdwAKTIz0kw9ZnIDpMhMboAUmckNkCIzuQFSZCY3QHrMTNwAKTKTGyBFZnIDpMhMboAUmRlpph4zuQFSZCY3QIrM5AZIkZncACkykxsgPWZmboAUmckNkCIzuQFSZCY3QIrMjDRTj5ncACkykxsgRWZyA6TITG6AFJnJDZAeM3dugBSZyQ2QIjO5AVJkJjdAisyMNFOPmdwAKTKTGyBFZnIDpMhMboAUmckNkB4zCzdAC5npfLPFJdebyQ2QIjO5AVJkJjdAisyMNFOPmdwAKTKTGyBFZnIDtJKZJTQza+3N5AZIj5mVc+ZCZvr2ys7vvjeTc6YiMzlnKjKTo4kiMzmaKDKTo4kiMzmaqDEzbdNHE1/b1WHzTjBzr0etRTTTlVetJb0+u81HrV5Tre1PwpXq+lqDoVqjoVqToVqzoVp3Q7UWQ7VWO7W6zVCtqnKTUKuh3OQM5SYXNdXahqKH6kGtqnKTUKuq3CTUqio3CbWqyk1Crapy03mtXlVuEmpVlZuEWlXlJqFWVblJqDUaqtVQbvKGcpM3lJu8odzkDeWmAN5fsz/G7+y/1/qUD94yc2rycxrIB++CknzwxibJB+9Vknzw9iPJB+8oknzwJiHIj+Dzco7H90RycgP54COwJB+96wry0buuIB+96wry0buuIB+96wry0buuIB+96wry0bvuufy0dtdNa3fdtHbXTWt33fnPsb1W/tpdN63ddRN6120X75sfyEfvuoJ89K57Lj+jd11BPnrXLXuTHwby0buuIB+96wry0buuIB+96wry0buuIB+96wry0bvuXo/MU+JAPnrXPZe/o3ddQT561xXko3ddQT561xXko3ddQT561xXko3ddQT561xXkr91197W7bgG/7//kYIE9HseIF7e9rh0eLPD4qzlet7wON3gI+o0FvJ/8LSx5a+8WHwdYwPvUXVjA+99dWMD76l1YwPv1XVjAc8BdWMDzxU1YKvi24O9hOU44ylseYAHfQtyFxWjKlbCYTbnnWCKxjLCYTbnnWMym3HMsZlPuORazKfcci9mUe4bl8b8SywgLU+4QC1PuEAtT7hBLJJYRFqbcIRZFucXAA3VdO4Ru898ufpqpKG2ZNxP9pEia+c3MsjUz696bqSir0MxIM/WYqSgX0kxFO1sDZu7+ZWbpzVS0aaaZnDMVmck5U4+Z6Ccm08yfmKnoExSayQ2QIjO5AVJkZqSZeszkBkiRmdwAKTKTGyBFZnIDpMhMboD0mBm4AVJkJjdAiszkBkiRmdwAKTIz0kw9ZnIDpMhMboAUmckNkCIzuQFSZCY3QHrMRH8KHM38iZncACkykxsgRWZyA6TIzEgz9ZjJDZAiM7kBUmQmN0CKzOQGSJGZ3ADpMRP9icQ08ydmcgOkyExugBSZyQ2QIjMjzdRjJjdAiszkBkiRmdwAKTKTGyBFZnIDpMfMzA2QIjO5AVJkJjdAiszkBkiRmZFm6jGTGyBFZnIDpMhMboAUmckNkCIzuQHSY+bODZAiM7kBUmQmN0CKzOQGSJGZkWbqMZMbIEVmcgOkyExugBSZyQ2QIjO5AdJjZuEGSJGZ3AApMpMbIEVmcgOkyMxIM/WYyQ2QIjO5AVJkJjdAiszkBkiRmdwA6TGzcgOkyExugBSZyQ3QQmY632xxyfVmcgOkyMxIM/WYyQ2QIjO5AVJkJjdAiszkBkiRmdwArWRmCc3MWv9p5r5xA6TITM6ZC5np2ys7v/vezEgz9ZjJOVORmRxNFJnJ0USRmRxN9JjpOJooMnP+aFLScbUvJQlmpi00jFveJOu3pjtu6e3T2zq4eM/HtXup5xRTiIO3VGMYyfBfMEzHpen7O/zJMJHhxwwzGX7McCfDjxkWMvyYYSXDTxn6jQw/ZujI8EcM99gz9GT4MUPOKf+KYZtTyoBhJMN/wTDuZww5p3zOkHPK5ww5p/wLhtkdG7vs9p4h55TPGXJO+Zhh4JzyOUPOKf+G4RYaw9Iz5JzyOUPOKZ8zjGT4MUPOKZ8z5JzyOUPOKZ8z5JzyM4Z+kA85p3zMMHJO+VcMjwMEchgw5Jzyb3ZfNZ4x5JzyOUPOKZ8zjGT4L+6HbY+d3zQ0hpxTPmfIOeVzhpxTPmfIOeVzhpxTPmaYLsiHNR4pvu4i75rbd+zr/vp5QvgtJ2DJiVhyEpacjCVnx5JTsORUKDl5w5LjsORg3ZUz1l05Y92VM9ZdOWPdlTPWXTlj3ZUz1l15x7or71h35X36XbkeHzH4bStvcgavW8ohYnv7WOzXCz+1T7+FlzzW/pQTseQkLDkZS86OJadAyfnDQ+v22m4lZcvyFqIdiuXf/hNu34abgmOtEIN/yXGjRcHjNpZapTm8XV0GV4fSVhD+pTnE0Srk0SwOKvvbl66HF7vy+mV92YVXLv544eK/ve4TtyfuS3HXJsJt24B3Iu+pvDN5T+W9k/elvN3mG4wt5B54IfC5wCuBTwX+hycSEfhfA84IPhk4Q/hk4IHA5wKPBD4XOOfMq4HHrQFPoQfOQXMycE6ak4Fz0pwMnJPmVOBl46Q5GTgnzcnAOWn+xRw+As5Jc+rgU7ZI4HOBc9KcDJyT5mTgnDQnA+ekORk4J825wB0nzcnAOWlOBs5JczJwTpqTgUcCnwucg89k4Bx8JgPn4DMZOAefucC90VgY3HGclw/9z3CKN7pEDe2t5cPbI6AaFqMdX8JitC9LWIx2TwmL0R4nYAlGV3ASFqOLMgmL1dwiYDG6dJKwRGIZYWHKHWJhyh1iYcodYmHKHWJhyh1hiUy5QyxMuUMsTLlDLFZTbmwHpoUkLX5dk+xcrD3DSIYiQ9+2xM6/az4YWs3PVzK0GravZGg1mV/J0GqM/xHD2J4m4HPfU5LVFPcThrEcDy9+/GP/PkxWI9+VDJkPP2cYyVBkmLfWU3JwPUPmw88ZMh9+zpD58HOGzIefM7S6E76QYba6QL6SIeeUzxlyTvmcIeeUzxlGMvyYIeeUf8Ewtfry3h8skzmnfM6Qc8rnDDmnfM6Qc8rHDHfOKZ8zjGQoMgyv+qLz5xefPnup7Gw/1+KWfny4s1dNBs7GdjFw4VtWhV1wMnCu9iYD5x5wMnAuDScDjwQ+FzjXkZOBc3c5GTgnzcnAOWlOBs5Jcy5wq0/lvA84J83JwDlpTgbOSXMy8Ejgc4Fz0pwMnJPmv/hlji8NeOy/rWX1QZuXMuQ8+DlDjnifMqxWn3B5KUMOYp8z5Gz1OUOOS5/+6rhukQw/Zsih5nOGzIf/YPjEwsg3wmL16XESFgazIRb2uInf6q6O7fBa3LWJeCz7BrzZOufyZk+eytuz2U/90UL1jBGTgXMZNBk4N0eTgUcCnwucIXwycH7QPhk4P5WfDJxz5tXAY/vuzpZCD5yD5lzgZp+IeBtwTpqTgXPSnAyck+Zk4JHA5wLnpPkXc/gIOCfNuYOP2edw3gack+Zk4Jw05wI3+1TS24Bz0pwMnJPmZOCcNCcDjwQ+FzgnzcnAOWlOBs5JczJwDj5zgScOPpOBc/CZDJyDzzzgj39x+de1aZxVQj1+dRhzemGM7pdXadxuT/4/v/5z+69Lx98U2P2Bq+T4ZvGwKu/9UVUoTri6bsfFNbxfmwbXpq09NDxtqQpX+3xc7Pe3a339ejc75DLD1srMm3B13Nr7Pm7p9RflR38kez6u3cuLiR++rivtb8+dXxq2/Xgfh+39dfPwdVPT696eVPK4+Jcvnr5A+hLoC6Qvkb5A+pLoC6Qvmb5A+rLTF0hfCn35D335mplJ7z+nF6FHUXh6nHAlevm1DvH/pMc59BN6nBY/oRdJ7wN6nLwkerVt1WvXNTgffUKPU8wn9DhrCPRSe9nk8j/pcdb4gF7irPEJPc4an9BjYpHohXiICB09JpYP6GX+5Qr0cjy+3pLfNPymxy3BJ/T0bAlcbAOpe/uyyfO7JjkaqVNPH3MhndSpp+M4t7c6y/bPOvVMs+d16pk7z+uEnhD32gLyFoWrQ2lfBAxlf+tWIxnBbe1il/z7xQ8oO/TgdxcU6FR4FxTosHcXFOgMdxeUSCg9FOh0eBcU6Ch5FxTo3HkXFOiQehcUJtoeSmGiHUBhoh1AYaIdQGGiHUCJhNJDYaIdQGGiHUBhoh1AYaIdQGGi7aFUJtoBFCbaARQm2gEUJtoBlEgoPRQm2gEUJtoBFCbaARQm2gEUJtoeitsYaUdUmGlHVBhqR1SYakdUolEqxTcqNXdUrObacypWg+05FaPJ1m/HV7uD//Vy/6BiNNoKVIxm23Mqzmi29e2r2sHH2FExmm0FKkazrUDFaLYVqERS6RO/M5ptBSpGs61AZXK2fVTXrt7yLlQa2/Hk779TfjTOEcPYfk//9jsn9+u/8d9/ODK7Qig9lEooHRS/EUoPxRFKD8UTSg8lEEoPJRJKDyURSg8lE0oPhYl2AIWJdgCFibaHEphoB1CYaAdQmGgHUJhoB1AiofRQmGgHUJhoB1CYaAdQmGgHUJhoeyiRiXYAhYl2AIWJdgCFiXYAJRJKD4WJdgCFiXYAhYl2AIWJdgCFibaHkowm2tNv6SejifYcitFEew7FZqI9/4p+ioTSQ7GZaAUoNhPt+TfRk81EK0CxmWgFKDYT7fnX0LPNRCtAsZloBShqEm1uM14OSYBS8nFteVf8wPPFRE2gvZBJJJOOiZo4+xMmNR8PO6zvN59ft5b+5lPj8UOsUPNb9M0jwaE99S6GEt4v/qKtJicvQVtNAF+CtppkvwRtNSPDCrR3NbPIErTVDDlL0DY5Pd1G2+RcdhvtSNoTaXOW7ObrnRNfz4RzWc+E01PPhDNOx6RwEumZmJwXXAzHC7uYstDnU8ztEfHxe+sehIKcjifEh/weCoZHT/k9HBf7Gs4vrv4osIYqvO72et2tVCGZuNSSySNj/zOZFJMzDt8hP3iHmJzL+A75wTsk8h3Cd8jpO8Tk/Mt3yA/eISa3AXyH/OAdYnI3ousd8uWjyX2OQh9N7qD0+VhN7s0U+shdnw4fuZHT4SP3Zjp8jPRRhY/cQenwkfPjKj66zcWGzofOSU6QOpz0eg7y1e+kb6/s/O47JyOd/O7kFxX2nBEVm/fv4pqK4kJHRc8Jqj+jsqUXldhTsbmdkqjY3PVIVGymiXcq3vVUbHZmiYrNqV6iYvPbFBIVm98gkO62NrOtRMVotj2noucs1UupMNuOqDDbjqgw246oRFIZUGGKG1ExkOK+6jSQy77qNJC0ftWp59TOvb1wcdIBlaUeH03UERM1yelCJmpy04VM1KSmC5lEMumYqNkGXshETYq8kImaDHkhEzV580ImarLpdUz0nPh4IRPm2J4Jc2zPhDm2ZxLJpGPCHNszYY7tmZjMJ2k/vsGa3s4UCNtzP6znRKufMMnb8eXixxayZ2Kg73zVaaCXfNVpoD981anmnl9ce9ZMin2davYRQp1qdgxCnWr68nmdes6OEOpUM98LdarJTkKdavKQUGdUU+fpHKTnt91CnXry0HmdevLQeZ168tB5nXry0FmdYdOTh87r1JOHzutcNA99aV8043xpjwtrh84iqT2nKOWBduh8IWiHzgyCdugcIGiH7u3n2h10vxa0Q/dgQTt0XxW0Q/dVQTt0XxW0L9xX3cJ91S3cV93CfdUt3Ff9wn3VL9xXPXZfrU17HWjH7qvn2rH76rl27L56rh27r55rx+6r59qx++q5duy+eqo9YPfVc+3YffVc+8J9FftsVkH7wn01LNxXw8J9NSzcV7HPmT3Xjn3CZ/bH+dXZD7RD32f2eHzHZ//2yqPPM0ON9ffFob4fHD06ZTqGNk3GUP75xL2AfbbibVSg7423UYG+695GBfp+fhsV6AnsLirYZyveRgU6VdxGBXoevY0K9KR7G5W4JpUv7Ysm0C/ti+bEL+2Lprkv7Ytmri/t2MmofVe2+L3Tjn2+oaAdO2Wca8fOAufasTv2uXbsvnquHbuvnmvH7qvn2rH76rl27L56rn3hvop93pqgfeG+in1+maB94b6KfR6YoH2Vvir+Ls7tuT0mdC+vx4Tm9Cx0lSb8caGrdOyPC12lvX9c6CpZQC60uPZ81hLcPwstqwSHjwtdJWV8XOgqkeTjQlfJLx8XGq0UqicZCYXqSUZCoXqSkVConmQkFGolGWEfW3dloVaSEfbBdVcWaiUZYR9dd2WhVpIR9mFnPys0tQ1DSeUfhUbs07F+VugeWqHFdYUC3XW/9ADdHL/0AN3DvvTMvtW4cJxK/5CQhDfmT45tS7H9FKVIR+MH157LGX49RPa42scnlEwoPZSdUHoohVB6KJVQOijTzxVbAoojlB6KJ5QeSiCUHkoklB4KE+0AChPtAAoT7QAKE+0AChNtD8Uz0Q6gMNEOoDDRDqAw0Q6gRELpoTDRDqAw0Q6gMNEOoDDRDqAw0fZQAhPtAAoT7QAKE+0AChPtAEoklB4KE+0AChPtAAoT7QCK0URbfIPydtrsAcVooj2FEo0m2nMoNhOt344XDt6lDorNRCtAsZloBSjRJpSmIvgYOyg2E60AxWaiFaDYTLTvUPpEG20mWgGKzUR7DiWpSbS5zXj5H8+Z768t+bj2/Tc3v0bDLyZqAu2FTNTk2QuZqImzP2FS8/Gcl/p+8/l1a+lvPtedsh2nn7Jtm7aaAL4EbTXJfgnaakaGJWirmUWWoK1myFmBdjY5Pd1G2+RcdhttkxPfbbQ5S3bz9fTnP6zAhHNZz4TTU8+EM07PhJNIz8TkvOBiaOeoPZYvQp9Pj5x/yIjfW/cgFOR2clnI76EgDT+caad/BV/D+cXVHwXWUIXX3V6vu5UqJJOHD0cycXuXTHaTMw7fIT94h5icy/gO+cE7xOQsyXfID94hJudfvkN+8A6JfIfwHXL6DjG5G9H1Dvny0eQ+R6GPJndQCn00uTdT6CN3fSp8LNzI6fCRezMdPnK7pcNH7qB0+Mj5cRUf3eaOT6fd5kPnJBPrMk761xO7/O7/6WRlZv2Hk19U2HFGVKJJKsU1zcWFnorN7XbZ0otK7KnY7PUSFZubV4mKzT3mOxXf/4q52sxY51TSZjOvSFRsbqwkKjb3P+d327TZzLYSlUgqAyrMtiMqzLYjKsy2IyrMtiMqzLYDKnoeE3spFQMp7qtOA7nsq85opE412WmPh4zipGMNSz0+mqgjJmqS04VM1OSmC5moSU0XMlGTma5joufZrBcyUZMiL2SiJkNeyERN3ryQSSSTjglzbM+EObZnwhzbM2GO7Zkwx3ZM9DyR9UImzLE9k2iRSdqPb7Cmt1+ih+25H9bz6MSfMMnbIeKxheyZGOg7X3Ua6CW/6tTzfEOhTjX3/OLaE0pS7OtUs48Q6lSzYxDqVNOXhTrV7AKEOtXM90KdarKTUKeaPHQ+H+h5lN55nXqejifUqScPndepJw+d16knD53XGY3UqScPnde5aB760r5oxvnSvmhu+dIOnUVSe+pLyr127OdHCdqhM4OgHToHCNqhe7ugHbpfC9qhe7CgHbqvCtqh+6qgHbqvCtoX7qvYzywRtC/cV7Gf8yBoX7ivYp+NL2hfuK9in1SeatNeB9qx++q5duy+eq4du6+easc+eVjQjt1Xz7Vj99Vz7dh99Vw7dl89147dV8+1L9xXy8J9tSzcV7HPij3Xjn06qqB94b5aF+6r2OeBZn+c65z9QDv0fWaPx3d89m+vPPo8M9RYf18c6vuByqPTl2No02QM5Z/PL0vYJzHeRCVjn8R4GxXou+5tVKDv57dRgZ7AbqMSSWVABTpV3EYFeh69jQr0pHsblUWz7Zf2RRPoL+1u0Zz4pX3RNPelfdHM9aUdOxm178oWv/fa48LasVPGuXbsLHCuHbtjn2vH7qvn2rH76ql27LPvBO3YffVcO3ZfPde+cF/FPptN0L5wX8U+60zQvnBfxT47TNC+Sl8Vfxfn9twen7mX1+Mz89fjMzP2wV1XFrpKx/640FXau1xoce1xniW4rtBVssDHhUYrha6SMj4udJVI8nGhq+SXjwtdJex8XKieZHReKPaRdVcWqicZCYVaSUbYp9ZdWWi0UqiVZIR9cN2VhVpJRthH111YKPZZZz8rNLUNQ0mlK1TRXXcPrdDSOwp01/3SA3Rz/NIDdA/70jP7VuPbAxSdz056Y+ZD/F7etW/DV06vF27X7vFZZjVR5vQzrG4q09ko09soM9goM9ooM9koM9soc7dRpo0UlG2koN1GCtptpKDdRgrabaSg6aej3VSmnhRUjgWe38J7mf2lV/5ya9eTr24CqCe53QRQTya8CaCetHkPwKInx94EUE9Cvgmgnux9E0A9qf4mgJEAPwOofxL5KlP/vPBVpv5U/6vMqib5hFCOv+S4dWWq+dtM7WiHlEtXppq/zbMy903Nm3ZvD5rffejKXDRUf2lfNM9+aV80Sn5pjwtrX/Qm/aV90Tvvl/Y7o07ZBO01HfGl1iJ2jUNzen/dvI/ygmsqgkuvX6r63zffQig9lEooHRS3EUoPxRFKD8UTSg8lEEoPJRJKDyURSg8lE0oPhYl2AIWJdgCFibaH4ploB1CYaAdQmGgHUJhoB1AiofRQmGgHUJhoB1CYaAdQmGgHUJhoeyiBiXYAhYl2AIWJdgCFiXYAJRJKD4WJdgCFiXYAhYl2AIWJdgCFibaHEo0m2uIblLfHgx9QjCbacyhGE+05FJuJ1m/HCwfvUgclEkoPxWaiFaDYTLS+HfEYfIwdFJuJVoBiM9EKUGwm2ncofaJNNhOtAMVmohWgqEm0ub1wDkmAUvJx7ftp0L9Gwy8magLthUwimXRM1MTZnzCpOR6v+67h162lv/lcdybAntTk5CVoqwngS9BWk+yXoK1mZFiBdlYziyxBW82QswRtk9PTbbRNzmW30Y6kPZE2Z8luvs6c+HomnMt6JpyeeiaccTomOyeRnonJecHF0J7wGVMW+nyK7cynFL+37kEoyO2ZmiG/h4I0/HCmPZcy+BrOL67+KLCGKrzu9nrdrVQhmbjUkonbu2Sym5xx+A75wTvE5FzGd8gP3iGR7xC+Q07fISbnX75DfvAOMbkN4DvkB+8Qk7sRXe+QLx9N7nMU+mhyB6XPx2Jyb6bQR+76dPjIjZwOH7k30+FjpI8qfOQOSoePnB9X8dFt7vh02m0+/NPJysS6jJO+vbLzu++cZGb9h5NfVNhxRlRsbvqLa5qLCz0Vm9vtsqUXldhTsdnrJSo2N6/nVMpmc4/5TsW7norNjCVRsZlXJCo2N1YSlci77eBuazPbSlSMZluBCrPtiAqz7YgKs+2Aip4n515Khdl2RIUpbkQl6qfyVaeBXPZVp4Gk9VWnmuy0x0NGcZvw11zq8dFEHTFRk5wuZKImN13HRM/TWS9koiYzXchEzTbwQiZqUuSFTCKZdEzU5M0LmajJphcyYY7tmTDH9kyYYzsmep7JeiET5tieCXNsz4Q5tmdiMp+k/fgGa3r7JXrYnvthPY9O/AmTvB1fLn5sITsmep6c+GcmX3Ua6CVfdRroD191qrnnPz7mODSn2NcZjdSpZscg1KmmLwt1qtkFCHWqme+FOtVkp/M69Tx373w+0PMoPaFONXlIqFNPHjqvMxqpU08eOq9TTx46r1NPHjqvc9E89KV90YzzS/uqz+j60g6dRdzm28/iNz9QD50wRPXQuUFUH5dWD93jRfXQnVtUD92PRfXQXVZUD91nJfXYz6AR1S/da7GfZCKqX7rXYj8BQlS/dK/FPjlfVL90r8U+y9xtr0O7tjRQD95rz9Vjn1stqgfvtYJ68F4rqAfvtYJ68F4rqAfvtYJ68F4rqAfvtYL6pXttWbrX1qV7LfY5s6L6pXttXbrX1qV7LfaZom4r7eqtdOor9nmOj9dop9y6mHv12PccST32PceVdtaL94N3DvY9R1KPfc+R1GPne0k9dr6X1GPf7yX12PleUo+d7wX12OfLierBe62gfulei33anKh+6V6LfdabqH7pXot9LpuoHqjXfukB6p6/9CCdHPalZ3aHi+2HMC6GKLzb4t7Ux90V4Wrv4/FQKO/z6+rhc4eiK8crB3d+6YXPGq/TTwSzzjuQ91Tekbyn8k7kPZV3Ju+pvHfy/s77i0ohlQGVSio9lelnvMFQyccnUTH7jorZueeUitnp5JSK2RmiHod4xdrfVyKpDKiYzeOnVKym5uSOEpPLHRWr2facitVse0olWs0rKRzXptBTsdqDcjy+n5fz1lGx2oPOqczuQaEdJfkAlIQ63RaPnYnb0vvnNOGpfl9afVlafV1Z/fSz5a5V75ZW75dWH5ZWH5dWn5ZWv3SvTUv32rR0r01L99q8dK/NS/favHSvzdi91r2+ReaC/6a+vzo8EvPvq0PNr9cef/4bcvv8N5Tu89/pZ62twgU7H9zHBTt53McFO9PcxwU7Ld3HBTuH3cZlx05493HBzo73ccFOpfdxWTbvfqmPS6tfNjt+qQdPeKVd7bcy8y8KPOHdxgU84d3GBTzh3cWlgCe827iAJ7zbuIAnvNu4gCe827hEchlyAU+lt3FZNu9+qV82lX6pXzY7fqnHTni+PZ7J+TLzL6piJ7z7uGAnvPu4YCe8+7hgJ7z7uERyGXLBTnj3ccFOePdxwc6O93HBTqX3cVk27z7Uu21bNpY+5S+bHp/ysUNeCK/X3qU/qpKPT9DKu47kf5eKndsuLTXaKRU7Xf2o1JqPH/3V9zMLH6X+1Q7ygIgdxRaBiJ3bFoGIHfIWgYidCNeA6LBz6SIQsdPxIhAVZfT7ICpK//dBjIT4OUQTE8uzVBNzxbNUE+n/WaqJjP4s1USS/irVm8i7z1IVpVIXQ9vwxpSFRpZiPs4rTPF7bxp0vdwehxnye9cbqQ7+dfq1r+H84uqPnV4NVXjd607VfhivKEnT+J8Yryj90/ifGB9pvE3jFU1ZNP4nxiuaOWn8T4xXNIHrMv5pj6KtgUZ7FG06FNoTFG1nNNrDjRK0Pdz7QNvD7Qy0PZH2INvDTQe0PZx77rXn19dWDtGPDwI6gyKz280G+fbKzu++N8hIensWa+Ru/ixW0662uHZ1cWFQrKb9ZNnSq9g4KFZT1xOL1bQ7k4oFf7DSf16sH/y6DPw5TBcXq6nPisVq2jmIxUZLNyhNCUosVlWCkoq1lKDAH2h1cbGWEhT447IuLlZrghoWqzVUDIuNqxb7lL9sTHjKX7bxP+Vj3/Dj9lpcbaGXD/4kjFSOnyu6VN1APna22FN7aGDdknSf2tz+esagf9u8BVd+l4v9Zru6XPCj/C8vFzthXF4u9pbm8nKxI9Xl5WI3lsvLxQ5hl5eLHdp+WK539VXu2yOrfpU7uD6/Xj2/fX0/xN9ssJc797JRldcuZqMq3F3LBvzI/3vZqIqNF7NRlTEvZqMqkF7MJpLNH9moiroXs2Eu/jMb5uI/s2Eu/jMb5uI/sXHgzxy4lw1z8Z/ZMBf/mQ1z8Z/ZRLL5Ixvm4j+zYS7+Mxvm4j+zYS7+Mxvm4j+yAX/mwb1smIv/zIa5+M9smIv/zCaSzR/ZMBf/mY2ufPP+tZGSvrF5lqsrskjlgp/S/cNyQ3iVG+IuvfNPr3/iUdVQfohnj+0sjz377sYAftzzvWxUNZSL2ahqKD9kU17Hr5Q9v7PpLy7+ODGm+NhhBD8GEQfjrxD0eu3cg7TcAn8E8vFZ3nGxi7UHablZXgrScme9FKTlNnwpSFUfjtwJUtUnKXeCZIq8CKSqhceNIKOqD3TuBMnJ5iKQnGwuAsnJ5iKQkSCvAcnJ5iKQnGxGIJ9sOKz8mY3l+aPW43K/bQM2lkcKgQ34kb73srEc/CU2lrO8xMZyPJfYxGXYuF1gE2o8vtkU6vtjMYaPMA25PcI0fH/gxhPMOgl6Mph1EvFkMOvE4clg1snCk8GsE4TnggE/lvlGMOtE4Mlg1sm/k8GsE34ng4mrgnnKXzafPuUvmyKf8rGz3uvvxNW0DeRjJzJRPnZukuTv2OlGlI+dQUT52ElBlI/dz0X52F1XlI/ddUX52F1XlL921wV/1IMof+2uC/4oBlH+2l0X/FEJovy1uy74owzq/pJfRvLBu64kH7zrSvLBu64kH7zrSvLBu64gH/zYe1E+eNeV5IN3XUk+eNeV5K/ddcFPSRflr911wc8aF+Wv3XXBT+wW5HvwQ7VF+dD3/Qfd8vtqv7mRfOg7z0Pe6xuBuQzkQ995ZPnQdx5ZPvSdx7vt+NmDd9H38rGPLZXlQ+d9WT503pflY9/3RflxbfnQeV+Wj911RfnYXVeUj911Rflrd12/dtf1a3dd7ENSZflrd13sc0Zl+et03eS+yR+89p7bj6L38io2p9+1rtOiP691nX7+ea3rNP/Pa10nKci1FueO1y7BdbWGdWLF57Wuk0E+r3WdwPJ5reukm89rjYZq1ZSbpFo15SapVk25SapVU26SajWUm7CP+ry4VkO5CfvAzItrNZSbsI+dvLhWQ7kJ+xC+n9b6duBgKl2t2Iej/bTW13PJSul9RTrs7CkI6Gb5FAR0R3sKmn3biaX9ucRSBoIymqAdTVBBE1TBBE0/pkgU5NAEeTRBAU1QRBOEdqfOaHfqjHanzmh36ox2p97R7tQ72p16+rEoKbUfAaRvV4/mh5LzoeP92uR/iw8ri48ri0/I4ms+HjX77XcmD/H9tVceLuenH7SyCJadWEZYCrGMsFRiGWCZfpDNIlgcsYywQOe6+7BAJ8b7sERiGWFZNOU+xS+aRZ/iF02MT/GL5rqn+EXT15f4umhGeoqHTjIuhvahe0xZuA2nmI/nK6b4/c46uGfn9hl3yO/37JGO4NuHxMHXcH5x9ccWo4YqvO72et2tVKFxPNgdjcPtfeOo0OmLVv7ESujESCt/YmWklVqshE7mtPInVkLPKbTyJ1ZCT226rHwCh540NQKHno71AQ8b9ESvETi3EJOBc1cwGTgn+snAI4HPBc7peDJw5vCrgbvNHZ+WuM2HDrljTrkcuX/91tDvvke+bFJ5yl/2rviUj70nK669dnFhIB97N1S29JIfB/Kx7/CifOy9hSTfY28B3uV7N5CP3atE+dj3fVE+9rwnyo9r/+lid11RPnjXleSv3XX92l3Xr911wzpddyh/na47lL9O2xrKB2pbT0FAjegpCKi1PAVNv13VJihvA0HTD+jKe1uA5L0OBM0mVMLrryz0P98Os49E8tt2bOX8NnoPzT4SSRYU0QQlNEFltqD2Z+/dFnpBs4+z8a6tmr0b/ZX93eNsnv+J8Pf/E/Hv/yc+f2/H7XWiWPDC1bV1tFpfch7Lut9yMpacHUtOwZJToeRccHTMpXIclhyPJSdgyYlYcrDuyvvku/Ljk+Q2ZmypfhPUX53bU37z9vZBf/k91u77yuLLyuIrtPhwfIKf49aLL9vK4t3K4j20+PbFj7yPxIeVxceVxWPf58txcX7rsC/x2Pf5c/EV+m5T9qNJ1bfzrl/ioe82NR8vXd9/vdXEQ99tJPHQdxtJfFpE/NuTEV/iofO8JB76Pl+za+L3gXjo+3xtPxYdi4fO8+fi4wad5yXx0B3WbdvWrt7KQD52j63xXP3C2Sxu0H+zeznQ77XPZtFB/81K4qH/ZiXx0H+xknjoVCyJj9Di99zE54F46FQsiYdOxZJ46FQsiYfusJJ47A57Lt5jd1hBPHaHbeLLNrjPe+wOK4jH7rB70+G2gXjsDpvrqXjsDiuIx+6wgnjoDlv8kSrfn6/6Eg/dYSXx0B1WEB+gO2xpu4+6Dd7zAfuTHUE8dIeVxEN3WEk8dIeVxEN32FLaqSbb6G4D3WEl8dgdVhCP3WEF8dgd9lx8xO6wgnjsDiuIx+6wL/GjPB+xO2xpHwgOvrUSL/id3W1fuYkRu8MK4rE7rCAeu8MK4rE7rCAeu8Oei5//m9Xz3xvG6b9Zde0ry49/3AeCIpqghCYoowna0QTN/lXv47OrJiiXgaAKJihvaIIcmiCPJiigCYpoghKaoIwmaEcThHanzmh36n36nfr8QIi4g51QEXePJiigCYpoghKaoIwmaEcTVNAEVTBBBe1OXdDu1AXtTl3Q7tQF7U5d0O7U0x8wLhxDF6c/NLzkl6Dd94KmPwhcFOTQBHk0QQFNUJwtqH1N1tXRnnr6Q29FQRlN0I4mqKAJqliC0vQHPIqCpt+pY33dh0aCPJqggCYooglKaIIymqAdTVBBE1TBBLkNTRDandqh3akd2p3aod2pHdqd2qHdqac/Okw4hD9NfxjYvrXEuDs/EOTQBHk0QQFN0Oz70O5egmIaCEpogjKaoB1NUEETVMEETX+AlCho9p061+11Hxo01+DRBAU0QRFNUEITlNEE7WiCCpqgCiYobmiC0O7UcXqm3tvzwPe9DAQFNEERTVBCEzQ9U5d2dXFuIGhHE1TQBFUwQWlDE+TQBHk0QdPv1O3838d9aLBBSxFNUEITlNEE7WiCCpqgCiYob2iCHJogjyYI7U6d0e7UGe1OndHu1BntTp3R7tSzfz0lPWc87dO3sL40QSEOBAU0QRFNUEITNH0LG16C0mBhte9oggqaoAomqGxoghyaII8maPqd2vnXfWjwEWeJaIISmqCMJmhHE1TQBFUwQdN/XyYKcmiCPJogtDt1RbtTV7Q7dUW7U1e0O3UFu1Pn6b+eeux9j6tT+T7bD66OoX1CG9PrITAu+cHVj89rj+8EPD6YfHtsax5cHHI6vrYccn479nCkI/g9HBf7Gs4vdpt7PVLQf7v4idwT+WzkicgvR15ej/2se488E/ls5DuRz0ZeiHw28krklyPf/Qt56ZBP/yUpkTvm8unImcunIw9EPht5JPLZyDl9TkfO6XM6ck6f05Fz+pyOnNPnbOSe0+d05Jw+pyPn9DkdOafP6cgjkc9GzulzOnJOn9ORc/qcjpzT53TknD5nIw+cPqcj5/Q5HTmnz+nIOX1ORx6JfDZyTp/TkXP6nI6c0+d05Jw+pyPn9DkbeeT0OR05p8/pyDl9TkfO6XM68kjks5Fz+pyOnNPndOScPqcj5/Q5HTmnz9nIE6fP6cg5fU5HzulzOnJOn9ORRyKfjZzT53TknD6nI+f0OR05p8/pyDl9zkaeOX1OR87pczpyTp/TkXP6nI48Evls5Jw+pyPn9DkdOafP6cg5fU5HzulzNvKd0+d05Jw+pyPn9DkdOafP6cgjkc9GzulzOnJOn9ORc/qcjpzT53TknD5nIy+cPqcj5/Q5HTmnz+nIOX1ORx6JfDZyTp+XI3eN3qMq1yPn9DkdOafP6cg5fU5HzulzNvLK6XM6ck6f05Fz+rweeQkNea09ck6f05Ezl1+O3LdXdn73PXLm8unImcsnI983hsTpyBkSpyNnSJyOnCFxOvLZITHEdnV0SUDuH+v+31f790HOuTB67fKqtaTXZwP5qHXXVGuJrdbq+lqLoVqrnVrdZqhWZ6hWb6jWYKjWaKjWZKhWVblJqNVQbnKGcpNTlZvaUPQou6/Vq8pNQq2qcpNQq6rcJNSqKjcJtUZDtarKTUKtqnKTUKuq3CTUqio3CbUayk3BUG4KhnJTMJSbgqHcNP1B13fWit1ft60ctW5u+1brUz52y9zCS36sA/nYXVCSH7Ebmygfu1eJ8rHbjygfu6OI8rGbhCgfe17empBHJWkgH3sEFuWDd11JPnjXleSDd11BfgLvupJ88K4ryQfvupJ88K4ryQfvupL8tbtuWrvrprW7blq766a1u25eu+vmtbtuBu+6ZWvySx7IB++6knzwrivJB++6knzwrru7l/x9IB+860rywbuuJB+86wryd/CuK8kH77qSfPCuK8kH77o5NPm5DOSDd11JPnjXleSDd11JPnjXleSDd11JPnjXFeQX8K4ryQfvupJ88K4ryV+7604/b/Zi+dD3/V+fPxxX1+37nmdw9RZCu3wL8RXxgiuj699/u76/JukwEl78MXUXH98vfWKE7j9AGGtpp8RtW8+xQt+KF+II3RMW4gjdnIA4us2/vXbuQUK3yZVAQo/JK4GEHthXAskIeRFIhsiLQEKvU9YBWTboxc5KIDnX/FuQcWuvnUIPkoPNRSA52VwEMhLkNSA52VwEkpPNRSA52VwEkpPNf5AjRyA52VwTyLHPdF0JJCebi0BysrkIJCebi0BGgrwGJCebi0BysrkIJCebi0BysrkIJCeba0Bin7q8EkgG8otAMpBfBDIS5DUgGcgvAqkr/rjXFju4+g3ks1xdIUUqF/sg4uvL1bXKFMvVlW/EcnWlELHcaKtcXR1dLFfXIkwsV9e6SizXVqrCPtX68nKxT8G+vlxbqQr7lO3ry7WVqrBP8b6+XFupCvuU8OvLtZWqsE8h/2m5vuZXudv3cgfXu63RcW/n+x97POwjzv8yG+/aI1t98B0b7PPTb2ajKtxdzEZVEryYjarY+FM2sV3uc38vxj41/S+zicU1LWXwvlEVWS5mYznfSGws55u8tXtxDq5jg31S/c1sLOcbiY3lfCOxsZxvJDaRbP7IRtXC7WI2lnOxxMZyLpbYWM7FEhvm4j+ywX6WxN9m83r1vPe/Q8d+UMXNbEznYoGN6VwssIlk80c2pnOxwMZyDw81vLR82/v1F58e4V6wH6MAhFH6TQj2Ax1WAmm5IfwIpPDthmK5e1wK0vIK5lKQlvc1l4K0vNy5FCRT5DUgq+W10aUgLe+YLgXJyeYikJxsLgIZCfIakJxsLgLJyeYikJxsLgLJyeYikJxsLgFZdT0N6E6Qlieb6EvTEl3PxvKwIrGxPH9IbCLZ/JGN5SlBYmP611YCG9O/thLY8NdWTy39r62qrqfUXMtG14NnLmZjJvs9yzUT557lRlvlmgldz3K5rvp3y4HTbyFWXY9B+IsYa0ntpbeeo67D+2/kyI88r+Fopvl9ujs9/1Js1XV0/50g+YnnRSD5iedFIBkhLwLJEHkNSF0PwLgTJL/LeRFIzjX/FuTpI+mrrseB3AkyEuQ1IDnZXASSk81FIDnZXASSk81FIDnZ/Ac5cgBS10Nobgzkuh5vcydITjYXgeRkcxHISJDXgORkcxFITjYXgeRkcxFITjYXgeRkcw1I049ruhQkJ5uLQDKQXwQyEuQ1IBnILwLJQH4RSOz4k0o9rk7VfQP5JR/8GUrZNfj57dGoL/nYrV6Uj706FOVj5wNRPnZXzq8bT06jP13sXijKx+5AonzsRYwoH3v9IcrH7rqSfPAntIjywbvu1tJg9ttAPnjXleSDd11JPnjXleSDd11JPnjXleSDd11JPnjXleSDd11BfgHvupL8tbsu+GNqRPlrd13wR7KI8tfuuuCPHxHlY9/34/Y6nGcLvXzwBxvE0L45HFMayMe+74vyse/7onzs+74oH/u+L8rHvu+L8rHv+6J87GkrutdBh34fyMeetkT54F33VL7fwA/dFuWDd11JPnjXleSDd11JPnjXleSDd11JPnjXleSv3HUf8lfuug/5a3dd8FN6Rflrd13wc4Dj3vY876cYv+SDd11JPnjXleSDd11JPnjXLU1+cttAPnjXleSDd11JPnjXFeR78K4ryQfvupJ88K4ryQfvurm+7vthIB+860rywbuuJB+860rywbuuJB+860rywbuuIB/8kFNRPnjXleSDd11J/tpdF/zwyhTaVzJSGCxKwI+MFOVjd11RPnbXFeVjd90UX/LTSD74L0YF+eAH8InysbuuKB+764rysbuuKB+860rywbuuj6/7fhnIB++6knzwrivJB++6knzwrivIBz8cSpQP3nUl+eBdV5IP3nUl+eBdV5K/dtcFPylIlI993w/h9dr7d/mjrdBrMo7pdRbRA8Lg6hTz8fXu9L5D8nlwcchp/31xyPkl249UB78fBwQEX8P5xW5zzaHHZ13vF38ZBH4CEQ0CP+XHgkHl9WyJuvcGYfdHGgR+UhMNAj+LigaBn7ZlwaDdvwwqvUHY2yEaBH5iGg0CPxOOBoGfekeDwM/1o0HgJxfSIPCzGWkQ+OmTNAj8fE0aBH6CKA0CPyOVBoGfAkuDwM+5pUHgJ/nSIPCzimkQ+GnMNAj8vGkaBH6iNg0CPzOcBhVuEsAN4iYB3CBuErANAn9yAg0CfzYEDQJ/+gUNAn++Bw0Cf4IJDQJ/RgsNAn8KDQ0Cf84ODQJ/khANAn9WknmDHPjToGgQ+POuaBD4E71oEPgzy2jQFmkQtkHcJIAbxE0CuEHcJIAbxE0CuEHcJGAbBP6ESxoE/gxPGgT+lFIaBP4cVhoE/qRZGgT+LF0aBP60YBoE/jxkGgT+xGcaBP5MaxoE/tRuGgT+XHIaBP7kdRoE/mx5GuQjDcI2iJsEcIO4SQA3iJsEcIO4SQA3iJsEbIMCNwngBnGTAG4QNwngBnGTAG5QpEHYBnGTAG4QNwngBnGTAG4QNwngBnGTgG1Q5CYB3CBuEsAN4iYB3CBuEm42yDXWDwauNyjSIGyDuEkAN4ibBHCDuEkAN4ibBHCDuEnANihxk3C3QSU0g2rtDeImAdygSIPuNci3V3Z+971BnIPADeIcBG4QYza4QYzZ2AZlxmxwgxizwQ2Kkw2KLjeIIQoGxX07ro67K8LV3sf4+2rvczkHk8JxbQq5x5KsYklHien7+/CJJRPLCMtOLCMshVhGWCqxDLDsG7GMsDhiGWHxxLLHHksglhGWaBZLS7llgMVsyo37GRazKfcci9mUe47FasrN7liHZLf3WKym3HMsxWrKFbBYTbkCFqspN2+hYem/xF6splwBSySWERarKVfAYjXlClisplwBi9mUe47FbMp9YfF9bqlmU+45FrMpdztU5zDAYnaXW+MZFrO73HMskVhGWMym3Lady3nrsZhNuedYzKbccyxmU+45FrMp9wyL38ym3HMss3OLb4U6XzahULeVdvVW3rFsv+VHaPnu9R5wbyPGS35aW35eW/6+tvyytvy6tPzpD1e/WL7Dlr+9fm/qwkC+X1s+dtcV5YN3XUk+eNeV5IN3XUk+eNeV5IN3XUk+eNcV5HvwrivJX7vr+rW7rl+7605/AOLF8tfuun7truvX7roevOum0uR/U3LIB++6gvwA3nUl+eBdV5IP3nVjfclPA/ngXVeSD951JfngXVeSD951JfngXVeSD951JfngXTe2E0pczL38CN51JfngXVeSj951BfnoXVeQj951BfnoXVeQj951BfnoXVeQj951Bflrd920dtdN0Pf9mg71tX7/Nk9/7d4Ohyvu7XXzPrg27a8ffb9OJw6b/w0Fupv8LSh5O+Jx9nEABbpH3QUFuvPdBQW6n94FBbpL3wUFuvffBCVDJ4q7oEBvB/4elOOY2bzlARToncNdUEwmWglKJJQeitFEew7FaKI9h2I00Z5DMZpoz6EYTbSnUHajifYcChPtAAoT7QAKE+0ASiSUHgoT7QAKE+0AipqcktsL55AEKGs+5Wdzx6/33ea/XfxlZVGTrmilmk5vwMqyNSvr3lsZaaUWK9WkKlqpJgvSSjU7WQNW7v5lZemtVLNJppWcK7VYWTlXqrFSzWcNtFLNJyS0ktseNVZGWqnFSm571FjJbY8aK7ntUWMltz1qrOS2R4mVYeO2R42V3PaosZLbHjVWctujxspIK7VYyW2PGiu57VFjJbc9aqzktkeNldz2aLES+2lktPInVnLbo8ZKbnvUWMltjxorI63UYiW3PWqs5LZHjZXc9qixktseNVZy26PFSuyn4NLKn1jJbY8aK7ntUWMl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",
      "brillig_names": [
        "get_public_data_witness",
        "lt_32_hint",
        "decompose_hint",
        "lte_16_hint",
        "key_registry_get_stored_keys_hint",
        "get_public_keys_and_partial_address",
        "get_notes_internal",
        "get_collapse_hints",
        "get_key_validation_request",
        "notify_nullified_note",
        "pack_arguments",
        "call_private_function_internal",
        "unpack_returns",
        "unsafe_rand",
        "notify_created_note",
        "compute_raw_note_log_unconstrained",
        "emit_encrypted_note_log",
        "compute_unconstrained",
        "emit_encrypted_event_log",
        "directive_integer_quotient",
        "directive_invert"
      ]
    },
    {
      "name": "private_get_symbol",
      "is_unconstrained": false,
      "custom_attributes": [
        "aztec(private)",
        "aztec(view)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "call_context",
                  "type": {
                    "fields": [
                      {
                        "name": "msg_sender",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "storage_contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "function_selector",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::function_selector::FunctionSelector"
                        }
                      },
                      {
                        "name": "is_delegate_call",
                        "type": {
                          "kind": "boolean"
                        }
                      },
                      {
                        "name": "is_static_call",
                        "type": {
                          "kind": "boolean"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::call_context::CallContext"
                  }
                },
                {
                  "name": "historical_header",
                  "type": {
                    "fields": [
                      {
                        "name": "last_archive",
                        "type": {
                          "fields": [
                            {
                              "name": "root",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "next_available_leaf_index",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                        }
                      },
                      {
                        "name": "content_commitment",
                        "type": {
                          "fields": [
                            {
                              "name": "num_txs",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "txs_effects_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "in_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "out_hash",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::content_commitment::ContentCommitment"
                        }
                      },
                      {
                        "name": "state",
                        "type": {
                          "fields": [
                            {
                              "name": "l1_to_l2_message_tree",
                              "type": {
                                "fields": [
                                  {
                                    "name": "root",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "next_available_leaf_index",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                              }
                            },
                            {
                              "name": "partial",
                              "type": {
                                "fields": [
                                  {
                                    "name": "note_hash_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "nullifier_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "public_data_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::partial_state_reference::PartialStateReference"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::state_reference::StateReference"
                        }
                      },
                      {
                        "name": "global_variables",
                        "type": {
                          "fields": [
                            {
                              "name": "chain_id",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "version",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "block_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "slot_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "timestamp",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 64
                              }
                            },
                            {
                              "name": "coinbase",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::eth_address::EthAddress"
                              }
                            },
                            {
                              "name": "fee_recipient",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "gas_fees",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::global_variables::GlobalVariables"
                        }
                      },
                      {
                        "name": "total_fees",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::header::Header"
                  }
                },
                {
                  "name": "tx_context",
                  "type": {
                    "fields": [
                      {
                        "name": "chain_id",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "version",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "gas_settings",
                        "type": {
                          "fields": [
                            {
                              "name": "gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "teardown_gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "max_fees_per_gas",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            },
                            {
                              "name": "inclusion_fee",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::gas_settings::GasSettings"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::transaction::tx_context::TxContext"
                  }
                },
                {
                  "name": "start_side_effect_counter",
                  "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 32
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "fields": [
              {
                "name": "call_context",
                "type": {
                  "fields": [
                    {
                      "name": "msg_sender",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "storage_contract_address",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "function_selector",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::function_selector::FunctionSelector"
                      }
                    },
                    {
                      "name": "is_delegate_call",
                      "type": {
                        "kind": "boolean"
                      }
                    },
                    {
                      "name": "is_static_call",
                      "type": {
                        "kind": "boolean"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::call_context::CallContext"
                }
              },
              {
                "name": "args_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "returns_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "min_revertible_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "is_fee_payer",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "max_block_number",
                "type": {
                  "fields": [
                    {
                      "name": "_opt",
                      "type": {
                        "fields": [
                          {
                            "name": "_is_some",
                            "type": {
                              "kind": "boolean"
                            }
                          },
                          {
                            "name": "_value",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "std::option::Option"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::max_block_number::MaxBlockNumber"
                }
              },
              {
                "name": "note_hash_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "nullifier_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "key_validation_requests_and_generators",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "request",
                        "type": {
                          "fields": [
                            {
                              "name": "pk_m",
                              "type": {
                                "fields": [
                                  {
                                    "name": "x",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "y",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "is_infinite",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                              }
                            },
                            {
                              "name": "sk_app",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"
                        }
                      },
                      {
                        "name": "sk_app_generator",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"
                  }
                }
              },
              {
                "name": "note_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::note_hash::NoteHash"
                  }
                }
              },
              {
                "name": "nullifiers",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "note_hash",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::nullifier::Nullifier"
                  }
                }
              },
              {
                "name": "private_call_requests",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "call_context",
                        "type": {
                          "fields": [
                            {
                              "name": "msg_sender",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "storage_contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "function_selector",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::function_selector::FunctionSelector"
                              }
                            },
                            {
                              "name": "is_delegate_call",
                              "type": {
                                "kind": "boolean"
                              }
                            },
                            {
                              "name": "is_static_call",
                              "type": {
                                "kind": "boolean"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::call_context::CallContext"
                        }
                      },
                      {
                        "name": "args_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "returns_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "start_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "end_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::private_call_request::PrivateCallRequest"
                  }
                }
              },
              {
                "name": "public_call_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "item",
                        "type": {
                          "fields": [
                            {
                              "name": "contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "call_context",
                              "type": {
                                "fields": [
                                  {
                                    "name": "msg_sender",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "storage_contract_address",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "function_selector",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::function_selector::FunctionSelector"
                                    }
                                  },
                                  {
                                    "name": "is_delegate_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  },
                                  {
                                    "name": "is_static_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::call_context::CallContext"
                              }
                            },
                            {
                              "name": "args_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "returns_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "revert_code",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 8
                              }
                            },
                            {
                              "name": "start_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "end_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                  }
                }
              },
              {
                "name": "public_teardown_call_request",
                "type": {
                  "fields": [
                    {
                      "name": "item",
                      "type": {
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "call_context",
                            "type": {
                              "fields": [
                                {
                                  "name": "msg_sender",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "storage_contract_address",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "function_selector",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::function_selector::FunctionSelector"
                                  }
                                },
                                {
                                  "name": "is_delegate_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                },
                                {
                                  "name": "is_static_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::call_context::CallContext"
                            }
                          },
                          {
                            "name": "args_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "returns_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "revert_code",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 8
                            }
                          },
                          {
                            "name": "start_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "end_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                      }
                    },
                    {
                      "name": "counter",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                }
              },
              {
                "name": "l2_to_l1_msgs",
                "type": {
                  "kind": "array",
                  "length": 2,
                  "type": {
                    "fields": [
                      {
                        "name": "recipient",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::eth_address::EthAddress"
                        }
                      },
                      {
                        "name": "content",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::messaging::l2_to_l1_message::L2ToL1Message"
                  }
                }
              },
              {
                "name": "start_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "end_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "note_encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "note_hash_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::NoteLogHash"
                  }
                }
              },
              {
                "name": "encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "randomness",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::EncryptedLogHash"
                  }
                }
              },
              {
                "name": "unencrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::LogHash"
                  }
                }
              },
              {
                "name": "historical_header",
                "type": {
                  "fields": [
                    {
                      "name": "last_archive",
                      "type": {
                        "fields": [
                          {
                            "name": "root",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "next_available_leaf_index",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                      }
                    },
                    {
                      "name": "content_commitment",
                      "type": {
                        "fields": [
                          {
                            "name": "num_txs",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "txs_effects_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "in_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "out_hash",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::content_commitment::ContentCommitment"
                      }
                    },
                    {
                      "name": "state",
                      "type": {
                        "fields": [
                          {
                            "name": "l1_to_l2_message_tree",
                            "type": {
                              "fields": [
                                {
                                  "name": "root",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "next_available_leaf_index",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                            }
                          },
                          {
                            "name": "partial",
                            "type": {
                              "fields": [
                                {
                                  "name": "note_hash_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "nullifier_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "public_data_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::partial_state_reference::PartialStateReference"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::state_reference::StateReference"
                      }
                    },
                    {
                      "name": "global_variables",
                      "type": {
                        "fields": [
                          {
                            "name": "chain_id",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "version",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "block_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "slot_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "timestamp",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 64
                            }
                          },
                          {
                            "name": "coinbase",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::eth_address::EthAddress"
                            }
                          },
                          {
                            "name": "fee_recipient",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "gas_fees",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::global_variables::GlobalVariables"
                      }
                    },
                    {
                      "name": "total_fees",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::header::Header"
                }
              },
              {
                "name": "tx_context",
                "type": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "version",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "gas_settings",
                      "type": {
                        "fields": [
                          {
                            "name": "gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "teardown_gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "max_fees_per_gas",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          },
                          {
                            "name": "inclusion_fee",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::gas_settings::GasSettings"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::transaction::tx_context::TxContext"
                }
              }
            ],
            "kind": "struct",
            "path": "protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"
          },
          "visibility": "public"
        }
      },
      "bytecode": "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",
      "debug_symbols": "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",
      "brillig_names": [
        "get_public_data_witness",
        "lt_32_hint",
        "decompose_hint",
        "lte_16_hint",
        "pack_returns",
        "directive_integer_quotient",
        "directive_invert"
      ]
    },
    {
      "name": "complete_refund",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)",
        "aztec(internal)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "fee_payer_point_immutable",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "fields": [
                      {
                        "name": "x",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "y",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "is_infinite",
                        "type": {
                          "kind": "boolean"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                  }
                }
              ],
              "kind": "struct",
              "path": "types::token_note::TokenNoteHidingPoint"
            },
            "visibility": "private"
          },
          {
            "name": "user_point_immutable",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "fields": [
                      {
                        "name": "x",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "y",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "is_infinite",
                        "type": {
                          "kind": "boolean"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                  }
                }
              ],
              "kind": "struct",
              "path": "types::token_note::TokenNoteHidingPoint"
            },
            "visibility": "private"
          },
          {
            "name": "funded_amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": null
      },
      "bytecode": "H4sIAAAAAAAC/41Vz4scRRR+VdXbO9vT09NdPT96tqt7pnNTJmYjWotGIeiajTFGIqKIiJdI1KCCiDkEwZsiuXj0IkEwNwOC4CUIHkTNwT9Aj15EPHjyqt973TO7Lh4yUNX16lV9771633uzQ0bpk2R654l2yGzFmGhwD+E3wIiJeo9XFPb2ensXIff22kEaQ7Fiv7cviv12HCjO9c6J4lw7WsUu4MjsMkaA+QnawHyGwl2+vIn5LPUwP0lbu3wrwvwU9e/D1ckZBjvPjtXinczJoytPE4zhDik1iEgNB8lxooqSfUW0ODg+jCgcDFl3rNV5uWzgnNcbA0gbKyncgBSupM0Q0uZK6m1C6q2krR6krZUUbTkK+9GDfPe/v3+O/GiYUBiJNw+13jgK+pHjTQ2MYfTAGkStUfo96PvJMV7L2fRuTGUwlWYWpvbIdqai1PEmTEVZCtSUbQeJxa6FKkgtH8oh5iLmMQU2T3co1CNMNMakJoB8mdIlPQdtbgOIL1KwpBc8TbD7kqdR+0njJb3iacwfoA0ZPEsZMuVLb/KlSzFbNRBfJ7Oky8DA7hVgtJ8gX9LbwOAPMhlPOKB3yS7pHU/xaEnvecr5A+VobMEGGoENdpTi3DVK9+UZ8bIWQdtsyH7II1hcGFpZ8tMnUap5mfB7tLt8IGGYj1qYQLIAsCyJUD7YScCCDNXTpEyFlHaUURmWmU4vMvcjjLTL5MKrjI+lOvU6zbxoWv6MUy9l10mxZ1udNAm4Oo0ngxe4gXU6jbGeFliq2Umkg2j7OKnrVCzppldp7lX8P/xQR/lCMeKJU7gb5lmAWKMgQ6y3KOuKhA2biP2IJDB2KdCRpyjzOm/DzDgUGNt57K1Lt35LPr2e//jzn788fPWD97/98tnbJ0799cfvF7/+Jv2Oou6lgpIBy0MvVXoqHWrIQXLaASw7+fyN1/42+v7TP115+ov9M5d/PfVh9n3zw9nm3vFtc+EmVV5X3XGvRw7QJUPzFkjO0KVAO46gFrfnWGp0BVPq5hkUNc4RzTEabi5elet4slJOSapM4FWQiSzRz/C4XA1GREBhbgJkdiEl03DzE8Rm1fyw3ZSYylx0eTdE59Wg9Gqj8SpcIAZ2MWBv0ew4Bnhn5rq+cBpns5ZIcrfs8Bet5/PW39Lrsr0hkRigNqXI4uQsBTUykSWygCNpkPVmMsfNAeLe8HoeghPDPnBCO+93PjWWfbKHfLJC7j6GPSD3HJVhEp14ncy99OaOzlwkdi1ZSOM1ucfgdbFUQ1C6mNag8atUL5X1KnFe2YQZmuBu6GwMX/sxil/N2m4GnD7nV+omFu/gkelrlE9svXZs02qsErbJf3LBoUj4WgwtWbxctH7Dar0alez3EcpaucVsM9tijMtQT8XSWHjF2SlIYqRtjmH9Kq0/4qOJvIoSkbnAohmidX2RhddB5VUlnd4JbVw3VpRy0rAj0UXd6Ci1icfrAW6rWgU9YvdHh4IeCaWSLoVRm0bBrzBG6B8HTrc3xCnT94rb30qesWwO5IDlGdI0m8S4uem16Xkdb4Hm8SPScGROTiC7NRxblJz1MkdK36C87dMgFyhu8gKFUTqOFDwdO/Agd3jZsOZW4RK8K5sspmXCEEycq1QzBOPiT8uUOZqZutY2s4OyKJn2tWMg4NbALWvugC6rva5tt1dvcx9glhazjC1kbOHj1oKnjBmLcuLcLxx3Y1dB/wlVnbFM4yFNlXNWpfiRzqAEcAWJwsJxsaIgY2ZWPnUJQxSA+IyKVRAFcF3BuJ8fxXWFV8UUuFMYCKbAdVMoYGbq9TTu9qbb3Ca5T+Wzii1U/DfxFW23QVT8d7JLxZ3izr+R77vGEAoAAA==",
      "debug_symbols": "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",
      "brillig_names": [
        "complete_refund"
      ],
      "assert_messages": {
        "432": "attempt to add with overflow",
        "413": "attempt to add with overflow",
        "122": "funded amount not enough to cover tx fee",
        "135": "attempt to subtract with underflow",
        "393": "attempt to add with overflow",
        "417": "Array index out of bounds",
        "33": "Function complete_refund can only be called internally",
        "400": "Array index out of bounds",
        "56": "call to assert_max_bit_size",
        "378": "Array index out of bounds",
        "28": "Not initialized",
        "361": "Array index out of bounds",
        "374": "attempt to add with overflow",
        "67": "call to assert_max_bit_size"
      }
    },
    {
      "name": "_recurse_subtract_balance",
      "is_unconstrained": false,
      "custom_attributes": [
        "aztec(internal)",
        "aztec(private)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "call_context",
                  "type": {
                    "fields": [
                      {
                        "name": "msg_sender",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "storage_contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "function_selector",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::function_selector::FunctionSelector"
                        }
                      },
                      {
                        "name": "is_delegate_call",
                        "type": {
                          "kind": "boolean"
                        }
                      },
                      {
                        "name": "is_static_call",
                        "type": {
                          "kind": "boolean"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::call_context::CallContext"
                  }
                },
                {
                  "name": "historical_header",
                  "type": {
                    "fields": [
                      {
                        "name": "last_archive",
                        "type": {
                          "fields": [
                            {
                              "name": "root",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "next_available_leaf_index",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                        }
                      },
                      {
                        "name": "content_commitment",
                        "type": {
                          "fields": [
                            {
                              "name": "num_txs",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "txs_effects_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "in_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "out_hash",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::content_commitment::ContentCommitment"
                        }
                      },
                      {
                        "name": "state",
                        "type": {
                          "fields": [
                            {
                              "name": "l1_to_l2_message_tree",
                              "type": {
                                "fields": [
                                  {
                                    "name": "root",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "next_available_leaf_index",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                              }
                            },
                            {
                              "name": "partial",
                              "type": {
                                "fields": [
                                  {
                                    "name": "note_hash_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "nullifier_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "public_data_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::partial_state_reference::PartialStateReference"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::state_reference::StateReference"
                        }
                      },
                      {
                        "name": "global_variables",
                        "type": {
                          "fields": [
                            {
                              "name": "chain_id",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "version",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "block_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "slot_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "timestamp",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 64
                              }
                            },
                            {
                              "name": "coinbase",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::eth_address::EthAddress"
                              }
                            },
                            {
                              "name": "fee_recipient",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "gas_fees",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::global_variables::GlobalVariables"
                        }
                      },
                      {
                        "name": "total_fees",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::header::Header"
                  }
                },
                {
                  "name": "tx_context",
                  "type": {
                    "fields": [
                      {
                        "name": "chain_id",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "version",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "gas_settings",
                        "type": {
                          "fields": [
                            {
                              "name": "gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "teardown_gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "max_fees_per_gas",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            },
                            {
                              "name": "inclusion_fee",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::gas_settings::GasSettings"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::transaction::tx_context::TxContext"
                  }
                },
                {
                  "name": "start_side_effect_counter",
                  "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 32
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "account",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "fields": [
              {
                "name": "call_context",
                "type": {
                  "fields": [
                    {
                      "name": "msg_sender",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "storage_contract_address",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "function_selector",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::function_selector::FunctionSelector"
                      }
                    },
                    {
                      "name": "is_delegate_call",
                      "type": {
                        "kind": "boolean"
                      }
                    },
                    {
                      "name": "is_static_call",
                      "type": {
                        "kind": "boolean"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::call_context::CallContext"
                }
              },
              {
                "name": "args_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "returns_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "min_revertible_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "is_fee_payer",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "max_block_number",
                "type": {
                  "fields": [
                    {
                      "name": "_opt",
                      "type": {
                        "fields": [
                          {
                            "name": "_is_some",
                            "type": {
                              "kind": "boolean"
                            }
                          },
                          {
                            "name": "_value",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "std::option::Option"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::max_block_number::MaxBlockNumber"
                }
              },
              {
                "name": "note_hash_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "nullifier_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "key_validation_requests_and_generators",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "request",
                        "type": {
                          "fields": [
                            {
                              "name": "pk_m",
                              "type": {
                                "fields": [
                                  {
                                    "name": "x",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "y",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "is_infinite",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                              }
                            },
                            {
                              "name": "sk_app",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"
                        }
                      },
                      {
                        "name": "sk_app_generator",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"
                  }
                }
              },
              {
                "name": "note_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::note_hash::NoteHash"
                  }
                }
              },
              {
                "name": "nullifiers",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "note_hash",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::nullifier::Nullifier"
                  }
                }
              },
              {
                "name": "private_call_requests",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "call_context",
                        "type": {
                          "fields": [
                            {
                              "name": "msg_sender",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "storage_contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "function_selector",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::function_selector::FunctionSelector"
                              }
                            },
                            {
                              "name": "is_delegate_call",
                              "type": {
                                "kind": "boolean"
                              }
                            },
                            {
                              "name": "is_static_call",
                              "type": {
                                "kind": "boolean"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::call_context::CallContext"
                        }
                      },
                      {
                        "name": "args_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "returns_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "start_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "end_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::private_call_request::PrivateCallRequest"
                  }
                }
              },
              {
                "name": "public_call_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "item",
                        "type": {
                          "fields": [
                            {
                              "name": "contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "call_context",
                              "type": {
                                "fields": [
                                  {
                                    "name": "msg_sender",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "storage_contract_address",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "function_selector",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::function_selector::FunctionSelector"
                                    }
                                  },
                                  {
                                    "name": "is_delegate_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  },
                                  {
                                    "name": "is_static_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::call_context::CallContext"
                              }
                            },
                            {
                              "name": "args_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "returns_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "revert_code",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 8
                              }
                            },
                            {
                              "name": "start_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "end_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                  }
                }
              },
              {
                "name": "public_teardown_call_request",
                "type": {
                  "fields": [
                    {
                      "name": "item",
                      "type": {
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "call_context",
                            "type": {
                              "fields": [
                                {
                                  "name": "msg_sender",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "storage_contract_address",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "function_selector",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::function_selector::FunctionSelector"
                                  }
                                },
                                {
                                  "name": "is_delegate_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                },
                                {
                                  "name": "is_static_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::call_context::CallContext"
                            }
                          },
                          {
                            "name": "args_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "returns_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "revert_code",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 8
                            }
                          },
                          {
                            "name": "start_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "end_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                      }
                    },
                    {
                      "name": "counter",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                }
              },
              {
                "name": "l2_to_l1_msgs",
                "type": {
                  "kind": "array",
                  "length": 2,
                  "type": {
                    "fields": [
                      {
                        "name": "recipient",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::eth_address::EthAddress"
                        }
                      },
                      {
                        "name": "content",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::messaging::l2_to_l1_message::L2ToL1Message"
                  }
                }
              },
              {
                "name": "start_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "end_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "note_encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "note_hash_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::NoteLogHash"
                  }
                }
              },
              {
                "name": "encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "randomness",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::EncryptedLogHash"
                  }
                }
              },
              {
                "name": "unencrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::LogHash"
                  }
                }
              },
              {
                "name": "historical_header",
                "type": {
                  "fields": [
                    {
                      "name": "last_archive",
                      "type": {
                        "fields": [
                          {
                            "name": "root",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "next_available_leaf_index",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                      }
                    },
                    {
                      "name": "content_commitment",
                      "type": {
                        "fields": [
                          {
                            "name": "num_txs",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "txs_effects_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "in_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "out_hash",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::content_commitment::ContentCommitment"
                      }
                    },
                    {
                      "name": "state",
                      "type": {
                        "fields": [
                          {
                            "name": "l1_to_l2_message_tree",
                            "type": {
                              "fields": [
                                {
                                  "name": "root",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "next_available_leaf_index",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                            }
                          },
                          {
                            "name": "partial",
                            "type": {
                              "fields": [
                                {
                                  "name": "note_hash_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "nullifier_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "public_data_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::partial_state_reference::PartialStateReference"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::state_reference::StateReference"
                      }
                    },
                    {
                      "name": "global_variables",
                      "type": {
                        "fields": [
                          {
                            "name": "chain_id",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "version",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "block_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "slot_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "timestamp",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 64
                            }
                          },
                          {
                            "name": "coinbase",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::eth_address::EthAddress"
                            }
                          },
                          {
                            "name": "fee_recipient",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "gas_fees",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::global_variables::GlobalVariables"
                      }
                    },
                    {
                      "name": "total_fees",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::header::Header"
                }
              },
              {
                "name": "tx_context",
                "type": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "version",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "gas_settings",
                      "type": {
                        "fields": [
                          {
                            "name": "gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "teardown_gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "max_fees_per_gas",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          },
                          {
                            "name": "inclusion_fee",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::gas_settings::GasSettings"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::transaction::tx_context::TxContext"
                }
              }
            ],
            "kind": "struct",
            "path": "protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"
          },
          "visibility": "public"
        }
      },
      "bytecode": "",
      "debug_symbols": "",
      "brillig_names": [
        "get_notes_internal",
        "get_collapse_hints",
        "decompose_hint",
        "get_key_validation_request",
        "notify_nullified_note",
        "pack_arguments",
        "call_private_function_internal",
        "unpack_returns",
        "pack_returns",
        "directive_integer_quotient",
        "directive_invert"
      ]
    },
    {
      "name": "mint_private",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          },
          {
            "name": "secret_hash",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": null
      },
      "bytecode": "H4sIAAAAAAAC/+1WS4sdRRQ+VdX16Oru6u6qvpjFKD5Wyo2ZAa1BUVAcJ4rEJCSIiguXCirq0ux8gAsFRYRAEBV04Urduglu8wsUXIsbN4oujd+pvvdmvLPJD/BC1a3HOd95n+pdUkLukXKniXZJVRYTubsJP4dh8ffYrWTcgTs4z2cH8yCJIfZxSWqfTyrMj5PGfEjmXlx2h0x+moFywVLgyVK5o7vqyG6XBFXbR4YU89xW9Clz/fBatxrDg0vUnoSv3UmiOyFRFIH1WoSusfPrnfHYmY0y5phqzWbXYNeu9VDUZdm1OAorAqIex3Lg7UC7Qokey14OmYYR7Bh9yNTZJT3qSdkO5KYawCPGkyTeo35Jh1kEeFhZGTHHLmWRwg6ZYO9nJf/7u771oxjI2Jhg9llKbPYOVcHu8KEERrT3bUDEBiU43IcEKn1TQiYWMi0g5DlarIToImSCED3Zgqfh1DjhuLJxh5eSCSLuIhtoko5MYfWGO3rstQXuy2QZt2Jaxpl0hNvgnVfhtr4LcNZrFJb0egl/n0UdMsIN9xqOGbyqXZauyXJsb4QMV+2xcPabtBLgNT3kDEt6FzEZfMsT63OdELL3s2htFk173Edi22fUQPemBZ2xpoFdrjHA+YgM2wXwzLKhqFIl80zJFk47J5GARmfJhistsao1JyjT8hHpQmsKreZ840QxMp1TkAsKShiRdcjCcGoGGQBnClUR0dXsMWgVlCunXBn1CPpmPq0rEq6Gm+kHdvN3hYj91sysR5hcFvAzBeR4A+dVfklXuQCR5wpnCmeBz7hM2ITi/aaYMOsG5gaRswVOYtXWcHAV75ouveTO/fL2b18//+nJM3/IZ/7Rn/z85DcXd77o/dUFsf9q7k6lVl0BnCFQsg6hbGaDDcD8B2/+2oUX//qpuvjZE39WZ8zUXP79jbeuXLjn790fL9iPCU7WK3J0G7MKTbUVmlqWIKiidmTPpxKE6SzyueQEe33CUHDKDc/PYeUkbDudhQ5z6Di8Y5VF1TLUWA4rzNXIPtZcju78urG5dX/FsRsxjbrc6dUod9B73HIJw47SPf0I7gcq6c6dj1sWl0XhRQhH7oZe+iz9zFG074YsBv8Qy/GnOPsRWM3e4bS7g9MOFrOUOVVRozGhhtgrSSZu3lOW02r7/+pmVnDs7Yn7TkJ/FU/N/bV4d4F5MfBzUNrpIos+osksYuImk2KWsUUBc1QGnwJDoHWJZ+dWyrgWuMky7gvbuAmNzXrgeiRo74GrPePGxCnR8NkeOiR6C658EcaNcxgjC+IHR7wyPzjIAe6fgOqRQ2YIdlX58kjzmmsDbU3D6MhGCza6TxOALtG0Ui5IFJOaejZaP7hOd34d+xFVpHp+LMQ7s4UA4wcCz2dfHhMWHtMDtGqI5ZWNEGIjC/lwFrKPinBqj58AV+ETRVzB14qmOSBFuIWtAzvVjgNE2qEH92Xqi0iZ0OYGfs73hVPONKhhAyhW63Nnl+JLwCmnl+L7fS40LSCJHKp8ryzqDgy1q5y/BQ3XO8+fVfgrn1V+HnNpA/Bb58HumKGBuMY53uqylc65hrc1pNdL8dWeUEBkwaf26cS1E9f+BXfreojVCQAA",
      "debug_symbols": "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",
      "brillig_names": [
        "mint_private"
      ],
      "assert_messages": {
        "330": "Array index out of bounds",
        "343": "attempt to add with overflow",
        "378": "Array index out of bounds",
        "33": "Not initialized",
        "78": "call to assert_max_bit_size",
        "347": "Array index out of bounds",
        "88": "call to assert_max_bit_size",
        "104": "attempt to add with overflow",
        "363": "attempt to add with overflow",
        "407": "attempt to add with overflow",
        "386": "attempt to add with overflow",
        "396": "Array index out of bounds"
      }
    },
    {
      "name": "set_minter",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "minter",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "approve",
            "type": {
              "kind": "boolean"
            },
            "visibility": "private"
          }
        ],
        "return_type": null
      },
      "bytecode": "H4sIAAAAAAAC/01Su4pUQRA9/a7u230ndAMVAxNhdGcC+6KwketspLCgP2AopuaCgQjm4i/tV3mqexfmQtXtep7q03WAM/YIJzfAAc4nKsgL8BNK4u/dE0S5lutb9V1PgaUYDZzkNAKnKTOwsQpu01RP/R5h02h8xeBOsxQO6APEsaZbJ+eWV8tP6wAD6Vb8uSvCscY/1TZT56tx1hOlsMr4AlN8fgk8R74xA7DcQzCVV7VZzYyDcUZ7e5s78sLWFF+UDML6tMexwCWf6TELG35D3uN1N4UMuWQrdfWtm1ae6RipIJZUmXiFqsic2KY+5nJOs1EHqI5TbO2ordvUaDXLU2jD33TE9YO/vxjrwABWdq+OGCaJI8ZHOMV4jBjJm+dkt5w2+8LYZ5Q9Pl0ylokVa3mYwkadIp5NETtiINFBLxkqOwTt/mV2HymOmu5uQnyrrjh3xOUlrdQpMv8r4uQ66SCkKBM8VTJgOHxsdX2jpateSJEakVLbsfI7dlq58QnFHfWdxOvK/OT2BC1wq91R7xIpqkpRWjJxU1amf0ymu10L31CfbDPiJC7c7shWiTm/hP7fbOck7PFv01UMhkgQEnwch9xYkMVLeQQjRYquOX9jzcuUueZs+FcKy0ULFsItImqGYVoRWdTMRCcXf47GsaMCX264uLu4+w+BpcbpfgMAAA==",
      "debug_symbols": "5ZzdTuMwEIXfJde98Mz4Z4ZXWa1QgYIqVQVBWWmFePd1u42TktAhy4I8yg0k7Yn9TezkeBynL83N6ur57nK9vb1/ai5+vDSb++vlbn2/zXsvr4vm6nG92azvLvsfN27/B8JB//Sw3O53n3bLx11z4RbNanuT/+djb9ebVXOR/OvPRQNxkjpNUvMktUxRo5ukhklqnKSmSWo/ST2pLXFSW+KktsRJbYkfb8vFQCaUjkIJqUgh4ojWo2tLzZvSqd1YyVEQjuqYazlRZ2pyn6AGB/6oBEf+W7nhM2c7UXu2RTvbgCxtjOSDQs0QWjWjwwE1/hfqfLJPsfdF09cV7b+u6PB1RY/eGSJCbLsV9rrsO/07hlKDdDTAaUQdRFp1dBCVnhJSaC/5vMmDnpJM07NperFM751pejBNj6bpyTS9N00fTNPXfsdkX+g5vKUPlfd7LuPmvBkH9N/f79kVegKFPhdYxs/gup5D4A70wTR9NE3/zhjTlyqwd6mP0nuK7RjcU9J4kkt4VCfHg5wu6KPGCG+y7iDTj4nuH44ZH5dQLEkqJVHSFSg5fuzFnnis5ULbBiC9dnM0Vm7gks5Gj71W5lF1l7L3ElSUQ5Q4iyhpFlH6WUQZZhFlnEWUaRZR8iyilDlEmdwsopzF2CfNYuyTZjH2Sf7TUeacBLu8TJQ4P/jEIsaSYjCdpHp76GAROlqEThah9XGDkAKNvswHYAonNYzQUDfXQKI9+SRpObzzvSs97tkZvp3dUyk6auwRQtuYeZPezktwqJxeUpm4cINZFY6V0zOeo09106OTQg+DeXFm0/RimV6cafrK75gKPZqmJ9P03jR95V6r0FfutQq9aa8V014rpr02p+C28WvPTyJ3+NrKWfGFRHz/iXIbbOXmfCbYA37l7qzhV27PGn7tubCCX/vC1LMLlXJ9la9UKq8xBPaDXB6g8qWpjHgWv/K1qRp+5YtTuXh0xmfN5KisUhJKNAzW9Jo+AG8bv/LVrBp+5a+OaPiVvzui4Vfu0Rp+7R59Hh9r92gFv3aPVvCr9+jz+LZdF227Ltp2XbTtumjbddGw677m3V/Lx/XyarM6/lbE7fP2uvfTEbvfD3+/yeI/",
      "brillig_names": [
        "set_minter"
      ],
      "assert_messages": {
        "116": "Array index out of bounds",
        "77": "Storage slot 0 not allowed. Storage slots must start from 1.",
        "127": "attempt to add with overflow",
        "60": "caller is not admin",
        "97": "Array index out of bounds",
        "105": "attempt to add with overflow",
        "35": "Not initialized"
      }
    },
    {
      "name": "mint_public",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "to",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": null
      },
      "bytecode": "H4sIAAAAAAAC/41VMY4VORAt29122W273e6RlmDYlTZZrfR3mZF2+2uRdpMdGAkJJCKOwAEISDkCRyBAIkCCCxAiAlJCREiOREgAr9zzh2EAiS/Zv+2qeq9eddl9QEbpQzJ8THRApnOYiH8n/BjD4e//i2T5iI9uyt7ROkhjqC2MZLay02G+Qj3mq2T/hDFdFfdjAVoalkHMog2fXXVnVgekqDu/ZclIzM8tnzb7f3e5eYyAKOUDqeD5D6JfwaiI9sna8DeCz/0+nvuRz2TXyN92kZ0N+7KpgeHDX6cg6hTFMuyWpVCgt3ZAwhErkyTrRAfKqIjHqNNCKS96yFhljac+t/0Mbz1e70SAlAoDBhoD2WQi1MRuRE7/0Sg5CfxJweAjoYKCCCEa8TgCmnJBoTDGuFBwG7oWyLggTEqw3lPe0I1FRUkyabxXWMuiSoTamH6kWA7FSq4A7BaVk2LFtC+bKFZ0CXVJFqla57HdpQJbERuiYCsW3DZywVxSPI0ukF1iAu5tSl8JTiJ4kuXUBK/5TwtNFYIxkgiGuDsQnAPcbTcB6w2lDd09FVwx1zAvav5xwVUE1xlg92j+QnAVwfWz4LoK9rB5saXqYfMngtGo1p8RjH61vgm+/1nwdxuI0UByHljjqee2L82n5y8aSE7E3BqoRwP1nQH8AzIC30ntO3kvXVlr9bDVKsLlBcUNPeok2SxCsoVH2dBjeJSQ4fFUOufJJXmX4jFlJEWtg9tLii3dtcPxJuKwaDtI1w0RCIMHwjPyx+34wAW1ML4MC8yXZSuu6Zsyxoy5VeX5ripREgFxlhqnuDtoul0PfKZOuDPYLbrI7aUciLPrAfSK+hPiqHvMfXaLcnx5d4MMktLIIM48wP81DSsxS42kd4S8iuo6/yNRM0YVkklIpj0EvaU9CdpCB5tDaVvucAEqj7uwlwAz6z3Me3ladJ0aZRLKVBH9jmqj1HOUywJtDNoMWifHJJWp0SKKitBW0LrWkh/WlgRt/gat0Ey6kTuckSLt78YMWpdxgpVdT/CiJ9BmuS62ig3bAX1mAeXgk9ht1Ag4w/1G/bKVovUKTMRopsP24BMCPHccfiLFgYN8K/DXvhVhHeu3AoAXOSCcJWAA3cAsy74tNTMPsvRg9xtVD5UBohBf2tKFlxdefgKfjGdkqgYAAA==",
      "debug_symbols": "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",
      "brillig_names": [
        "mint_public"
      ],
      "assert_messages": {
        "195": "attempt to add with overflow",
        "61": "Storage slot 0 not allowed. Storage slots must start from 1.",
        "218": "attempt to add with overflow",
        "250": "Array index out of bounds",
        "261": "attempt to add with overflow",
        "127": "call to assert_max_bit_size",
        "159": "Storage slot 0 not allowed. Storage slots must start from 1.",
        "86": "call to assert_max_bit_size",
        "228": "Array index out of bounds",
        "33": "Not initialized",
        "187": "Array index out of bounds",
        "210": "Array index out of bounds",
        "239": "attempt to add with overflow",
        "143": "attempt to add with overflow",
        "38": "call to assert_max_bit_size",
        "102": "attempt to add with overflow"
      }
    },
    {
      "name": "public_get_name",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)",
        "aztec(view)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "fields": [
              {
                "name": "value",
                "type": {
                  "kind": "field"
                }
              }
            ],
            "kind": "struct",
            "path": "compressed_string::field_compressed_string::FieldCompressedString"
          },
          "visibility": "public"
        }
      },
      "bytecode": "H4sIAAAAAAAC/zWRT0sEMQzFX5s2TbvqRdA9qCdBhHV35tLBg6f9I4ggXsVPvJ/KlxkcSKZpk19e0wES4gixEzBAYqaDPoOf0jJg+3uoHezwzdgOiyHSwsRDyOQ7acuNiwkkHU+eePSEh5kz+/L2zyx+PCAEbQim5QW4RnkPLiAEY3iD5GFnHoHsxVVydeqhYggSEpcpaoeWgVu1x1p6TOb6a0fNGzw2SK7O36Js8NSDsbeUGaM195Ctwzxbdn54B81KmhGuSeXVJQuW5kEviNNG3ITm+njbYjK6Qpvvf+IosheIxEbfslKSerE3ziVd0SdH7BdEj0IJycVOwcR0xQEqea76w6j6k0wxJvxOPrccnO8Cx3lRL1lQLVm75TCbNX8s/ubHaostj0XgjzWWmxes2G5l5mGew2hmKw8ru9cNvsYgJHrj3YT1eX3+A51e4cMrAgAA",
      "debug_symbols": "1ZrdjsIgEIXfhWsv+BkG8FU2G1O1miZNNVo32RjffXEttdqmrHE1zI2Cnk6/EoYDkx7ZMp8f1rOiWm32bPpxZOVmkdXFpvK942nC5ruiLIv1rPsz4+cPIX/1+21Wnbv7OtvVbMonLK+W/ttfuyrKnE0NnCY9mVOmETptWqlAOaAFyUNU33RXNR+KjE6KRo3+LjfqzwkT6glqwQU0SsEVvJUbnhlto8Jou9hoC2ldeEYFOkJthQ5qK7nsUet/ofaDfYt9Do2vC21eF9q+LrT7c2ivlvwhtXhIPbgygHIypAMIjGQaYjsL0XUyzZgBtXZOh9zhndDDc1YbHRYf37T3c1Yq0vRAml6TpkfS9IY0vSVN7yjTK06aXpCmJ+21KvUV00JLb3WPPvGste35wzfxnh7en7WWt/RKROihPYZA58yi1IVdEGaXhNlJ5yskvsOxbVFEW+hVACDxHY6Vcow+9bVylF4nvsOx3F3pbUTtFIT1wBeaVO9ZE98PjbuaTnw/FKFPvPYQoQfS9InXHiL0iTtzhD51Zx6nT92Zx+lJn2IweWcepSfttUjaa5G01yJpr0XSXoukvRYJe+3Jd7+yXZHNy7x5QWF1qBad9xXq7+3lHy/+AQ==",
      "brillig_names": [
        "public_get_name"
      ],
      "assert_messages": {
        "21": "Function public_get_name can only be called statically",
        "18": "Not initialized",
        "66": "attempt to add with overflow",
        "54": "Array index out of bounds"
      }
    },
    {
      "name": "private_get_name",
      "is_unconstrained": false,
      "custom_attributes": [
        "aztec(private)",
        "aztec(view)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "call_context",
                  "type": {
                    "fields": [
                      {
                        "name": "msg_sender",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "storage_contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "function_selector",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::function_selector::FunctionSelector"
                        }
                      },
                      {
                        "name": "is_delegate_call",
                        "type": {
                          "kind": "boolean"
                        }
                      },
                      {
                        "name": "is_static_call",
                        "type": {
                          "kind": "boolean"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::call_context::CallContext"
                  }
                },
                {
                  "name": "historical_header",
                  "type": {
                    "fields": [
                      {
                        "name": "last_archive",
                        "type": {
                          "fields": [
                            {
                              "name": "root",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "next_available_leaf_index",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                        }
                      },
                      {
                        "name": "content_commitment",
                        "type": {
                          "fields": [
                            {
                              "name": "num_txs",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "txs_effects_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "in_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "out_hash",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::content_commitment::ContentCommitment"
                        }
                      },
                      {
                        "name": "state",
                        "type": {
                          "fields": [
                            {
                              "name": "l1_to_l2_message_tree",
                              "type": {
                                "fields": [
                                  {
                                    "name": "root",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "next_available_leaf_index",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                              }
                            },
                            {
                              "name": "partial",
                              "type": {
                                "fields": [
                                  {
                                    "name": "note_hash_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "nullifier_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "public_data_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::partial_state_reference::PartialStateReference"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::state_reference::StateReference"
                        }
                      },
                      {
                        "name": "global_variables",
                        "type": {
                          "fields": [
                            {
                              "name": "chain_id",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "version",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "block_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "slot_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "timestamp",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 64
                              }
                            },
                            {
                              "name": "coinbase",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::eth_address::EthAddress"
                              }
                            },
                            {
                              "name": "fee_recipient",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "gas_fees",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::global_variables::GlobalVariables"
                        }
                      },
                      {
                        "name": "total_fees",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::header::Header"
                  }
                },
                {
                  "name": "tx_context",
                  "type": {
                    "fields": [
                      {
                        "name": "chain_id",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "version",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "gas_settings",
                        "type": {
                          "fields": [
                            {
                              "name": "gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "teardown_gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "max_fees_per_gas",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            },
                            {
                              "name": "inclusion_fee",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::gas_settings::GasSettings"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::transaction::tx_context::TxContext"
                  }
                },
                {
                  "name": "start_side_effect_counter",
                  "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 32
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "fields": [
              {
                "name": "call_context",
                "type": {
                  "fields": [
                    {
                      "name": "msg_sender",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "storage_contract_address",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "function_selector",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::function_selector::FunctionSelector"
                      }
                    },
                    {
                      "name": "is_delegate_call",
                      "type": {
                        "kind": "boolean"
                      }
                    },
                    {
                      "name": "is_static_call",
                      "type": {
                        "kind": "boolean"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::call_context::CallContext"
                }
              },
              {
                "name": "args_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "returns_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "min_revertible_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "is_fee_payer",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "max_block_number",
                "type": {
                  "fields": [
                    {
                      "name": "_opt",
                      "type": {
                        "fields": [
                          {
                            "name": "_is_some",
                            "type": {
                              "kind": "boolean"
                            }
                          },
                          {
                            "name": "_value",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "std::option::Option"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::max_block_number::MaxBlockNumber"
                }
              },
              {
                "name": "note_hash_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "nullifier_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "key_validation_requests_and_generators",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "request",
                        "type": {
                          "fields": [
                            {
                              "name": "pk_m",
                              "type": {
                                "fields": [
                                  {
                                    "name": "x",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "y",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "is_infinite",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                              }
                            },
                            {
                              "name": "sk_app",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"
                        }
                      },
                      {
                        "name": "sk_app_generator",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"
                  }
                }
              },
              {
                "name": "note_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::note_hash::NoteHash"
                  }
                }
              },
              {
                "name": "nullifiers",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "note_hash",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::nullifier::Nullifier"
                  }
                }
              },
              {
                "name": "private_call_requests",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "call_context",
                        "type": {
                          "fields": [
                            {
                              "name": "msg_sender",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "storage_contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "function_selector",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::function_selector::FunctionSelector"
                              }
                            },
                            {
                              "name": "is_delegate_call",
                              "type": {
                                "kind": "boolean"
                              }
                            },
                            {
                              "name": "is_static_call",
                              "type": {
                                "kind": "boolean"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::call_context::CallContext"
                        }
                      },
                      {
                        "name": "args_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "returns_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "start_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "end_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::private_call_request::PrivateCallRequest"
                  }
                }
              },
              {
                "name": "public_call_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "item",
                        "type": {
                          "fields": [
                            {
                              "name": "contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "call_context",
                              "type": {
                                "fields": [
                                  {
                                    "name": "msg_sender",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "storage_contract_address",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "function_selector",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::function_selector::FunctionSelector"
                                    }
                                  },
                                  {
                                    "name": "is_delegate_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  },
                                  {
                                    "name": "is_static_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::call_context::CallContext"
                              }
                            },
                            {
                              "name": "args_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "returns_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "revert_code",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 8
                              }
                            },
                            {
                              "name": "start_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "end_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                  }
                }
              },
              {
                "name": "public_teardown_call_request",
                "type": {
                  "fields": [
                    {
                      "name": "item",
                      "type": {
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "call_context",
                            "type": {
                              "fields": [
                                {
                                  "name": "msg_sender",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "storage_contract_address",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "function_selector",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::function_selector::FunctionSelector"
                                  }
                                },
                                {
                                  "name": "is_delegate_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                },
                                {
                                  "name": "is_static_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::call_context::CallContext"
                            }
                          },
                          {
                            "name": "args_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "returns_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "revert_code",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 8
                            }
                          },
                          {
                            "name": "start_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "end_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                      }
                    },
                    {
                      "name": "counter",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                }
              },
              {
                "name": "l2_to_l1_msgs",
                "type": {
                  "kind": "array",
                  "length": 2,
                  "type": {
                    "fields": [
                      {
                        "name": "recipient",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::eth_address::EthAddress"
                        }
                      },
                      {
                        "name": "content",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::messaging::l2_to_l1_message::L2ToL1Message"
                  }
                }
              },
              {
                "name": "start_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "end_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "note_encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "note_hash_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::NoteLogHash"
                  }
                }
              },
              {
                "name": "encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "randomness",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::EncryptedLogHash"
                  }
                }
              },
              {
                "name": "unencrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::LogHash"
                  }
                }
              },
              {
                "name": "historical_header",
                "type": {
                  "fields": [
                    {
                      "name": "last_archive",
                      "type": {
                        "fields": [
                          {
                            "name": "root",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "next_available_leaf_index",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                      }
                    },
                    {
                      "name": "content_commitment",
                      "type": {
                        "fields": [
                          {
                            "name": "num_txs",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "txs_effects_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "in_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "out_hash",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::content_commitment::ContentCommitment"
                      }
                    },
                    {
                      "name": "state",
                      "type": {
                        "fields": [
                          {
                            "name": "l1_to_l2_message_tree",
                            "type": {
                              "fields": [
                                {
                                  "name": "root",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "next_available_leaf_index",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                            }
                          },
                          {
                            "name": "partial",
                            "type": {
                              "fields": [
                                {
                                  "name": "note_hash_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "nullifier_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "public_data_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::partial_state_reference::PartialStateReference"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::state_reference::StateReference"
                      }
                    },
                    {
                      "name": "global_variables",
                      "type": {
                        "fields": [
                          {
                            "name": "chain_id",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "version",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "block_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "slot_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "timestamp",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 64
                            }
                          },
                          {
                            "name": "coinbase",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::eth_address::EthAddress"
                            }
                          },
                          {
                            "name": "fee_recipient",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "gas_fees",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::global_variables::GlobalVariables"
                      }
                    },
                    {
                      "name": "total_fees",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::header::Header"
                }
              },
              {
                "name": "tx_context",
                "type": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "version",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "gas_settings",
                      "type": {
                        "fields": [
                          {
                            "name": "gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "teardown_gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "max_fees_per_gas",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          },
                          {
                            "name": "inclusion_fee",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::gas_settings::GasSettings"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::transaction::tx_context::TxContext"
                }
              }
            ],
            "kind": "struct",
            "path": "protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"
          },
          "visibility": "public"
        }
      },
      "bytecode": "",
      "debug_symbols": "7Z3brts2FobfZV/ngofFU19lsFGkbVoECJKiSQcYFHn3sXcj2duS7Sjisshf/81M3ZKLi/wsL+mjpP3P02/vfvn7j5/ff/z90+enn/7zz9OHT7++/fL+08fDp3+erH/5d5//fPvx+PHzl7d/fXn6ybx5evfxt8P/f33z9Pv7D++efkry9c2kmS82fGvpS7BjY2vC1+c3T1YUY4cVsa3z8VtL69JZ7OhmWhef3bfWxZfyKpNpa+dKHtJw3pgyyTx2m3n67syPrfNcawl+SElCSLdn67wtY0IhnvJJaaZ1SsMXptiz3MNcW2u898NCGi+nRLzNc+1zSEPznE6Z+FlI1gyLYq2U88bHdSlcl7l1cYbrMrsulusyuy7uwetiTRxztya/WpljPr6xfKSxfEJj+cTG8kmN5ZMby6e0lY83jeVjG8vn8b/Pbjw3fjkfvsjHN5bPw3+fYxp5JePvVHbxMuRxXtXd/HXGEPj8Su3Y9jjPsJN5xp3MM+HMMwwHaEnTeeadzLPsY55icOaZxnmWMJmn3ck83U7m6YHqymmecTJPgZnnwVuM4sI4M5kpzhnRvZninBPdmynQWdFpi8G4aRlt/LSoDPIyFHv3Z3fcYjr8Ap8iz6tLn4fG4u6IS+fFz01w3nL6MhpUse7rCiUqjZ/K7ZlNaPz0swk2KY0bkCnLneWut5UQGj9l3jWbxk/zK7E5zvTxJ/pBxpn6cGemSYbTghRPabhkXnKXjnMPHeceO849dZx77jj30m/u0XScu+04d9dx7h3X1dhxXY0d19XYcV2NHdfV2HFdjR3X1dRxXU0d19XUcV1NHdfV1HFdTR3X1dRxXU0d19XUcV1NHdfV3HFdzR3X1dxxXc0d19XccV3NHdfV3HFdzR3X1dxxXc0d19XScV0tHdfV0nFdLR3X1dJxXS0d19XScV0tHdfV0nFdLR3XVWs6LqzWdFxZrem4tFrTcW21puPiak3H1dWajsurNR3XV2s6LrDW9Fxhbc8V1vZcYW3PFdb2XGFt2xU2x6FxTmWafNsV9k7ybVfYEk/PmhnzKvtpY4njm6kkmbNHEGafbYB7EsLatk84yHIJy7bPv8hyCcu2T0fJcgFL1/bZOVkuYdn2xQpZLmHZ9rUbWS5h2falLFkuYSlkCcOybdFBlktY0vvgsKT3wWFJ74PDkt4HhqWn98FhSe+Dw5LeB4clvQ8OSyFLGJb0Pjgs6X1wWNL74LCk98FhSe8Dw1LofXBY0vvgsKT3wWFJ74PDUsgShiW9Dw5Leh8clvQ+OCzpfXBY0vvAsAz0Pjgs6X1wWNL74LCk98FhKWQJw5LeB4clvQ8OS3ofHJb0Pjgs6X1gWDb+B4TJcglLeh8clvQ+OCzpfXBYClnCsKT3wWFJ74PDkt4HhyW9Dw5Leh8YloneB4clvQ8OS3ofHJb0PjgshSxhWNL74LCk98FhSe+Dw5LeB4clvQ8My0zvg8OS3geHJb0PDkt6HxyWQpYwLOl9cFjS++CwpPfBYUnvg8OS3geGZaH3wWFJ74PDkt4HhyW9Dw5LIUsYlvQ+OCzpfXBY0vvgsKT3wWFJ74PC0hl6HxyW9D44LOl9cFjS++CwFLKEYUnvg8OS3geHJb0PDkt6HxyW9D4wLC29Dw5Leh8clvQ+OCzpfXBYClnCsKT3wWFJ74PDkt4HhyW9Dw5Leh8Ylo7eB4clvQ8OS3ofHJb0PjgshSxhWNL74LCk98FhSe+Dw5LeB4clvQ8MS0/vg8OS3geHJb0PDkt6HxyWQpYwLOl9cFjS++CwpPfBYUnvg8OS3geGpdD74LCk98FhSe+Dw5LeB4elkCUMS3ofHJb0Pjgs6X1wWNL74LCk94FhGeh9cFjS++CwpPfBYUnvg8NSyBKGJb0PDkt6HxyW9D44LOl9cFjS+8CwjPQ+OCzpfXBY0vvgsKT3wWEpZAnDkt4HhyW9Dw5Leh8clvQ+OCzpfWBYJnofHJb0Pjgs6X1wWNL74LAUsoRhSe+Dw5LeB4clvQ8OS3ofHJb0PjAsM70PDkt6HxyW9D44LOl9cFgKWcKwpPfBYUnvg8OS3geHJb0PDkt6HxiWhd4HhyW9Dw5Leh8clvQ+OCyFLGFY0vvgsKT3wWFJ74PDkt4HhyW9DwpLb+h9cFjS++CwpPfBYUnvg8NSyBKGJb0PDkt6HxyW9D44LOl9cFjS+8CwtPQ+OCzpfXBY0vvgsKT3wWEpZAnDkt4HhyW9Dw5Leh8clvQ+OCzpfWBYuod7n1DyNZYvCT1aXjjv3Ng62ztfLuvc+FV0/uzbld1M6yBxWPwg+fR9OX4dpl+XOGL1MZ5WxoW5xgeTPjQ+XIycN35ZRcdVrLCKnqtYYRWFq1hhFQNX8XtWUbwdGoukySpGrmKFVUxcxe9axfFM1MtZ1rONXUlDZFdyudPYj2etzhc34ZPJZ1s+IsMM3eEK43ZjiX7Ach43/ouyECUISm+IEgUlL1K3RpmHyC6YsgYlr5RhUPJyfWOUIY8/sNHZy9NSL+TTNB8qhrb5UF60zYdaZGM+yY1aJEW53djmPDguW8zEoXg6FCCYtCgdwXTGj5vhJvgVVwRC5bJP7vQz++ROmdMV95hH7sWu4U7zs0/uQu61uXtjhxX3xt2JfGcjWmiUNuZTbctLKJ9gUNJTbY2y1paX0FLBoKSj2hjlbbsf6JLa5kPn0zYfupm2+dChbMyn4oZXEMLEgUmL0hHMersZgcpln9zpZ/bJnTKnK+61drECzc8uuUcaJQXuZXxy2bp1592RRqltPjRK2/Kpd+oTKZ9gUApRoqCkeIJBSZe0Ncpqlw3UQzAoaXy+C2WQIWt/viAV7lu+ff9qpJnZmE+1mx4TZQsMSnoZGJRUOFujrHX/aqLCgUEpRLktytu36iV6mbb5ULa0zYcGpW0+1CIb86l492qiQ8GBmWlROoJZb/soU7nskzv9zD65U+Z0xb3WhmQWct8ldxql6txrvkgp0yhtzKfallemfIJBSU+1NcpaW16ZlgoFZaGj2hjlbbtf6JLa5kPn0zYfupm2+Qj5bMun4oZXoRgBgkmL0hHMersZhcpln9zpZ/bJnTKnK+6VdrHE0PzskzuNkgL3ai/qEUOj1DYfGqVt+VQ79REjRImCkuoJBiXFEwxKuqStUVa7bKAegkH5cOMjdkxdsusFpTdD1t5bubwOsIarWGEVLVexwio6rmKFVfRcxe96V6Afq5ZImqyicBUrrGLgKtZ+b2XFlx2KjeSzLZ9aDyaITUSJgjITJQpKXqRujbLSMybieKUMg5KX6xujvHk7vTiKgLb5UDG0zUfIp2k+1CIb86n3hIk4OhQgmLQoHcGsd4uHo3LZJ3f6mV1y95Q5XXGvddOQp/nZJ3capercK77sUDyN0sZ8qm15eSFKFJT0VFujrLXl5WmpYFDSUW2M8rbd93RJbfOh82maj9DNtM2HDmVjPhU3vIRiBAgmLUpHMOvtZoiQ+y6508/skztlTlfca+1iCc3PPrnTKClwr/cyPaFRappPoFHalk+9U59A+QSDkuoJBiXFEwxKIcqNUda6bAjUQzAoaXy+C6XeH2m/ff9qoJnZmE+1mx4DZQsMSnoZFJSRCmdrlLXuX41UODAoqXA2Rnn7Vr1IL9M2HyGfpvnQoLTNh1pkYz4V716NdChAMGlROoJZb/soUrnsknuin9knd8qcrrjX2pBMND/75E6jVJ17zRcpJSGfbflU2/JKlE8wKOmptkZZa8sr0VLBoKSj2hjlbbuf6JKa5pPpfNrmQzfTNh86lI35VNzwyhQjQDCFMPuBWW83I1O57JM7/cw+uVPmdMW91i5WpvnZJ3caJQXu9V7UU2iU2uZDo7Qtn3qnPoXyCQYl1RMMSiFKFJR0SVujrHXZUKiHYFA+3PhEO/6gRF9eoXxJKLeW0MOvkUMeW0cxlwkFY1pL6OFXQckNX2mXbZkm5FpLyLeWkLSW0OzZwXBgmtupxDD+xMVQ8im4Cf8Gj2uCRzf85Mco8VXwmXkWOyyhK/70M26jn60QxZ/KSbzT2pqUhqQP/5xP0b3Ns/JiLFY2p1N0PzdNa80Y20o5b/yyhIlLuHYJM5dwzRIePvzy1/sPH97/8fOHT7++/fL+08fPx67m+D9u9ic/jm+yTOerIC9AnF/eRZZ3Ccu7xOVd0vIueXmXsriLN8u7zJ5OpPExn/Ov3NDFLe/il3eR5V1m6efxOYp8dkk9dInLu6TlXfLyLrP0cxx+aXKyl13m/3Tl7S52eRe3vMss/ZwHlLlMUM7/UbHbXcLyLnF5l3S7SzHT6eflXcriLvN/ZqLY4TtW3OQ7Nv/nDG53ccu7+OVdZukXGXeHzPlJrczVthuNjwME7QGi9gBJe4CsPUBRHmD+rZ01B7DaAzjtAbz2ANpHctQ+kqP2kRy1j+SofSRH7SM5aR/JSftITuuPgzC+nyGcmWVv3Ev8oBx//Xcojheb0cRJ/KVfoUOfbH6gj13epyivbVn/CxPHu9/i2dnUED8px8/K8YtufGuM9gC2wtFTxgFkOoDTHsBrDyDaAwTtAaL2AEl7AOUfeWuK8gDWaA9gtQdw2gN47QFEe4CgPUDUHiBpD6B9JFvtI9lpH8lO+0h22keyUz2SD5/sseX8T6oNYbgn5rCpfNoEnr0n5nRb97lQvXJjTjo9x/H6BpqZe20OWXxrLDa9upno5Tvaa+Ku18R9r4lLr4mHXhOPvSae9BI/hs+64YtqeLe+VhQ3bFYXXx5G1dleE3e9Ju57TVx6TTz0mnjUS/z52t089cJn3fBFNbw3uuGtbninG97rhhfd8EE3/Pov5uECdny0xDh/MYAY7QHW47XudDumS9P3ZWvPICsPEGyFAfLpBteSLgdw2gN47QFEe4CgPUCsMEBypwHy5QBJe4CsPUBRHiAa7QGs9gBOe4AKR7IdXwxz2GW4fGVmFO0BgvYAUXuApD1A1h6gKA+QKhzJNvtxgHJ54pWs9gCifF6UgvYAUXuApD1AUR4gG+0BrPYATnsA3euDwwd3bDq/AZfi6UGYOyrm9Di/+DtPr6tvv7Wftuszbd9n2tJn2qHPtGOfaSettJ+vbbjVCl4Ug7vVdSEOO3kSL2ubs5rBnWZwrxl89e9VGUSLlAnQoBk8agZfe4QGOzQNNl4Gz5rBi2JwbzSDr/0qBj+I3eAnwYNm8LVAo5zezmAugxfF4KK5LLL2CA1jEQ2vX5b1fG2roVbwrBm8KAYPRjO41QzuNIP7esHT5U1CQTSDrz5Cw3iE5knw1UeopOvBk2bwrBl89U+uHc64or3cfIpGM7jVDO40g689QqMZH1izk50U0QweNINHzeBJM3jWDF4UgydTL7i7/J4nqxl89RFqhv3I6CfBV9fQIteDi2bwoBl89RF64/w8Jc3gmpctSfOyJRvN4FYzuNMM7tWCHz74Y8MrD09FGTeIz18BODuIFTvcZGfFXQqpK0+uLBsglHGAfKdxU4+5oM0y7mKWaRezzLuYZdnDLJ3ZxSxtI7N8vvpU0za5+IZykcfm0tSDSmizjLuYZdrFLPMuZln2MEtvGpnl89XH47bJxTWUi28ol1Zq8vPVR/q2yaWV+vZ87ZXtG+XSSq14vvqM5ia5yIOP6TtPTkpT2Tz4+3v7vvdgWlqbYJvK5uHfmx94NHSrbGJT2aSmsslNZVMenc0PPPu6VTa2qWxcU9n4prKRprIJTWXz6N/iH3lseKtsclPZlJaySaapbGxT2bimsnn0b/GPPDO+VTZNXU+l3FQ2paVssm0qG9dUNr6pbKSpbEI72Rw+yLHpVSM6dCynftbfFpc3uuTlXcrCLl8PH//79q/3b3/58O74V2GP//Xvj78OfyT28PHL//78978cGv8f",
      "brillig_names": [
        "get_public_data_witness",
        "lt_32_hint",
        "decompose_hint",
        "lte_16_hint",
        "pack_returns",
        "directive_integer_quotient",
        "directive_invert"
      ]
    },
    {
      "name": "private_get_decimals",
      "is_unconstrained": false,
      "custom_attributes": [
        "aztec(private)",
        "aztec(view)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "call_context",
                  "type": {
                    "fields": [
                      {
                        "name": "msg_sender",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "storage_contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "function_selector",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::function_selector::FunctionSelector"
                        }
                      },
                      {
                        "name": "is_delegate_call",
                        "type": {
                          "kind": "boolean"
                        }
                      },
                      {
                        "name": "is_static_call",
                        "type": {
                          "kind": "boolean"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::call_context::CallContext"
                  }
                },
                {
                  "name": "historical_header",
                  "type": {
                    "fields": [
                      {
                        "name": "last_archive",
                        "type": {
                          "fields": [
                            {
                              "name": "root",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "next_available_leaf_index",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                        }
                      },
                      {
                        "name": "content_commitment",
                        "type": {
                          "fields": [
                            {
                              "name": "num_txs",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "txs_effects_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "in_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "out_hash",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::content_commitment::ContentCommitment"
                        }
                      },
                      {
                        "name": "state",
                        "type": {
                          "fields": [
                            {
                              "name": "l1_to_l2_message_tree",
                              "type": {
                                "fields": [
                                  {
                                    "name": "root",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "next_available_leaf_index",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                              }
                            },
                            {
                              "name": "partial",
                              "type": {
                                "fields": [
                                  {
                                    "name": "note_hash_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "nullifier_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "public_data_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::partial_state_reference::PartialStateReference"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::state_reference::StateReference"
                        }
                      },
                      {
                        "name": "global_variables",
                        "type": {
                          "fields": [
                            {
                              "name": "chain_id",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "version",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "block_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "slot_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "timestamp",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 64
                              }
                            },
                            {
                              "name": "coinbase",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::eth_address::EthAddress"
                              }
                            },
                            {
                              "name": "fee_recipient",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "gas_fees",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::global_variables::GlobalVariables"
                        }
                      },
                      {
                        "name": "total_fees",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::header::Header"
                  }
                },
                {
                  "name": "tx_context",
                  "type": {
                    "fields": [
                      {
                        "name": "chain_id",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "version",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "gas_settings",
                        "type": {
                          "fields": [
                            {
                              "name": "gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "teardown_gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "max_fees_per_gas",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            },
                            {
                              "name": "inclusion_fee",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::gas_settings::GasSettings"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::transaction::tx_context::TxContext"
                  }
                },
                {
                  "name": "start_side_effect_counter",
                  "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 32
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "fields": [
              {
                "name": "call_context",
                "type": {
                  "fields": [
                    {
                      "name": "msg_sender",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "storage_contract_address",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "function_selector",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::function_selector::FunctionSelector"
                      }
                    },
                    {
                      "name": "is_delegate_call",
                      "type": {
                        "kind": "boolean"
                      }
                    },
                    {
                      "name": "is_static_call",
                      "type": {
                        "kind": "boolean"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::call_context::CallContext"
                }
              },
              {
                "name": "args_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "returns_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "min_revertible_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "is_fee_payer",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "max_block_number",
                "type": {
                  "fields": [
                    {
                      "name": "_opt",
                      "type": {
                        "fields": [
                          {
                            "name": "_is_some",
                            "type": {
                              "kind": "boolean"
                            }
                          },
                          {
                            "name": "_value",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "std::option::Option"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::max_block_number::MaxBlockNumber"
                }
              },
              {
                "name": "note_hash_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "nullifier_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "key_validation_requests_and_generators",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "request",
                        "type": {
                          "fields": [
                            {
                              "name": "pk_m",
                              "type": {
                                "fields": [
                                  {
                                    "name": "x",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "y",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "is_infinite",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                              }
                            },
                            {
                              "name": "sk_app",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"
                        }
                      },
                      {
                        "name": "sk_app_generator",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"
                  }
                }
              },
              {
                "name": "note_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::note_hash::NoteHash"
                  }
                }
              },
              {
                "name": "nullifiers",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "note_hash",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::nullifier::Nullifier"
                  }
                }
              },
              {
                "name": "private_call_requests",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "call_context",
                        "type": {
                          "fields": [
                            {
                              "name": "msg_sender",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "storage_contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "function_selector",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::function_selector::FunctionSelector"
                              }
                            },
                            {
                              "name": "is_delegate_call",
                              "type": {
                                "kind": "boolean"
                              }
                            },
                            {
                              "name": "is_static_call",
                              "type": {
                                "kind": "boolean"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::call_context::CallContext"
                        }
                      },
                      {
                        "name": "args_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "returns_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "start_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "end_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::private_call_request::PrivateCallRequest"
                  }
                }
              },
              {
                "name": "public_call_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "item",
                        "type": {
                          "fields": [
                            {
                              "name": "contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "call_context",
                              "type": {
                                "fields": [
                                  {
                                    "name": "msg_sender",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "storage_contract_address",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "function_selector",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::function_selector::FunctionSelector"
                                    }
                                  },
                                  {
                                    "name": "is_delegate_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  },
                                  {
                                    "name": "is_static_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::call_context::CallContext"
                              }
                            },
                            {
                              "name": "args_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "returns_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "revert_code",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 8
                              }
                            },
                            {
                              "name": "start_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "end_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                  }
                }
              },
              {
                "name": "public_teardown_call_request",
                "type": {
                  "fields": [
                    {
                      "name": "item",
                      "type": {
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "call_context",
                            "type": {
                              "fields": [
                                {
                                  "name": "msg_sender",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "storage_contract_address",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "function_selector",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::function_selector::FunctionSelector"
                                  }
                                },
                                {
                                  "name": "is_delegate_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                },
                                {
                                  "name": "is_static_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::call_context::CallContext"
                            }
                          },
                          {
                            "name": "args_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "returns_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "revert_code",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 8
                            }
                          },
                          {
                            "name": "start_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "end_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                      }
                    },
                    {
                      "name": "counter",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                }
              },
              {
                "name": "l2_to_l1_msgs",
                "type": {
                  "kind": "array",
                  "length": 2,
                  "type": {
                    "fields": [
                      {
                        "name": "recipient",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::eth_address::EthAddress"
                        }
                      },
                      {
                        "name": "content",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::messaging::l2_to_l1_message::L2ToL1Message"
                  }
                }
              },
              {
                "name": "start_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "end_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "note_encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "note_hash_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::NoteLogHash"
                  }
                }
              },
              {
                "name": "encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "randomness",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::EncryptedLogHash"
                  }
                }
              },
              {
                "name": "unencrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::LogHash"
                  }
                }
              },
              {
                "name": "historical_header",
                "type": {
                  "fields": [
                    {
                      "name": "last_archive",
                      "type": {
                        "fields": [
                          {
                            "name": "root",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "next_available_leaf_index",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                      }
                    },
                    {
                      "name": "content_commitment",
                      "type": {
                        "fields": [
                          {
                            "name": "num_txs",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "txs_effects_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "in_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "out_hash",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::content_commitment::ContentCommitment"
                      }
                    },
                    {
                      "name": "state",
                      "type": {
                        "fields": [
                          {
                            "name": "l1_to_l2_message_tree",
                            "type": {
                              "fields": [
                                {
                                  "name": "root",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "next_available_leaf_index",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                            }
                          },
                          {
                            "name": "partial",
                            "type": {
                              "fields": [
                                {
                                  "name": "note_hash_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "nullifier_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "public_data_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::partial_state_reference::PartialStateReference"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::state_reference::StateReference"
                      }
                    },
                    {
                      "name": "global_variables",
                      "type": {
                        "fields": [
                          {
                            "name": "chain_id",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "version",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "block_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "slot_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "timestamp",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 64
                            }
                          },
                          {
                            "name": "coinbase",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::eth_address::EthAddress"
                            }
                          },
                          {
                            "name": "fee_recipient",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "gas_fees",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::global_variables::GlobalVariables"
                      }
                    },
                    {
                      "name": "total_fees",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::header::Header"
                }
              },
              {
                "name": "tx_context",
                "type": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "version",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "gas_settings",
                      "type": {
                        "fields": [
                          {
                            "name": "gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "teardown_gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "max_fees_per_gas",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          },
                          {
                            "name": "inclusion_fee",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::gas_settings::GasSettings"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::transaction::tx_context::TxContext"
                }
              }
            ],
            "kind": "struct",
            "path": "protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"
          },
          "visibility": "public"
        }
      },
      "bytecode": "",
      "debug_symbols": "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",
      "brillig_names": [
        "get_public_data_witness",
        "lt_32_hint",
        "decompose_hint",
        "lte_16_hint",
        "pack_returns",
        "directive_integer_quotient",
        "directive_invert"
      ]
    },
    {
      "name": "privately_mint_private_note",
      "is_unconstrained": false,
      "custom_attributes": [
        "aztec(private)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "call_context",
                  "type": {
                    "fields": [
                      {
                        "name": "msg_sender",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "storage_contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "function_selector",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::function_selector::FunctionSelector"
                        }
                      },
                      {
                        "name": "is_delegate_call",
                        "type": {
                          "kind": "boolean"
                        }
                      },
                      {
                        "name": "is_static_call",
                        "type": {
                          "kind": "boolean"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::call_context::CallContext"
                  }
                },
                {
                  "name": "historical_header",
                  "type": {
                    "fields": [
                      {
                        "name": "last_archive",
                        "type": {
                          "fields": [
                            {
                              "name": "root",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "next_available_leaf_index",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                        }
                      },
                      {
                        "name": "content_commitment",
                        "type": {
                          "fields": [
                            {
                              "name": "num_txs",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "txs_effects_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "in_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "out_hash",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::content_commitment::ContentCommitment"
                        }
                      },
                      {
                        "name": "state",
                        "type": {
                          "fields": [
                            {
                              "name": "l1_to_l2_message_tree",
                              "type": {
                                "fields": [
                                  {
                                    "name": "root",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "next_available_leaf_index",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                              }
                            },
                            {
                              "name": "partial",
                              "type": {
                                "fields": [
                                  {
                                    "name": "note_hash_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "nullifier_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "public_data_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::partial_state_reference::PartialStateReference"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::state_reference::StateReference"
                        }
                      },
                      {
                        "name": "global_variables",
                        "type": {
                          "fields": [
                            {
                              "name": "chain_id",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "version",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "block_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "slot_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "timestamp",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 64
                              }
                            },
                            {
                              "name": "coinbase",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::eth_address::EthAddress"
                              }
                            },
                            {
                              "name": "fee_recipient",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "gas_fees",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::global_variables::GlobalVariables"
                        }
                      },
                      {
                        "name": "total_fees",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::header::Header"
                  }
                },
                {
                  "name": "tx_context",
                  "type": {
                    "fields": [
                      {
                        "name": "chain_id",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "version",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "gas_settings",
                        "type": {
                          "fields": [
                            {
                              "name": "gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "teardown_gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "max_fees_per_gas",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            },
                            {
                              "name": "inclusion_fee",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::gas_settings::GasSettings"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::transaction::tx_context::TxContext"
                  }
                },
                {
                  "name": "start_side_effect_counter",
                  "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 32
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "fields": [
              {
                "name": "call_context",
                "type": {
                  "fields": [
                    {
                      "name": "msg_sender",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "storage_contract_address",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "function_selector",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::function_selector::FunctionSelector"
                      }
                    },
                    {
                      "name": "is_delegate_call",
                      "type": {
                        "kind": "boolean"
                      }
                    },
                    {
                      "name": "is_static_call",
                      "type": {
                        "kind": "boolean"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::call_context::CallContext"
                }
              },
              {
                "name": "args_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "returns_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "min_revertible_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "is_fee_payer",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "max_block_number",
                "type": {
                  "fields": [
                    {
                      "name": "_opt",
                      "type": {
                        "fields": [
                          {
                            "name": "_is_some",
                            "type": {
                              "kind": "boolean"
                            }
                          },
                          {
                            "name": "_value",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "std::option::Option"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::max_block_number::MaxBlockNumber"
                }
              },
              {
                "name": "note_hash_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "nullifier_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "key_validation_requests_and_generators",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "request",
                        "type": {
                          "fields": [
                            {
                              "name": "pk_m",
                              "type": {
                                "fields": [
                                  {
                                    "name": "x",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "y",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "is_infinite",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                              }
                            },
                            {
                              "name": "sk_app",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"
                        }
                      },
                      {
                        "name": "sk_app_generator",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"
                  }
                }
              },
              {
                "name": "note_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::note_hash::NoteHash"
                  }
                }
              },
              {
                "name": "nullifiers",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "note_hash",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::nullifier::Nullifier"
                  }
                }
              },
              {
                "name": "private_call_requests",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "call_context",
                        "type": {
                          "fields": [
                            {
                              "name": "msg_sender",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "storage_contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "function_selector",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::function_selector::FunctionSelector"
                              }
                            },
                            {
                              "name": "is_delegate_call",
                              "type": {
                                "kind": "boolean"
                              }
                            },
                            {
                              "name": "is_static_call",
                              "type": {
                                "kind": "boolean"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::call_context::CallContext"
                        }
                      },
                      {
                        "name": "args_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "returns_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "start_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "end_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::private_call_request::PrivateCallRequest"
                  }
                }
              },
              {
                "name": "public_call_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "item",
                        "type": {
                          "fields": [
                            {
                              "name": "contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "call_context",
                              "type": {
                                "fields": [
                                  {
                                    "name": "msg_sender",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "storage_contract_address",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "function_selector",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::function_selector::FunctionSelector"
                                    }
                                  },
                                  {
                                    "name": "is_delegate_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  },
                                  {
                                    "name": "is_static_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::call_context::CallContext"
                              }
                            },
                            {
                              "name": "args_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "returns_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "revert_code",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 8
                              }
                            },
                            {
                              "name": "start_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "end_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                  }
                }
              },
              {
                "name": "public_teardown_call_request",
                "type": {
                  "fields": [
                    {
                      "name": "item",
                      "type": {
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "call_context",
                            "type": {
                              "fields": [
                                {
                                  "name": "msg_sender",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "storage_contract_address",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "function_selector",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::function_selector::FunctionSelector"
                                  }
                                },
                                {
                                  "name": "is_delegate_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                },
                                {
                                  "name": "is_static_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::call_context::CallContext"
                            }
                          },
                          {
                            "name": "args_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "returns_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "revert_code",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 8
                            }
                          },
                          {
                            "name": "start_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "end_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                      }
                    },
                    {
                      "name": "counter",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                }
              },
              {
                "name": "l2_to_l1_msgs",
                "type": {
                  "kind": "array",
                  "length": 2,
                  "type": {
                    "fields": [
                      {
                        "name": "recipient",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::eth_address::EthAddress"
                        }
                      },
                      {
                        "name": "content",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::messaging::l2_to_l1_message::L2ToL1Message"
                  }
                }
              },
              {
                "name": "start_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "end_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "note_encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "note_hash_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::NoteLogHash"
                  }
                }
              },
              {
                "name": "encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "randomness",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::EncryptedLogHash"
                  }
                }
              },
              {
                "name": "unencrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::LogHash"
                  }
                }
              },
              {
                "name": "historical_header",
                "type": {
                  "fields": [
                    {
                      "name": "last_archive",
                      "type": {
                        "fields": [
                          {
                            "name": "root",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "next_available_leaf_index",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                      }
                    },
                    {
                      "name": "content_commitment",
                      "type": {
                        "fields": [
                          {
                            "name": "num_txs",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "txs_effects_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "in_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "out_hash",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::content_commitment::ContentCommitment"
                      }
                    },
                    {
                      "name": "state",
                      "type": {
                        "fields": [
                          {
                            "name": "l1_to_l2_message_tree",
                            "type": {
                              "fields": [
                                {
                                  "name": "root",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "next_available_leaf_index",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                            }
                          },
                          {
                            "name": "partial",
                            "type": {
                              "fields": [
                                {
                                  "name": "note_hash_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "nullifier_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "public_data_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::partial_state_reference::PartialStateReference"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::state_reference::StateReference"
                      }
                    },
                    {
                      "name": "global_variables",
                      "type": {
                        "fields": [
                          {
                            "name": "chain_id",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "version",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "block_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "slot_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "timestamp",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 64
                            }
                          },
                          {
                            "name": "coinbase",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::eth_address::EthAddress"
                            }
                          },
                          {
                            "name": "fee_recipient",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "gas_fees",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::global_variables::GlobalVariables"
                      }
                    },
                    {
                      "name": "total_fees",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::header::Header"
                }
              },
              {
                "name": "tx_context",
                "type": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "version",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "gas_settings",
                      "type": {
                        "fields": [
                          {
                            "name": "gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "teardown_gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "max_fees_per_gas",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          },
                          {
                            "name": "inclusion_fee",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::gas_settings::GasSettings"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::transaction::tx_context::TxContext"
                }
              }
            ],
            "kind": "struct",
            "path": "protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"
          },
          "visibility": "public"
        }
      },
      "bytecode": "",
      "debug_symbols": "",
      "brillig_names": [
        "get_public_data_witness",
        "lt_32_hint",
        "decompose_hint",
        "lte_16_hint",
        "key_registry_get_stored_keys_hint",
        "get_public_keys_and_partial_address",
        "unsafe_rand",
        "notify_created_note",
        "get_key_validation_request",
        "emit_encrypted_note_log",
        "pack_arguments",
        "enqueue_public_function_call_internal",
        "directive_integer_quotient",
        "directive_invert"
      ]
    },
    {
      "name": "burn",
      "is_unconstrained": false,
      "custom_attributes": [
        "aztec(private)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "call_context",
                  "type": {
                    "fields": [
                      {
                        "name": "msg_sender",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "storage_contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "function_selector",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::function_selector::FunctionSelector"
                        }
                      },
                      {
                        "name": "is_delegate_call",
                        "type": {
                          "kind": "boolean"
                        }
                      },
                      {
                        "name": "is_static_call",
                        "type": {
                          "kind": "boolean"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::call_context::CallContext"
                  }
                },
                {
                  "name": "historical_header",
                  "type": {
                    "fields": [
                      {
                        "name": "last_archive",
                        "type": {
                          "fields": [
                            {
                              "name": "root",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "next_available_leaf_index",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 32
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                        }
                      },
                      {
                        "name": "content_commitment",
                        "type": {
                          "fields": [
                            {
                              "name": "num_txs",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "txs_effects_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "in_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "out_hash",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::content_commitment::ContentCommitment"
                        }
                      },
                      {
                        "name": "state",
                        "type": {
                          "fields": [
                            {
                              "name": "l1_to_l2_message_tree",
                              "type": {
                                "fields": [
                                  {
                                    "name": "root",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "next_available_leaf_index",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                              }
                            },
                            {
                              "name": "partial",
                              "type": {
                                "fields": [
                                  {
                                    "name": "note_hash_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "nullifier_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  },
                                  {
                                    "name": "public_data_tree",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "root",
                                          "type": {
                                            "kind": "field"
                                          }
                                        },
                                        {
                                          "name": "next_available_leaf_index",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::partial_state_reference::PartialStateReference"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::state_reference::StateReference"
                        }
                      },
                      {
                        "name": "global_variables",
                        "type": {
                          "fields": [
                            {
                              "name": "chain_id",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "version",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "block_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "slot_number",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "timestamp",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 64
                              }
                            },
                            {
                              "name": "coinbase",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::eth_address::EthAddress"
                              }
                            },
                            {
                              "name": "fee_recipient",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "gas_fees",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::global_variables::GlobalVariables"
                        }
                      },
                      {
                        "name": "total_fees",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::header::Header"
                  }
                },
                {
                  "name": "tx_context",
                  "type": {
                    "fields": [
                      {
                        "name": "chain_id",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "version",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "gas_settings",
                        "type": {
                          "fields": [
                            {
                              "name": "gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "teardown_gas_limits",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "max_fees_per_gas",
                              "type": {
                                "fields": [
                                  {
                                    "name": "fee_per_da_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "fee_per_l2_gas",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas_fees::GasFees"
                              }
                            },
                            {
                              "name": "inclusion_fee",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::gas_settings::GasSettings"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::transaction::tx_context::TxContext"
                  }
                },
                {
                  "name": "start_side_effect_counter",
                  "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 32
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "from",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "amount",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          },
          {
            "name": "nonce",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "fields": [
              {
                "name": "call_context",
                "type": {
                  "fields": [
                    {
                      "name": "msg_sender",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "storage_contract_address",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::address::aztec_address::AztecAddress"
                      }
                    },
                    {
                      "name": "function_selector",
                      "type": {
                        "fields": [
                          {
                            "name": "inner",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::function_selector::FunctionSelector"
                      }
                    },
                    {
                      "name": "is_delegate_call",
                      "type": {
                        "kind": "boolean"
                      }
                    },
                    {
                      "name": "is_static_call",
                      "type": {
                        "kind": "boolean"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::call_context::CallContext"
                }
              },
              {
                "name": "args_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "returns_hash",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "min_revertible_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "is_fee_payer",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "max_block_number",
                "type": {
                  "fields": [
                    {
                      "name": "_opt",
                      "type": {
                        "fields": [
                          {
                            "name": "_is_some",
                            "type": {
                              "kind": "boolean"
                            }
                          },
                          {
                            "name": "_value",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "std::option::Option"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::max_block_number::MaxBlockNumber"
                }
              },
              {
                "name": "note_hash_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "nullifier_read_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::read_request::ReadRequest"
                  }
                }
              },
              {
                "name": "key_validation_requests_and_generators",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "request",
                        "type": {
                          "fields": [
                            {
                              "name": "pk_m",
                              "type": {
                                "fields": [
                                  {
                                    "name": "x",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "y",
                                    "type": {
                                      "kind": "field"
                                    }
                                  },
                                  {
                                    "name": "is_infinite",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                              }
                            },
                            {
                              "name": "sk_app",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"
                        }
                      },
                      {
                        "name": "sk_app_generator",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"
                  }
                }
              },
              {
                "name": "note_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::note_hash::NoteHash"
                  }
                }
              },
              {
                "name": "nullifiers",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "note_hash",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::nullifier::Nullifier"
                  }
                }
              },
              {
                "name": "private_call_requests",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "contract_address",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::aztec_address::AztecAddress"
                        }
                      },
                      {
                        "name": "call_context",
                        "type": {
                          "fields": [
                            {
                              "name": "msg_sender",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "storage_contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "function_selector",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::function_selector::FunctionSelector"
                              }
                            },
                            {
                              "name": "is_delegate_call",
                              "type": {
                                "kind": "boolean"
                              }
                            },
                            {
                              "name": "is_static_call",
                              "type": {
                                "kind": "boolean"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::call_context::CallContext"
                        }
                      },
                      {
                        "name": "args_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "returns_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "start_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "end_side_effect_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::private_call_request::PrivateCallRequest"
                  }
                }
              },
              {
                "name": "public_call_requests",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "item",
                        "type": {
                          "fields": [
                            {
                              "name": "contract_address",
                              "type": {
                                "fields": [
                                  {
                                    "name": "inner",
                                    "type": {
                                      "kind": "field"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::address::aztec_address::AztecAddress"
                              }
                            },
                            {
                              "name": "call_context",
                              "type": {
                                "fields": [
                                  {
                                    "name": "msg_sender",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "storage_contract_address",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "field"
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::address::aztec_address::AztecAddress"
                                    }
                                  },
                                  {
                                    "name": "function_selector",
                                    "type": {
                                      "fields": [
                                        {
                                          "name": "inner",
                                          "type": {
                                            "kind": "integer",
                                            "sign": "unsigned",
                                            "width": 32
                                          }
                                        }
                                      ],
                                      "kind": "struct",
                                      "path": "protocol_types::abis::function_selector::FunctionSelector"
                                    }
                                  },
                                  {
                                    "name": "is_delegate_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  },
                                  {
                                    "name": "is_static_call",
                                    "type": {
                                      "kind": "boolean"
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::call_context::CallContext"
                              }
                            },
                            {
                              "name": "args_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "returns_hash",
                              "type": {
                                "kind": "field"
                              }
                            },
                            {
                              "name": "revert_code",
                              "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 8
                              }
                            },
                            {
                              "name": "start_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            },
                            {
                              "name": "end_gas_left",
                              "type": {
                                "fields": [
                                  {
                                    "name": "da_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  },
                                  {
                                    "name": "l2_gas",
                                    "type": {
                                      "kind": "integer",
                                      "sign": "unsigned",
                                      "width": 32
                                    }
                                  }
                                ],
                                "kind": "struct",
                                "path": "protocol_types::abis::gas::Gas"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                  }
                }
              },
              {
                "name": "public_teardown_call_request",
                "type": {
                  "fields": [
                    {
                      "name": "item",
                      "type": {
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "call_context",
                            "type": {
                              "fields": [
                                {
                                  "name": "msg_sender",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "storage_contract_address",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "field"
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::address::aztec_address::AztecAddress"
                                  }
                                },
                                {
                                  "name": "function_selector",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "inner",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::function_selector::FunctionSelector"
                                  }
                                },
                                {
                                  "name": "is_delegate_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                },
                                {
                                  "name": "is_static_call",
                                  "type": {
                                    "kind": "boolean"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::call_context::CallContext"
                            }
                          },
                          {
                            "name": "args_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "returns_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "revert_code",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 8
                            }
                          },
                          {
                            "name": "start_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "end_gas_left",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::public_call_stack_item_compressed::PublicCallStackItemCompressed"
                      }
                    },
                    {
                      "name": "counter",
                      "type": {
                        "kind": "integer",
                        "sign": "unsigned",
                        "width": 32
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::abis::public_call_request::PublicCallRequest"
                }
              },
              {
                "name": "l2_to_l1_msgs",
                "type": {
                  "kind": "array",
                  "length": 2,
                  "type": {
                    "fields": [
                      {
                        "name": "recipient",
                        "type": {
                          "fields": [
                            {
                              "name": "inner",
                              "type": {
                                "kind": "field"
                              }
                            }
                          ],
                          "kind": "struct",
                          "path": "protocol_types::address::eth_address::EthAddress"
                        }
                      },
                      {
                        "name": "content",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::messaging::l2_to_l1_message::L2ToL1Message"
                  }
                }
              },
              {
                "name": "start_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "end_side_effect_counter",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "note_encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 16,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "note_hash_counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::NoteLogHash"
                  }
                }
              },
              {
                "name": "encrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "randomness",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::EncryptedLogHash"
                  }
                }
              },
              {
                "name": "unencrypted_logs_hashes",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "fields": [
                      {
                        "name": "value",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "counter",
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 32
                        }
                      },
                      {
                        "name": "length",
                        "type": {
                          "kind": "field"
                        }
                      }
                    ],
                    "kind": "struct",
                    "path": "protocol_types::abis::log_hash::LogHash"
                  }
                }
              },
              {
                "name": "historical_header",
                "type": {
                  "fields": [
                    {
                      "name": "last_archive",
                      "type": {
                        "fields": [
                          {
                            "name": "root",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "next_available_leaf_index",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 32
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                      }
                    },
                    {
                      "name": "content_commitment",
                      "type": {
                        "fields": [
                          {
                            "name": "num_txs",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "txs_effects_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "in_hash",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "out_hash",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::content_commitment::ContentCommitment"
                      }
                    },
                    {
                      "name": "state",
                      "type": {
                        "fields": [
                          {
                            "name": "l1_to_l2_message_tree",
                            "type": {
                              "fields": [
                                {
                                  "name": "root",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "next_available_leaf_index",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                            }
                          },
                          {
                            "name": "partial",
                            "type": {
                              "fields": [
                                {
                                  "name": "note_hash_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "nullifier_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                },
                                {
                                  "name": "public_data_tree",
                                  "type": {
                                    "fields": [
                                      {
                                        "name": "root",
                                        "type": {
                                          "kind": "field"
                                        }
                                      },
                                      {
                                        "name": "next_available_leaf_index",
                                        "type": {
                                          "kind": "integer",
                                          "sign": "unsigned",
                                          "width": 32
                                        }
                                      }
                                    ],
                                    "kind": "struct",
                                    "path": "protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::partial_state_reference::PartialStateReference"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::state_reference::StateReference"
                      }
                    },
                    {
                      "name": "global_variables",
                      "type": {
                        "fields": [
                          {
                            "name": "chain_id",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "version",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "block_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "slot_number",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "timestamp",
                            "type": {
                              "kind": "integer",
                              "sign": "unsigned",
                              "width": 64
                            }
                          },
                          {
                            "name": "coinbase",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::eth_address::EthAddress"
                            }
                          },
                          {
                            "name": "fee_recipient",
                            "type": {
                              "fields": [
                                {
                                  "name": "inner",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::address::aztec_address::AztecAddress"
                            }
                          },
                          {
                            "name": "gas_fees",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::global_variables::GlobalVariables"
                      }
                    },
                    {
                      "name": "total_fees",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::header::Header"
                }
              },
              {
                "name": "tx_context",
                "type": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "version",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "gas_settings",
                      "type": {
                        "fields": [
                          {
                            "name": "gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "teardown_gas_limits",
                            "type": {
                              "fields": [
                                {
                                  "name": "da_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                },
                                {
                                  "name": "l2_gas",
                                  "type": {
                                    "kind": "integer",
                                    "sign": "unsigned",
                                    "width": 32
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas::Gas"
                            }
                          },
                          {
                            "name": "max_fees_per_gas",
                            "type": {
                              "fields": [
                                {
                                  "name": "fee_per_da_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                },
                                {
                                  "name": "fee_per_l2_gas",
                                  "type": {
                                    "kind": "field"
                                  }
                                }
                              ],
                              "kind": "struct",
                              "path": "protocol_types::abis::gas_fees::GasFees"
                            }
                          },
                          {
                            "name": "inclusion_fee",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ],
                        "kind": "struct",
                        "path": "protocol_types::abis::gas_settings::GasSettings"
                      }
                    }
                  ],
                  "kind": "struct",
                  "path": "protocol_types::transaction::tx_context::TxContext"
                }
              }
            ],
            "kind": "struct",
            "path": "protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"
          },
          "visibility": "public"
        }
      },
      "bytecode": "",
      "debug_symbols": "",
      "brillig_names": [
        "pack_arguments_array",
        "call_private_function_internal",
        "unpack_returns",
        "get_public_data_witness",
        "lt_32_hint",
        "decompose_hint",
        "lte_16_hint",
        "key_registry_get_stored_keys_hint",
        "get_public_keys_and_partial_address",
        "get_notes_internal",
        "get_collapse_hints",
        "get_key_validation_request",
        "notify_nullified_note",
        "unsafe_rand",
        "notify_created_note",
        "emit_encrypted_note_log",
        "pack_arguments",
        "enqueue_public_function_call_internal",
        "directive_invert",
        "directive_integer_quotient"
      ]
    },
    {
      "name": "public_get_decimals",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)",
        "aztec(view)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          },
          "visibility": "public"
        }
      },
      "bytecode": "H4sIAAAAAAAC/zWRMU8DMQyFX+LEcdLCggQdChMSQir0uuQEEhNtEQNCsCP+b38Vz3fipORix/787AyQEHcQOwIDJGZu0HvwU64M2Os11Pa2/6Jt+3khcoWRl5DRPemRjuUIkg5HDzx4wM3Emfby8s8sfj0gBG0IpuUBuEB5Cy4gBKN5ieRmZxyBrMVTcnXqpmIIEhKPKWqHloGu2mMtPSZz/bWj5g1uGyRX5+9QNrjrwVhbyoTRmnvItqaEsiak8lStwzxZtn12ZyW8spYmlSfvQDBrCbokXRvpz2gul80Xk50Ltmkc75xM9gSR2Li3rFSonuw6cknn3JMjjjOiR6GE5NrHYGK64DyVPG/iw9jEJ5liDPgdfYw5ON+St+iHesaEasnaFRtr1vzt+Jvers1rfjsCf6wx3TxhwXILMzfzZEYzW7hZWb1u8L0LQqIX3o5YnVanP4vfkHE6AgAA",
      "debug_symbols": "1ZrdjoIwEIXfpdde9Hc69VU2mw0qGhKCRnGTjfHdt+xSRCF0javp3CjVw/C1aXumE05slS+Om4+iWm8PbP52YuV2mdXFtvKt03nGFvuiLIvNR/9nxpsPIX/0h11WNc1Dne1rNuczllcr/+3vXRdlzuZWn2cDmVO2FTpjO6kAOaLVkoeo/tJd1HwsMjgpWjX4p1yp32dMqAeoBRe6VQqu9Eu59SOjbVUYbRcbbSHRhT4qbSLUKExQo+RyQG3+hdoP9jV2ExqeF9o+LzQ+L7T7c2ivlvwutbhLPbozaIfQ3mD8OoqsNIBuFoLrrTRrR9TGORPWDhcQmbPGmrD5+Eu8nbNSkabXpOkNaXogTW9J0yNpekeZXnHS9II0PWmvVanvmKg7ejQD+sRXLXbnD38Jt/T69asWeUevRPRkAd3B4jLyyvejYReE2SVhdkWFvacN7JowuyHMnnpuM7nHm8RzG+wKaQb1oGpkEs9tUMop+sRzmwh94nUE5O5CjxG1UzrsB744qQZ91ZQzIZN41SFCn3gOHaFPvOoQoU+86hChJ31+gdSdeZo+dWeepk/dmafpk3fmSXrSXgukvRZIey2Q9log7bVA2mstYa89++Znti+yRZm3L7Wsj9Wy945L/bX7/ceLvwE=",
      "brillig_names": [
        "public_get_decimals"
      ],
      "assert_messages": {
        "21": "Function public_get_decimals can only be called statically",
        "18": "Not initialized",
        "69": "attempt to add with overflow",
        "57": "Array index out of bounds"
      }
    },
    {
      "name": "set_admin",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          },
          {
            "name": "new_admin",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          }
        ],
        "return_type": null
      },
      "bytecode": "H4sIAAAAAAAC/11SQYsWMQx9bTptmo5e3YOKHoXx2/kQZlBZUPxcb4IX8ehd8CCCd/HX7a/ypd1FdweSmWSS916TrpAQjxC9BFaIZDqUZ+BTaBnQd4+Q9aSnT4z1NAyRFnb+hOyeSfTvMR2Yni+90B22jiKs3qKU/6PkURrRioCyxZL+FaxkTl71uCvpXi5uVIkTsCsUQ9Aiz4GnkA/hFmEvkSgeCtYgQfmpUTZIJTRNi59WN2hecDBI1sRMENKHStQvSAtebKG40hSN3rRtoZUnriUZcknGwtewQe9IFx2pMP0WZcGb84fImbJyHUd0WQ4F67JccIm2wdoWp+YC2kyENhPhI2YH7iUz/Zyd3l55yjBGmCXdp+9CPt8ISS7ElTu5Obm1l97VvNNJqpNUJ/k6SHbCqRx9fJp8k9+51MkbpF2Tc2hW71B+u6aMrQzawx5UNDdOOxPKB/FDOYifhBOdFvzZfYFT8EUqT3DsH/UeG6omtQfcqqn5veOr3zsbNu4dAX+rsV29oZGuqXo49TCqavOwkr0u+HUMQkQnPt9xdnV29RfkQUvY9gIAAA==",
      "debug_symbols": "1ZvdbuIwEIXfJddceMZ/Y15ltaqghSoSggroSivEu6/p4kBJlKnbUs3cEAdOnC+28fHYzqF5Wsxfnx/a9XKza6a/Ds1q8zjbt5t1PjscJ818265W7fPD9deNOX0Avul3L7P16XS3n233zdRMmsX6KR/ztct2tWim0R1/TxqwVWpXpfZV6lCljlVqqlKnGjWaKjVUqavqEqvqEqvqEqvqEj9el5OeLNl4FiYfOykEHNA6NCXXnEwXtRnKOSSEszrku7xTn6jjF6jBgDsrwVj3o9z0ldKOtpR24kobkFJ5Rus8Q03gi5rQYI86fQt1Luz32Dlra+6XNdwva7xf1oM9gzORSiM0KXDtO/juDulCAxQH1D6log4GAtNSfPTlL5+TdNtSrFNN71XTB9X0UTU9qaZPmumdUU0PqulRNb30HpNcR0/+lt4LbznUjZtzMvTof77lkOnoLTD0OcNu/Azm0nIsmDd6q5reqaYfHqWBwUIPyAzBnQ1lDO5s5HiiiSXraKgX03m2FwG0N1G3j5+4huqvCcN9BCToQlrgomV0XW1g9ExNB+tKyQYbuLgzgC8lm5P2tmSDF06firsENL12EYJwesIx+iibPk/FdPTQc/ZAqumTZvpoVNML7zEZelRNb1XTO9X0wr2WoRfutQy9aq+Nqr02qvZaUu21JD06CXSh51b+kutIkruOiM/PKtyZR571RC/cmRl64c7M0EuPgsfppa+MjM6xkvCVEeo2YHhyvRg+CV8ZIcQxevHz2+lCT5w7WFdmQJONvZmuJHwdZXwuPwnfs8DQO9X0wvcsMPTCV+AYeuF7Fhh64c7M0Et35lF6MNKtmcFXvfaclwp146v223zQja/acfOtdeMr9txjPv0z27az+Wpxfjlk+bp+vHpXZP/35f8vWfwP",
      "brillig_names": [
        "set_admin"
      ],
      "assert_messages": {
        "32": "Not initialized",
        "77": "Array index out of bounds",
        "106": "attempt to add with overflow",
        "58": "caller is not admin",
        "85": "attempt to add with overflow",
        "95": "Array index out of bounds"
      }
    },
    {
      "name": "public_get_symbol",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)",
        "aztec(view)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "fields": [
              {
                "name": "value",
                "type": {
                  "kind": "field"
                }
              }
            ],
            "kind": "struct",
            "path": "compressed_string::field_compressed_string::FieldCompressedString"
          },
          "visibility": "public"
        }
      },
      "bytecode": "H4sIAAAAAAAC/zWRT0sEMQzFX5s2TbvqRdA9qCdBhHV35tLBg6f9I4ggXsVPvJ/KlxkcSKZpk19e0wES4gixEzBAYqaDPoOf0jJg+3uoHezwzdgOiyHSwsRDyOQ7acuNiwkkHU+eePSEh5kz+/L2zyx+PCAEbQim5QW4RnkPLiAEY3iD5GFnHoHsxVVydeqhYggSEpcpaoeWgVu1x1p6TOb6a0fNGzw2SK7O36Js8NSDsbeUGaM195Ctwzxbdn54B81KWiFck8qrSxYszYNeEKeNuAnN9fG2xWR0hTbf/8RRZC8QiY2+ZaUk9WJvnEu6ok+O2C+IHoUSkoudgonpigNU8lz1h1H1J5liTPidfG45ON8ocJwX9ZIF1ZK1Ww6zWfPH4m9+rLbY8lgE/lhjuXnBiu1WZh7mOYxmtvKwsnvd4GsMQqI33k1Yn9fnP1/9+ysrAgAA",
      "debug_symbols": "1ZrdjsIgEIXfhWsv+BkG8FU2G1O1miZNNVo32RjffXFtsdqmrHE1zI2Cnk6/EoYDkx7ZMp8f1rOiWm32bPpxZOVmkdXFpvK942nC5ruiLIv1rPsz4+cPIX/1+21Wnbv7OtvVbMonLK+W/ttfuyrKnE0NnCY9mVOmETptglSgHNCC5G1U33RXNR+KjE6KRo3+LjfqzwkT6glqwQU0SsEVvJUbnhlto9rRdrHRFtK69hkV6Ai1FbpVW8llj1r/C7Uf7Fvsc2h8XWjzutD2daHdn0N7teQPqcVD6sGVATDgAzoXyTTEMAvRdTLNmAG1dk63ucMFRuasNrpdfHzT3s9ZqUjTA2l6TZoeSdMb0vSWNL2jTK84aXpBmp6016rUV0wLgd7qHn3iWWvD+cM38Z4e3p+1lgd6JSL0EI4h0DmzKHVhF4TZJWF20vkKie9wbCiKaAu9CgAkvsOxUo7Rp75WjtLrxHc4lrsrvY2onYJ2PfCFJtV71sT3Q+OuphPfD0XoE689ROiBNH3itYcIfeLOHKFP3ZnH6VN35nF60qcYTN6ZR+lJey2S9lok7bVI2muRtNciaa9Fwl578t2vbFdk8zJvXlBYHapF532F+nt7+ceLfwA=",
      "brillig_names": [
        "public_get_symbol"
      ],
      "assert_messages": {
        "21": "Function public_get_symbol can only be called statically",
        "18": "Not initialized",
        "66": "attempt to add with overflow",
        "54": "Array index out of bounds"
      }
    },
    {
      "name": "get_admin",
      "is_unconstrained": true,
      "custom_attributes": [
        "aztec(public)",
        "aztec(view)"
      ],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "inputs",
            "type": {
              "fields": [
                {
                  "name": "calldata_length",
                  "type": {
                    "kind": "field"
                  }
                },
                {
                  "name": "is_static_call",
                  "type": {
                    "kind": "boolean"
                  }
                }
              ],
              "kind": "struct",
              "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "kind": "field"
          },
          "visibility": "public"
        }
      },
      "bytecode": "H4sIAAAAAAAC/zWRT0sEMQzFX5s2TbvqRdA9qCdBhHV35tLBg6f9I4ggXsVPvJ/KlxkcSKZpk19e0wES4gixEzBAYqaDPoOf0jJg+3uoHezwzdgOiyHSwsRDyOQ7acuNiwkkHU+eePSEh5kz+/L2zyx+PCAEbQim5QW4RnkPLiAEY3iD5GFnHoHsxVVydeqhYggSEpcpaoeWgVu1x1p6TOb6a0fNGzw2SK7O36Js8NSDsbeUGaM195Ctwzxbdn54B81KmsM1qby6ZMHSPOgFcdqIm9BcH29bTEZXaPP9TxxF9gKR2OhbVkpSL/bGuaQr+uSI/YLoUSghudgpmJiuOEAlz1V/GFV/kinGhN/J55aD840Cx3lRL1lQLVm75TCbNX8s/ubHaostj0XgjzWWmxes2G5l5mGew2hmKw8ru9cNvsYgJHrj3YT1eX3+A4vpCkQrAgAA",
      "debug_symbols": "1ZrdjoIwEIXfpddedPo79VU2G4OKhoSgUdxkY3z3rS4FFULXuJrOjbZwGL42bU874ciW+fywnhXVarNn048jKzeLrC42la8dTxM23xVlWaxn15cZP/+AuOj326w6V/d1tqvZlE9YXi39v392VZQ5m1p1mvRkTtpG6LRtpWDEgFYJHqL6ouvUfCiycQIatfFvuVF/ThjIJ6iBg2qUwKV6K7d6pretDL3tYr0NAl1oo1Q6Qo2ggxoFFz1q/S/UvrNvsc+hzetC29eFxteFdn8O7dWCP6SGh9SDK4OWGPC14hCbaUa3bXXdCwDtgFo7F9SGg4mMWW11WHx8Ee/HrJCk6RVpek2a3pCmt6TpkTS9o0wvOWl6IE1P2mtl6ismqpYedY8+8VmL7fnDF809vXr/rEXe0kuI0PuA7TkEeDdyJPALPZCmF6TpSc9alfg+B9vUiEbVywOoxPc5KMQYfeor5ii9Tnyfg9x19BhRO6nCiuDTTbLX1sR3RePephPfFUXoE89AROgVafrEMxAR+sSdOUKfujOP06fuzOP0pM8yJnlnHqUn7bWGtNca0l5rSHutIe21hrTXGsJee/LVr2xXZPMybz5TWB2qxdVXC/X39veOF/8A",
      "brillig_names": [
        "get_admin"
      ],
      "assert_messages": {
        "21": "Function get_admin can only be called statically",
        "18": "Not initialized",
        "66": "attempt to add with overflow",
        "54": "Array index out of bounds"
      }
    },
    {
      "name": "balance_of_private",
      "is_unconstrained": true,
      "custom_attributes": [],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "owner",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "kind": "field"
          },
          "visibility": "public"
        }
      },
      "bytecode": "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",
      "debug_symbols": "5V3bjly3EfyXffbDIftC0r8SBIGcOIEAQQ5sJUBg+N8z2t05s9Jc6KXY2qrhiy3Zp6erZ9lVfc5M1/7+8I+ff/rPv/72/uM/f/nt4ce//P7w4Ze/v/v0/pePh7/9/scPDz/9+v7Dh/f/+tvL//ywff5He7z8t3+/+/j5b799evfrp4cftx8efv74j8O/D6H/fP/h54cfi/7xw9llpbbnC+tW9kvTJheutWzP15qdXjbJ9sdff3hI2zegqHq8sHruoFA5IlavZyjSt6Co5fnCtqUOCt+O74VnP0ORvwFF29/lJrWHoh5ftGznPxG5hCLXvL/Zhz9b66BJ+3viL85HqReuTXZ84dROyOUi8mZV9hfW089cUr14tR5fedtOF+f2WKcuUqctUqcvUmdZpM66SJ1tjTrztkidaZE68yJ1LjIPZV2kzkXmobzIPJRnzENp07ynaK1T6Z+8JfN8hO16ujEs+RF1pUTdGFHLRok6UaLOlKj/jMaX0kO9tR21+NcpND6Fxafw+BQlPkWNT9HCU+gWnyLFp8jxKeK7W+O7W+O7W+O7W+O7W+O7W+O72+K72+K72+K72+K72+K72+K72+K72+K72+K72+K72+O72+O72+O72+O72+O72+O72+O72+O72+O72+O7u8R3d4nv7hLf3SW+u0t8d5f47i7x3V3iu7vEd3eJ7+76Z7q71k6Kpvsz7fbieZhsdunLS+bHb/eo1dODLq+PgBIaoPwGgOwWoIvtk3I7frqRHj94+PLHXAZi6kBMe31M2wZi0kBMHoi5yOlJyt5S+vkjoS9jdCDGBmJ8IKYMxNSBmPb6mANRjQSlkaA8EiQjQToSZCNBPhJ0+Tyo2h7kXwSdk5WlnawsuX1FVmmr4RladIbL3+udmiGFZ8jhGSQ8g4ZnsPAMHp4hvKdTeE+n8J7O4T2dw3s6h/d0Du/pHN7TObync3hP5/CezuE9ncN7WsJ7WsJ7WsJ7WsJ7WsJ7WsJ7WsJ7WsJ7WsJ7WsJ7WsN7WsN7WsN7WsN7WsN7WsN7WsN7WsN7WsN7WsN72sJ72sJ72sJ72sJ72sJ72sJ72sJ72sJ72sJ72sJ72sN72sN72sN72sN72sN72sN72sN72sN72sN72sN7uoT3dAnv6RLe0yW8p0t4T5fwni7hPV3Ce7qE93QJ7+ka3tM1vKdreE/X8J6u4T1dw3u6hvd0De/pGt7TNbynW3hPt/CebuE93cJ7uoX39JXv1Wg+ZVC9nUEPH30+X6yHO8/94sMpunB1a3769qDKaV+9pQtX5yL+fPXhjy++mPgZfL7y/R4S8IkZfGYGL8zglRm8MYN3ZvCFGXxlBs+ssIlZYROzwiZmhU3MCpuYFTYxK2xiVtjErLCJWWETs8JmZoXNzAqbmRU2MytsZlbYzKywmVlhM7PCZmaFzcwKK8wKK8wKK8wKK8wKK8wKK8wKK8wKK8wKK8wKK8wKq8wKq8wKq8wKq8wKq8wKq8wKq8wKq8wKq8wKq8wKa8wKa8wKa8wKa8wKa8wKa8wKa8wKa8wKa8wKa8wK68wK68wK68wK68wK68wK68wK68wK68wK68wK68wKW5gVtjArbGFW2MKssIVZYQuzwhZmhS3MCluYFbYwK2xlVtjKrLCVWWErs8JWZoWtzApbmRW2MitsZVbYyqywjVlhG7PCNmaFbcwK25gVtjErbGNW2MassI1ZYZk9nYTZ00mYPZ2E2dNJmD2dZCNWWGH2dBJmTydh9nQSZk8nYfZ0EmZPJ2H2dBJmTydh9nQSZk8nYfZ0EmZPJ2H2dBJmTydh9nQSZk8nYfZ0EmZPJ2H2dBJmTydh9nQSZk8nYfZ0EmZPJ2H2dBJmTydh9nQSZk8nYfZ0EmZPJ2H2dBJmTydh9nQSZk8nYfZ0EmZPJ2H2dBJmTydh9nQSZk8nYfZ0EmZPJ2H2dBJmTydh9nQSZk8nYfZ0EmZPJ2H2dBJmTydh9nQSZk8nYfZ0EmZPJ2H2dBJmTydh9nQSZk8nYfZ0EmZPJ2H2dBJmTydh9nQSZk8nYfZ0EmZPJ2H2dBJmTydh9nQSZk8nYfZ0EmZPJ2H2dBJmTydh9nQSZk8nYfZ0EmZPJ2H2dBJmTydh9nQSZk8nAfd0ksOT4OerDwOwnF5b9FKpWznCzupfXv1YLLYiTy4WW8HnFgvuMTW5WOwJYXKx2BPF5GKxJ5DJxepKxWJPOJOLxZ6IJhe70gQF7vE1udiFJigF9xCbXOxCE5SCe5RNLnahCUo3XanYhSYoBfdYm1zsQhOUgnu4TS52pQkK3CNucrErTVDgHnSTi11pggL3uJtc7EoTFLiH3uRiV5qgwD36Jhe70gQF7gE4udiVJihwj8HJxa40QYF7GE4udqUJCtwjcXKxK01Q4B6Mk4tdaYIC93icXOxKExS4h+TkYleaoMA9KicXu9IEBe6BObnYlSYocI/NycWuNEGBe3hOLnalCQrcI3RysStNUOAepJOLXWmCAvc4nVzsShMUuIfq5GJXmqDAPVonF7vSBAXuATu52JUmKHCP2cnFrjRBgXvYTi52pQkK3CN3crErTVDgHryTi11pggL3+J1c7EoTFLiH8ORiV5qgwD2KJxe70gQF7oE8udiVJihwj+XJxa40QYF7OE8udqUJCtwjenKxK01Q4B7Uk4tdaYIC97ieXOxKExS4h/bkYleaoMA9uicXu9IEBe4BPrnYlSYocI/xycWuNEGt5EmuK3mS60qe5LqSJ7mu5EmuK3mS60qe5LqSJ7mu5EmuK3mS60qe5LqSJ7mt5EluK3mS20qe5LaSJ7ltulKxC01QtpInua3kSW4reZLbSp7ktpInua3kSW4reZLbSp7ktpInua3kSW4reZIbsSf5I3zemegRPu+U8xk+uhN4Mdvhu57DB59EevDBZ4sefPBp4SX8ks7hKzd8cEXvwQfX6LoDkSoXzj646vbgg6tuDz646nbgo3sMV5Mdft3O4IO7GarndHxtVzuHj/TuPwJC0tFHQEjK+Ajoe2vdAcUuX4c/l3NEDoeowCGqcIgaGqLvbuLWR5TgEGU4RAKHSOEQwXG2wXG2wXG2wXG2wXG2w3G2w3G2w3G2w3G2w3G2w3G2w3G2w3G2w3G2w3F2gePsAsfZBY6zCxxnFzjOLnCcXeA4u8BxdoHj7ALH2RWOsyscZ1c4zq5wnF3hOLvCcXaF4+wKx9kVjrMrHGc3OM5ucJzd4Di7wXF2g+PsBsfZDY6zGxxnNzjObmic7RsaZ/uGxtm+oXG2b2ic7RsaZ/uGxtm+oXG2b2ic7RsaZ/sGx9kJjrMTHGcnOM5OcJyd4Dg7wXF2guPsBMfZCY6zExxnZzjOznCcneE4O8Nxdobj7AzH2RmOszMcZ2c4zs5wnC1wnC1wnC1wnC1wnC1wnC1wnC1wnC1wnC1wnC1wnK1wnK1wnK1wnK1wnK1wnA23B+lwe5AOtwfpcHuQDrcH6XB7kA63B+lwe5AOtwfpcHuQDrcH6XB7kA63B+lwe5AOtwfpcHuQDrcH6XB7kA63B+lwe5AOtwfpcHuQDrcH6XB7kA63B+lwe5AOtwfpcHuQDrcH6XB7kA63B+lwe5AOtwfpcHuQDrcH6XB7kA63B+lwe5AOtwfpcHuQDrcH6XB7kA63B+lwe5AOtwfpcHuQDrcH6XB7kA63B+lwe5AOtwfpcHuQDrcH6XB7kA63B1ng9iAL3B5kgduDLHB7kGVD4+wCtwdZ4PYgC9weZIHbgyxwe5AFbg+ywO1BFrg9yAK3B1ng9iAL3B5keYsdv7btiGwrXyN6g20x8xeIynaGSOAQvfZkPwbZSJCPBF2WXTsFmdSvg65s5XSCLv9oDg9qj0GHJxJnQdoLOhD+WVAZCaojQW0g6Mr348v+eyZTaeUsKI0E5ZEgGQm6/HMqWvagcnb2rnyduhPkI0FlJKiOBLWBoCvfvu0EpZGgPBIkI0EjJ8JGToSNnAgbORE2ciJs5ET4yInwkRPhIyfCR06Ej5wIHzkRPnIifORE+MiJ8JETUUZORBk5EWXkRJSRE1FGTkQZORFl5ESUkRNRRk5EGTkRdeRE1JETUUdORB05EXXkRNSRE1FHTkQdORF15ETUkRPRRk5EGzkRbeREtJET0UZORBs5EW3kRLSRE9FGTkQbOBF120aC0khQHgmSkSAdCbKRIB8JKiNBdSRo5ESkkRNx5aHq4U77dE/4xQ3/hccqzfX4WKWV08VenzLkCRna8WLbXjysOmaQ8Az6zRlsk7Zn0PMMNiND3TOYn2XwCRnK6V1q6SxDmZyhnWWo354hpf1dSvk8Q4vOcMWs7HUZ9ufJltzOMqTwDDk8w2t7+jFIR4J8JKgMBF15Tmrm+8PVks6CfCSojARdeU6a9qfg/uI0X3nC7rI/Ya8vnvk+JWjBCa48f52YIEUnyNEJJDqBRiew6AQenaBEJ4juZI3uZIvuZIvuZIvuZIvuZIvuZIvuZIvuZIvuZIvuZIvuZI/uZI/uZI/uZI/u5Cufz/h2SqD2TTf5Vz7MeV2Gm7fgVz75mZmhfHOGzk3+lc+UXpnh1k3+lQ+gXpfh5k3+lU+rxjOc3SBf+WjrVRlu34Jf+RxsZgaZkOHmDXLR8AwWnuG1Pf0YVEaC2kBQ3UaC0khQHgn6/t9jtJyOr72ZnBA9fSOuvsGOZw9RgUNU4RA1NERvsOPZQ5TgEGU4RAKHSOEQwXF2g+PsBsfZDY6zGxpntzfYXzx8hnFCVM8RCRwihUNkcIgcDlGBQ1ThEDU0RG+wv9hDlOAQwXF2guPsBMfZCY6zExxnJzjOTnCcneA4O8Nxdobj7AzH2RmOszMcZ2c4zs5wnJ3hODvDcXaG42yB42yB42yB42yB42yB42yB42yB42yB42yB42yB42yF42yF42yF42yF42yF42yF42yF42yF42yF42yF42yD42yD42yD42yD42yD42yD42yD42yD42yD42yD42yH42yH42yH42yH42yH42yH42yH42yH42yH42yH4+wCx9kFjrMLHGcXOM4ucJxd4Di7wHF2gePsAsfZBY6zKxxnVzjOrnCcXeE4u8JxdoXj7ArH2RWOsyscZ1c4zm5wnN3gOLvBcXaD4+wGx9kNjrMbHGc3OM5ucJzd0Dg7bRsaaR8gvQFrX/+9QK+8/KkCqN+1dH65Vzki8Wr5hOQZPtQvZno9fOWGb9zwnRt+4YZf0eHXo2Gtt62ewW/U8N9iQ3UmfHDh7cGHV93b8OFV9zZ8eNW9DR9edW/Dh1fd2/DhVfc2fG7VTdyqm7lVN3OrLtbvFX49fG7VfYu96JnwuVU3c6tu5lbdzK26mVt1hVt1hVt1hVt1hVt132KzfSZ8btUVbtUVbtUVbtUVbtVVbtVVbtVVbtVVbtV9C2+CmfC5VVe5VVe5VVe5VVe5Vde4Vde4Vde4Vde4Vfct3CVmwudWXeNWXeNWXeNWXeNWXedWXedWXedWXedW3bfwB5kJn1t1nVt1nVt1nVt1nVt1C7fqFm7VLdyqW7hV9y0cXmbC51bdwq26hVt1C7fqFm7VrdyqW7lVt3KrbuVW3bfw6JkJn1t1K7fqVm7VrdyqW7lVt3GrbuNW3catuo1bdd/CZWkmfG7Vbdyq27hVt3GrbqNW3bRRq25Ct6fqwadW3YTvTXUbPrXqJnxvqtvwqVU34XtT3YZPrbqJ25sqcXtTJW5vqsTtTZW4vakStzdV4vamStzeVInbmypxe1Mlbm+qxO1Nlbi9qRK3N1Xi9qZK3N5UidubKnF7UyVub6rE7U2VuL2pErc3VeL2pkrw3lRtR+JNzuGjq24HPrrqduCjq24HPrrqduCjq24HPrrqduCjq+5t+PDeVB34ULL1BAlKip4gQcnLEyQoyXiC9L2JqDVvOyKVfLsTpDZ9vlraVk6vLfqE/7s7xrwOv6ZyxK95swv4Mzl+Icev5PiNHL+T4y/k+LH5v4+/geO3dBP/d7eOmY0fXX97+NH1t4cfXH+znPDbdgE/uP528YPrbxc/uP528YPrbxc/uP528YPrbw9/Adff3I5AVNIl/OD628UPrr9d/Oj628OPrr+1nvCnC/jR9beHH11/e/jR9beHH11/e/jR9beDv6Lrbw8/uv6+xF8v4EfX3x5+dP3t4QfXX61yfG1tl/CD628XP7j+dvGD628XP7j+quUT/vYF/vOrc23l+erc8uml5fDk7qlacLWeW20D1/bJ1YJPApOrBZ8bJlcLPmVMrlaXqhZ9gplbLfq8M7da9OlobrVLzVJtpVkqbyvNUnlbaZbK2z3prZVjsVbbi1rzc633xMi+HYH45hdq5eXjJ/y8DPuIP/Fy5hN+cBa0vD/bfPnV8su9knR/aT99j/sQ9lQq+O3kzFLB7yVnlgoubK8rVfJean1Z6usU/wIM8f07KlJPV3/Ocn6x789TX8hr9uc3HPxe9v7ecPDb6ft7w8Hnx/t7w8GH2Pt7w8GnbpA3XDffh+ekL9/wx3cxg8/+JO/iXd2BxL2LevqQW9v5u3hXNzeB7+LpdvhFifu7eFf3TfVY6+HJ7tl903f3I3vDUu/qjuV2qfd0r3Box2Opms5LvacpvVPqPc3HnVLRJ9O67wrbpeepAj4Tet7vIVztAn7waayLH3wO6uIHn0C6+JUcP/is0MUPPgB08YOrehc/uFR38YPrbw+/kuuvkuuvkuuvkuvvd3ekm42fXH+VXH+VXH/BvQb7+Mn118j1F93rsYufXH/RvR67+Mn1F93rsYufXH/RvR67+Mn1F93rsYcf3euxi59cf9G9Hrv4yfUX3euxi59cf9G9Hrv4yfUX3euxi59cf9G9Hrv4yfUX3euxi59cf9G9Hrv4yfUX3euxi59cf9G9Hrv4yfUX3euxi59cf9G9Hrv4yfUX3euxi59cf9G9Hrv4yfUX3euxi59cf9H9GLv4yfUX3TOxi59cf9F9Dbv4yfUX3Xuwi59cf9H9Abv4ufVX0D38uvi59Vc2bv2VjVt/ZePWX9m49Vc2bv0VdO/ILn5u/RV0P8gefnQ/yC5+cv1FN3ns4ifXX3Q7xi5+cv1FNwvs4ifXX3Qruy5+cv1F92Tr4ifXX3Qfsi5+cv1Ft/Xq4ifXX3QDri5+cv1Ft8rq4ifXX3L/KyH3vxJy/ysh978Scv8rIfe/EnL/KyH3vxJy/ysh978Scv8rIfe/EnL/KyH3vxJy/ysh978Scv8rIfe/EnL/KyH3vxJy/ysh978Scv8rIfe/EnL/KyH3vxJy/ysh978Scv8rIfe/EnL/KyH3vxJy/ysh978Scv8rIfe/EnL/KyH3vxJy/ysh978Scv8oIfePEnL/KCH3jxJ0/yK10y/A/Or3l51fbeX4uzXtxS8Rli0/1wrOta+q1dPx19J5lgu1gvPyzFrRPZSm1gquV1NrBde219W6tb1WvVAruA5OrRVcM6fWCn5/OLVW8HvJqbXe09zUq/Wu5qZOrXc1N21HIL75ea3o3ldTa72rualT633NTbdrva+56XatulCt9zU33a71vuam27Xe19x0u9b7mptu17rO3KTonmVTa11nblJ0L7Spta4zN+mma9T6x+Gv/3336/t3P334+bdDyOf/+5+Pf//0/pePz3/99L9/P/2fw8X/Bw==",
      "brillig_names": [
        "balance_of_private"
      ]
    },
    {
      "name": "un_balance_of_public",
      "is_unconstrained": true,
      "custom_attributes": [],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "owner",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "kind": "field"
          },
          "visibility": "public"
        }
      },
      "bytecode": "H4sIAAAAAAAA/7VWyU7rMBRNXprXuKTvMSzZmB9AKZNYIFSGDRsWILGtQmOgom2k2AjE15OovnB6ZQoC90rJdTyccyc7DoOZhPZpJIY+LtTXtzr7nfQ8YmUht7N5tb7hTKP/OOZJaB9ZfW3KKr9XUo9LIzM5rd/5eFw+q2Jb4piWkydtpDZ5ZeRdVU5kbxuxd6G9afWwRpKmlLnWqjKDSf4yuB2ZgR69qne7jq0WzOaWx6QIFiNv2Id7+yKYz4lvu+PlYGftGuMsmWGR/cTVrZ/ItmlOYnNE4+e2n+ZtQB/lNq2ff7Z9r8zpuBw+Xj5NblWFleOqaKx0lAZx/QPxrJyaKh+ak6KolNaIsGjTc8QOID7ko+lFgav+/gzpRlV6VE5xVfubSE2cE/juW539Tg5E8JFD3/XUBe/Rj5Xl8O3yGGK1EGcHbPK9N0PgIX7ionOsiUnKbFqFvgRsSxlWyrBwXbRgHbdBWDuWEIOdNcuXgr/EiT6LYL42PPFnGMM4mM8756ULgS/uEPLQstgJ449hzpbVdHqhRLAG61iw774f23vdYP58IS6sK591smivRhCzZDn8PcwV8RMX7ZOmhql+9Ozec6XyAq9UGB6uuYuhw9UY2nh0dJhpfN0i+Q9YGD5+NNE3HicJsyV02MLDxH/MeOQIh000N3Lw0Rq8nvWt/iqnd19IAHa1gZu4Yhjfs/qzremKE21twuPbyZULAXrlBz7zsuYd6PNn8cZ8dhzjPDe4puvAxKsijr0BGOcL14gNAAA=",
      "debug_symbols": "7ZrRbuowDIbfpddcxI7jOLzK0dEEG0yVqjIBO9IR4t1PYSTtaM7KBNIoyQ1QcJ3//1oV2+2ueFnM31+fynq52hTTX7uiWj3PtuWqbrZ2+0kxX5dVVb4+db8u1OHFHcM3b7P6sLXZztbbYqomxaJ+ad6bXZdltSimlvaTXpgVdwoUZUMoKB2JNWhOsca0aUGr/e9JAeoKFUI+UBgHVJD2iomlpwKuUSH2FOgUDKhg5Vkwck8FXqHCBcpOy5AK8Umt6h8RHVOBQtrv1Hw2PKAGAhPunB9WIrFgfGJwrXIdVe6M6JCY2mOuQaLR5DMr1QajO/qkRHyaRHxyIj5tIj4lEZ8uDZ+oEvEJifjERHwmUg8hJeIzkXoIE6mH8Bb1ECjCsIRzA04vbMmY2Td7otuUYo+yZZyy3ShlazVO2TBO2ThO2Zf803eGR3HZBvyVDUx3EtOs0Y9GQD+WQuhOx6JXTWgGTOESy25wyiN+ykOduRSp2HSMfWIS/BR74ELJctHiz0GjpMfFZC5RLpy5RLnYzCXKRTKXKBeXucS4kMpcolzgsbhYHbjgVVwwc4lyebB692Zc6Ae4AAUubIa4MHuKwLY7a+GjfjNy/Txy/fbu9bejOrbuk/5Ib6jb5lB3ukOWaCOpQyPZJsYPLpK5RLm4zCXGxajMJcoFMpcoF3wsLqT8sJIIqMvlYFanZJYezCyFs5jInZu9//Ltm2YxmDVybvb+a70bmr2kMBT42mxz48Q/6dmsoM6XkJssYf67xL7Z+jNbl7N5tTg9Yrx8r587Txxv/759/NIE/wM=",
      "brillig_names": [
        "un_balance_of_public"
      ]
    },
    {
      "name": "compute_note_hash_and_optionally_a_nullifier",
      "is_unconstrained": true,
      "custom_attributes": [],
      "abi": {
        "error_types": {},
        "parameters": [
          {
            "name": "contract_address",
            "type": {
              "fields": [
                {
                  "name": "inner",
                  "type": {
                    "kind": "field"
                  }
                }
              ],
              "kind": "struct",
              "path": "protocol_types::address::aztec_address::AztecAddress"
            },
            "visibility": "private"
          },
          {
            "name": "nonce",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          },
          {
            "name": "storage_slot",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          },
          {
            "name": "note_type_id",
            "type": {
              "kind": "field"
            },
            "visibility": "private"
          },
          {
            "name": "compute_nullifier",
            "type": {
              "kind": "boolean"
            },
            "visibility": "private"
          },
          {
            "name": "serialized_note",
            "type": {
              "kind": "array",
              "length": 3,
              "type": {
                "kind": "field"
              }
            },
            "visibility": "private"
          }
        ],
        "return_type": {
          "abi_type": {
            "kind": "array",
            "length": 4,
            "type": {
              "kind": "field"
            }
          },
          "visibility": "public"
        }
      },
      "bytecode": "",
      "debug_symbols": "",
      "brillig_names": [
        "compute_note_hash_and_optionally_a_nullifier"
      ]
    }
  ],
  "outputs": {
    "globals": {
      "notes": [
        {
          "fields": [
            {
              "kind": "integer",
              "sign": false,
              "value": "00000000000000000000000000000000000000000000000000000000be5b3a47"
            },
            {
              "kind": "string",
              "value": "TransparentNote"
            }
          ],
          "kind": "tuple"
        },
        {
          "fields": [
            {
              "kind": "integer",
              "sign": false,
              "value": "000000000000000000000000000000000000000000000000000000008c1acdbf"
            },
            {
              "kind": "string",
              "value": "TokenNote"
            }
          ],
          "kind": "tuple"
        }
      ],
      "storage": [
        {
          "fields": [
            {
              "name": "admin",
              "value": {
                "fields": [
                  {
                    "name": "slot",
                    "value": {
                      "kind": "integer",
                      "sign": false,
                      "value": "0000000000000000000000000000000000000000000000000000000000000001"
                    }
                  }
                ],
                "kind": "struct"
              }
            },
            {
              "name": "minters",
              "value": {
                "fields": [
                  {
                    "name": "slot",
                    "value": {
                      "kind": "integer",
                      "sign": false,
                      "value": "0000000000000000000000000000000000000000000000000000000000000002"
                    }
                  }
                ],
                "kind": "struct"
              }
            },
            {
              "name": "balances",
              "value": {
                "fields": [
                  {
                    "name": "slot",
                    "value": {
                      "kind": "integer",
                      "sign": false,
                      "value": "0000000000000000000000000000000000000000000000000000000000000003"
                    }
                  }
                ],
                "kind": "struct"
              }
            },
            {
              "name": "total_supply",
              "value": {
                "fields": [
                  {
                    "name": "slot",
                    "value": {
                      "kind": "integer",
                      "sign": false,
                      "value": "0000000000000000000000000000000000000000000000000000000000000004"
                    }
                  }
                ],
                "kind": "struct"
              }
            },
            {
              "name": "pending_shields",
              "value": {
                "fields": [
                  {
                    "name": "slot",
                    "value": {
                      "kind": "integer",
                      "sign": false,
                      "value": "0000000000000000000000000000000000000000000000000000000000000005"
                    }
                  }
                ],
                "kind": "struct"
              }
            },
            {
              "name": "public_balances",
              "value": {
                "fields": [
                  {
                    "name": "slot",
                    "value": {
                      "kind": "integer",
                      "sign": false,
                      "value": "0000000000000000000000000000000000000000000000000000000000000006"
                    }
                  }
                ],
                "kind": "struct"
              }
            },
            {
              "name": "symbol",
              "value": {
                "fields": [
                  {
                    "name": "slot",
                    "value": {
                      "kind": "integer",
                      "sign": false,
                      "value": "0000000000000000000000000000000000000000000000000000000000000007"
                    }
                  }
                ],
                "kind": "struct"
              }
            },
            {
              "name": "name",
              "value": {
                "fields": [
                  {
                    "name": "slot",
                    "value": {
                      "kind": "integer",
                      "sign": false,
                      "value": "0000000000000000000000000000000000000000000000000000000000000008"
                    }
                  }
                ],
                "kind": "struct"
              }
            },
            {
              "name": "decimals",
              "value": {
                "fields": [
                  {
                    "name": "slot",
                    "value": {
                      "kind": "integer",
                      "sign": false,
                      "value": "0000000000000000000000000000000000000000000000000000000000000009"
                    }
                  }
                ],
                "kind": "struct"
              }
            }
          ],
          "kind": "struct"
        }
      ]
    },
    "structs": {
      "events": [
        {
          "fields": [
            {
              "name": "from",
              "type": {
                "fields": [
                  {
                    "name": "inner",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "protocol_types::address::aztec_address::AztecAddress"
              }
            },
            {
              "name": "to",
              "type": {
                "fields": [
                  {
                    "name": "inner",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "protocol_types::address::aztec_address::AztecAddress"
              }
            },
            {
              "name": "amount",
              "type": {
                "kind": "field"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::Transfer"
        }
      ],
      "functions": [
        {
          "fields": [
            {
              "name": "return_type",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 8
              }
            }
          ],
          "kind": "struct",
          "path": "Token::public_get_decimals_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "amount",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::privately_mint_private_note_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::privately_mint_private_note_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "fee_payer",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "user",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "funded_amount",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "user_randomness",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "fee_payer_randomness",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::setup_refund_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::setup_refund_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "admin",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "name",
                    "type": {
                      "kind": "string",
                      "length": 31
                    }
                  },
                  {
                    "name": "symbol",
                    "type": {
                      "kind": "string",
                      "length": 31
                    }
                  },
                  {
                    "name": "decimals",
                    "type": {
                      "kind": "integer",
                      "sign": "unsigned",
                      "width": 8
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::constructor_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::constructor_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "fee_payer_point_immutable",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "fields": [
                              {
                                "name": "x",
                                "type": {
                                  "kind": "field"
                                }
                              },
                              {
                                "name": "y",
                                "type": {
                                  "kind": "field"
                                }
                              },
                              {
                                "name": "is_infinite",
                                "type": {
                                  "kind": "boolean"
                                }
                              }
                            ],
                            "kind": "struct",
                            "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "types::token_note::TokenNoteHidingPoint"
                    }
                  },
                  {
                    "name": "user_point_immutable",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "fields": [
                              {
                                "name": "x",
                                "type": {
                                  "kind": "field"
                                }
                              },
                              {
                                "name": "y",
                                "type": {
                                  "kind": "field"
                                }
                              },
                              {
                                "name": "is_infinite",
                                "type": {
                                  "kind": "boolean"
                                }
                              }
                            ],
                            "kind": "struct",
                            "path": "std::embedded_curve_ops::EmbeddedCurvePoint"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "types::token_note::TokenNoteHidingPoint"
                    }
                  },
                  {
                    "name": "funded_amount",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::complete_refund_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::complete_refund_abi"
        },
        {
          "fields": [
            {
              "name": "return_type",
              "type": {
                "kind": "field"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::total_supply_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "to",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "amount",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "secret",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::redeem_shield_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::redeem_shield_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "to",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "amount",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::mint_public_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::mint_public_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "from",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "amount",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nonce",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::burn_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::burn_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "amount",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "secret_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::mint_private_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::mint_private_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "minter",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::is_minter_parameters"
              }
            },
            {
              "name": "return_type",
              "type": {
                "kind": "boolean"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::is_minter_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "from",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "to",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "amount",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nonce",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::transfer_from_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::transfer_from_abi"
        },
        {
          "fields": [
            {
              "name": "return_type",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 8
              }
            }
          ],
          "kind": "struct",
          "path": "Token::private_get_decimals_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "from",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "amount",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nonce",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::burn_public_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::burn_public_abi"
        },
        {
          "fields": [
            {
              "name": "return_type",
              "type": {
                "fields": [
                  {
                    "name": "value",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "compressed_string::field_compressed_string::FieldCompressedString"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::public_get_name_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "minter",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "approve",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::set_minter_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::set_minter_abi"
        },
        {
          "fields": [
            {
              "name": "return_type",
              "type": {
                "kind": "field"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::get_admin_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "minter",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "amount",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::assert_minter_and_mint_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::assert_minter_and_mint_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "from",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "to",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "amount",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nonce",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::transfer_public_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::transfer_public_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "owner",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::balance_of_public_parameters"
              }
            },
            {
              "name": "return_type",
              "type": {
                "kind": "field"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::balance_of_public_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "new_admin",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::set_admin_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::set_admin_abi"
        },
        {
          "fields": [
            {
              "name": "return_type",
              "type": {
                "fields": [
                  {
                    "name": "value",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "compressed_string::field_compressed_string::FieldCompressedString"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::private_get_symbol_abi"
        },
        {
          "fields": [
            {
              "name": "return_type",
              "type": {
                "fields": [
                  {
                    "name": "value",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "compressed_string::field_compressed_string::FieldCompressedString"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::public_get_symbol_abi"
        },
        {
          "fields": [
            {
              "name": "return_type",
              "type": {
                "fields": [
                  {
                    "name": "value",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "compressed_string::field_compressed_string::FieldCompressedString"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::private_get_name_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "from",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "to",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "amount",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nonce",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::unshield_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::unshield_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "to",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "amount",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::_increase_public_balance_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::_increase_public_balance_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "amount",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::_reduce_total_supply_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::_reduce_total_supply_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "account",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "amount",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::_recurse_subtract_balance_parameters"
              }
            },
            {
              "name": "return_type",
              "type": {
                "fields": [
                  {
                    "name": "lo",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "hi",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "std::uint128::U128"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::_recurse_subtract_balance_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "to",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "amount",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::transfer_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::transfer_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "inner_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::cancel_authwit_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::cancel_authwit_abi"
        },
        {
          "fields": [
            {
              "name": "parameters",
              "type": {
                "fields": [
                  {
                    "name": "from",
                    "type": {
                      "fields": [
                        {
                          "name": "inner",
                          "type": {
                            "kind": "field"
                          }
                        }
                      ],
                      "kind": "struct",
                      "path": "protocol_types::address::aztec_address::AztecAddress"
                    }
                  },
                  {
                    "name": "amount",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "secret_hash",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nonce",
                    "type": {
                      "kind": "field"
                    }
                  }
                ],
                "kind": "struct",
                "path": "Token::shield_parameters"
              }
            }
          ],
          "kind": "struct",
          "path": "Token::shield_abi"
        }
      ]
    }
  },
  "file_map": {}
}
